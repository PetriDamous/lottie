{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/lottie-web/build/player/lottie.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","navigator","root","factory","undefined","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bmRnd","bmPow","Math","pow","bmSqrt","sqrt","bmFloor","floor","bmMax","max","bmMin","min","BMMath","ProjectInterface","propertyNames","len","length","random","abs","val","tOfVal","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","round","styleDiv","element","style","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","type","currentTime","totalTime","frameMultiplier","this","direction","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","firstFrame","totalFrames","BMDestroyEvent","target","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","BMAnimationConfigErrorEvent","createElementID","_count","HSVtoRGB","h","v","g","b","f","q","t","RGBtoHSV","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","triggerEvent","eventName","args","_cbs","addEventListener","callback","push","removeEventListener","bind","splice","createTypedArray","createRegularArray","arr","Uint8ClampedArray","Float32Array","Int16Array","Array","apply","createNS","document","createElementNS","createTag","createElement","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","container","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","mode","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","props","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","a","e","j","k","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","pt","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","_a","_b","_c","_d","_e","_f","pool","math","nodecrypto","global","width","chunks","rngname","startdenom","significance","overflow","mask","copy","S","slice","mixkey","seed","key","smear","stringseed","charCodeAt","tostring","String","fromCharCode","options","shortseed","flatten","obj","depth","result","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","keylen","me","count","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_mSampleValues","_precomputed","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope","aGuessT","currentSlope","currentX","newtonRaphsonIterate","aA","aB","currentT","binarySubdivide","extendPrototype","sources","destination","sourcePrototype","attr","getDescriptor","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezierLengthPool","newElement","percents","lengths","PointData","partial","partialLength","buildBezierData","storedData","bezierName","bezierData","segmentLength","getDistancePerc","initPos","lengthPos","lPerc","dir","bezierSegmentPoints","getSegmentsLength","shapeData","segmentsLength","segmentsLengthPool","closed","pathV","pathO","pathI","_length","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","ptX","ptY","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","convertPathsToAbsoluteValues","findCompLayers","refId","completeShapes","shapes","completeText","__used","JSON","parse","stringify","ks","it","path","checkVersion","minimum","animVersionString","animVersion","split","checkText","minimumVersion","updateTextLayer","textLayer","documentData","iterateLayers","animationData","assets","checkChars","chars","pathData","paths","data","__converted","checkColors","iterateShapes","checkShapes","completeClosingShapes","cl","singleShape","moduleOb","completeData","__complete","dataManager","getFontProperties","fontData","styles","fStyle","fWeight","toLowerCase","weight","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","setAttribute","fontFamily","node","innerText","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","familyArray","enabledFamilies","join","trimFontOptions","parent","createHelper","def","tHelper","fontProps","fFamily","textContent","fClass","tCanvasHelper","getContext","concat","Font","fonts","typekitLoaded","isLoaded","_warned","initTime","now","setIsLoadedBinded","setIsLoaded","checkLoadedFontsBinded","checkLoadedFonts","getCombinedCharacterCodes","fontPrototype","addChars","found","ch","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","origin","querySelectorAll","href","rel","src","sc","helper","cache","getCharData","char","console","warn","getFontByName","fName","measureText","fontName","index","doubleSize","getComputedTextLength","singleSize","loadedCount","removeChild","PropertyFactory","initFrame","mathAbs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","endValue","nextKeyTime","keyTime","to","ti","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","time","quat","qx","qy","qz","qw","heading","atan2","attitude","asin","bank","quaternionToEuler","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","slerp","constructor","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","getProp","vel","st","arrLen","TransformPropertyFactory","defaultVector","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","or","sk","sa","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","frameRate","autoOriented","v1","v2","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","pointPool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","resetShape","localShapeCollection","shape1","shape2","shapesEqual","shapePool","releaseShapes","addShape","ShapeProperty","shapeCollectionPool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","EllShapePropertyFactory","convertEllToPath","s0","_cw","_v","StarShapeProperty","StarShapePropertyFactory","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","RectShapePropertyFactory","convertRectToPath","v0","getShapeProp","dataProp","keys","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","PuckerAndBloatModifier","RepeaterModifier","ShapeCollection","DashProperty","renderer","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","_s","totalShapeLength","edges","newShapesData","addShapes","lastShapeInCollection","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","clonedPath","currentV","currentI","currentO","closerV","distance","newPosPerc","amount","centerPoint","pathLength","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","hasReloaded","copies","ceil","group","ix","reloadShapes","elems","transformData","op","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","audioControllerFactory","AudioController","audioFactory","audios","_volume","_isMuted","addAudio","audio","pause","resume","setRate","rateValue","createAudio","assetPath","Howl","isPlaying","play","seek","playing","rate","setVolume","setAudioFactory","_updateVolume","mute","unmute","getVolume","volume","ImagePreloader","proxyImage","canvas","height","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","loadedFootagesCount","totalFootages","imagesLoadedCb","footageLoaded","getAssetsPath","assetData","assetsPath","originalPath","imagePath","u","ImagePreloaderFactory","_imageLoaded","_footageLoaded","testImageLoaded","img","intervalId","setInterval","box","getBBox","clearInterval","createFootageData","assetLoader","load","footageData","images","loadAssets","cb","_createImageData","setAssetsPath","setPath","loadedImages","loadedFootages","destroy","getAsset","createImgData","crossOrigin","createImageData","setAttributeNS","_elementHelper","append","setCacheType","elementHelper","featureSupport","maskType","filtersFactory","createFilter","filId","skipCoordinates","fil","createAlphaToLuminanceFilter","feColorMatrix","formatResponse","xhr","response","responseText","errorCallback","XMLHttpRequest","responseType","err","onreadystatechange","readyState","status","open","send","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimatorAnimatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","animatorSelector","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charCode","charactersArray","charAt","substr","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","TextSelectorPropFactory","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","poolFactory","initialLength","_create","_release","pooling","cloned","shapeCollection","markerParser","parsePayloadLines","payload","lines","keysCount","trim","Error","_markers","markers","_marker","markerData","tm","duration","dr","cm","_","__","BaseRenderer","SVGRenderer","animationItem","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","focusable","filterSize","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","lastPath","filterID","expan","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","createFootage","AudioElement","FootageElement","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","audioController","fr","compSize","NullElement","SVGShapeElement","SVGTextLottieElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","containerStyle","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","tmpDOMElement","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","webkitPerspective","perspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","component","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","stop","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","createRenderFunction","renderFill","renderGradient","renderGradientStroke","renderStroke","renderPath","renderContentTransform","styleData","itemData","pathStringTransformed","redraw","iterations","lLen","styleElem","hasOpacity","attr1","attr2","cValues","oValues","ang","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","_isPlaying","_canPlay","_currentTime","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGGaussianBlurEffect","feGaussianBlur","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","getElements","destroyElements","pr","volumeValue","FootageInterface","getFootageData","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","textBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","GradientConstructor","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","shapeProperty","fn","setElementStyles","render","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","sigma","dimensions","sigmaX","sigmaY","edgeMode","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","outputDelta","inputDelta","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","forceRealStack","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","transformedElementStyle","matrixValue","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","changed","shapeStyle","shapeTransform","compW","compH","innerElemStyle","textColor","strokeWidth","lineHeight","tParent","tCont","tContStyle","tContTranslation","tStyle","tSpanTranslation","svgStyle","translation","textPath","margin","svgTransform","Image","imageElem","perspectiveStyle","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","mRotationX","mRotationY","hasMatrixChanged","matValue","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","activate","nowTime","elapsedTime","advanceTime","first","loadAnimation","params","setParams","setSpeed","setDirection","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","lenAnims","getElementsByTagName","div","resize","goToAndStop","isFrame","freeze","unfreeze","getRegisteredAnimations","animations","currentRawFrame","frameMult","playSpeed","playDirection","playCount","autoplay","loop","animationID","timeCompleted","segmentPos","isSubframeEnabled","_idle","_completedLoop","animType","rendererSettings","parseInt","autoloadSegments","initialSegment","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","error","triggerConfigError","gotoFrame","setSubframe","triggerRenderFrameError","setCurrentRawFrameValue","getMarkerData","markerName","marker","numValue","Number","isNaN","frameModifier","goToAndPlay","playSegments","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","onError","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","expression","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","rndm","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","scoped_bm_rt","expression_function","eval","numKeys","active","wiggle","freq","amp","iWiggle","lenWiggle","addedAmps","periods","loopInDuration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","yaw","easeOut","val1","val2","applyEase","easeIn","ease","iKey","lenKey","nearestKey","obKey","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","substring","posterizeTime","framesPerSecond","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","getSpeedAtTime","speed","_cachingAtTime","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","endFrame","sampleFrequency","_transformCachingAtTime","anchor","skewAxis","rotationZ","rotationY","rotationX","orientation","positionX","positionY","positionZ","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","unitVector","tangentOnPath","normalOnPath","shapeValue","propertyGetShapeProp","trims","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","ShapePathInterface","view","interfaceFunction","_propertyGroup","propertyGroupFactory","PropertyInterface","defineProperties","_name","mn","parentPropertyGroup","propertyName","iterateElements","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","interfaces","numProperties","transformInterface","transformInterfaceFactory","cix","contentsInterfaceFactory","np","ExpressionPropertyInterface","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_sourceText","_thisLayerFunction","sourceText","stringValue","_prevValue","getMatrix","toWorldMat","propMatrix","toWorldVec","applyPoint","fromWorldVec","invertPoint","sampleImage","anchorPointDescriptor","TransformExpressionInterface","anchor_point","startTime","source","MaskManagerInterface","effects","dataInterfaceFactory","outlineInterface","currentPropertyName","currentProperty","propertyNameIndex","outlineInterfaceFactory","dataInterface","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_px","_py","_pz","_transformFactory","compositions","_thisProjectFunction","effectsData","createGroupInterface","groupInterface","createValueInterface","enabled","en","expressionProperty","MaskInterface","_mask","_data","_masksInterfaces","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","getValueProxy","total","propertyGetTextProp","TextExpressionSelectorPropFactory","eff","lottie","setLocationHref","setSubframeRendering","setQuality","inBrowser","installPlugin","plugin","getFactory","checkReady","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","getElementById"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","(typeof navigator !== \"undefined\") && (function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return factory(root);\n        });\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory(root);\n    } else {\n        root.lottie = factory(root);\n        root.bodymovin = root.lottie;\n    }\n}((window || {}), function(window) {\n\t/* global locationHref:writable, animationManager, subframeEnabled:writable, defaultCurveSegments:writable, roundValues,\r\nexpressionsPlugin:writable, PropertyFactory, ShapePropertyFactory, Matrix */\r\n/* exported locationHref, subframeEnabled, expressionsPlugin */\r\n\r\n'use strict';\r\n\r\n/* exported svgNS, locationHref, initialDefaultFrame */\r\n\r\nvar svgNS = 'http://www.w3.org/2000/svg';\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\n/* global createSizedArray */\r\n/* exported subframeEnabled, expressionsPlugin, isSafari, cachedColors, bmPow, bmSqrt, bmFloor, bmMax, bmMin, ProjectInterface,\r\ndefaultCurveSegments, degToRads, roundCorner, bmRnd, styleDiv, BMEnterFrameEvent, BMCompleteEvent, BMCompleteLoopEvent,\r\nBMSegmentStartEvent, BMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent, BMAnimationConfigErrorEvent, createElementID,\r\naddSaturationToRGB, addBrightnessToRGB, addHueToRGB, rgbToHex */\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bmRnd;\r\nvar bmPow = Math.pow;\r\nvar bmSqrt = Math.sqrt;\r\nvar bmFloor = Math.floor;\r\nvar bmMax = Math.max;\r\nvar bmMin = Math.min;\r\n\r\nvar BMMath = {};\r\n(function () {\r\n  var propertyNames = ['abs', 'acos', 'acosh', 'asin', 'asinh', 'atan', 'atanh', 'atan2', 'ceil', 'cbrt', 'expm1', 'clz32', 'cos', 'cosh', 'exp', 'floor', 'fround', 'hypot', 'imul', 'log', 'log1p', 'log2', 'log10', 'max', 'min', 'pow', 'random', 'round', 'sign', 'sin', 'sinh', 'sqrt', 'tan', 'tanh', 'trunc', 'E', 'LN10', 'LN2', 'LOG10E', 'LOG2E', 'PI', 'SQRT1_2', 'SQRT2'];\r\n  var i;\r\n  var len = propertyNames.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n  }\r\n}());\r\n\r\nfunction ProjectInterface() { return {}; }\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function (val) {\r\n  var tOfVal = typeof val;\r\n  if (tOfVal === 'object' && val.length) {\r\n    var absArr = createSizedArray(val.length);\r\n    var i;\r\n    var len = val.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      absArr[i] = Math.abs(val[i]);\r\n    }\r\n    return absArr;\r\n  }\r\n  return Math.abs(val);\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI / 180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag) {\r\n  if (flag) {\r\n    bmRnd = Math.round;\r\n  } else {\r\n    bmRnd = function (val) {\r\n      return val;\r\n    };\r\n  }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element) {\r\n  element.style.position = 'absolute';\r\n  element.style.top = 0;\r\n  element.style.left = 0;\r\n  element.style.display = 'block';\r\n  element.style.transformOrigin = '0 0';\r\n  element.style.webkitTransformOrigin = '0 0';\r\n  element.style.backfaceVisibility = 'visible';\r\n  element.style.webkitBackfaceVisibility = 'visible';\r\n  element.style.transformStyle = 'preserve-3d';\r\n  element.style.webkitTransformStyle = 'preserve-3d';\r\n  element.style.mozTransformStyle = 'preserve-3d';\r\n}\r\n\r\nfunction BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier) {\r\n  this.type = type;\r\n  this.currentTime = currentTime;\r\n  this.totalTime = totalTime;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteEvent(type, frameMultiplier) {\r\n  this.type = type;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier) {\r\n  this.type = type;\r\n  this.currentLoop = currentLoop;\r\n  this.totalLoops = totalLoops;\r\n  this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(type, firstFrame, totalFrames) {\r\n  this.type = type;\r\n  this.firstFrame = firstFrame;\r\n  this.totalFrames = totalFrames;\r\n}\r\n\r\nfunction BMDestroyEvent(type, target) {\r\n  this.type = type;\r\n  this.target = target;\r\n}\r\n\r\nfunction BMRenderFrameErrorEvent(nativeError, currentTime) {\r\n  this.type = 'renderFrameError';\r\n  this.nativeError = nativeError;\r\n  this.currentTime = currentTime;\r\n}\r\n\r\nfunction BMConfigErrorEvent(nativeError) {\r\n  this.type = 'configError';\r\n  this.nativeError = nativeError;\r\n}\r\n\r\nfunction BMAnimationConfigErrorEvent(type, nativeError) {\r\n  this.type = type;\r\n  this.nativeError = nativeError;\r\n}\r\n\r\nvar createElementID = (function () {\r\n  var _count = 0;\r\n  return function createID() {\r\n    _count += 1;\r\n    return '__lottie_element_' + _count;\r\n  };\r\n}());\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n  var r;\r\n  var g;\r\n  var b;\r\n  var i;\r\n  var f;\r\n  var p;\r\n  var q;\r\n  var t;\r\n  i = Math.floor(h * 6);\r\n  f = h * 6 - i;\r\n  p = v * (1 - s);\r\n  q = v * (1 - f * s);\r\n  t = v * (1 - (1 - f) * s);\r\n  switch (i % 6) {\r\n    case 0: r = v; g = t; b = p; break;\r\n    case 1: r = q; g = v; b = p; break;\r\n    case 2: r = p; g = v; b = t; break;\r\n    case 3: r = p; g = q; b = v; break;\r\n    case 4: r = t; g = p; b = v; break;\r\n    case 5: r = v; g = p; b = q; break;\r\n    default: break;\r\n  }\r\n  return [r,\r\n    g,\r\n    b];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n  var max = Math.max(r, g, b);\r\n  var min = Math.min(r, g, b);\r\n  var d = max - min;\r\n  var h;\r\n  var s = (max === 0 ? 0 : d / max);\r\n  var v = max / 255;\r\n\r\n  switch (max) {\r\n    case min: h = 0; break;\r\n    case r: h = (g - b) + d * (g < b ? 6 : 0); h /= 6 * d; break;\r\n    case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n    case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    default: break;\r\n  }\r\n\r\n  return [\r\n    h,\r\n    s,\r\n    v,\r\n  ];\r\n}\r\n\r\nfunction addSaturationToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[1] += offset;\r\n  if (hsv[1] > 1) {\r\n    hsv[1] = 1;\r\n  } else if (hsv[1] <= 0) {\r\n    hsv[1] = 0;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[2] += offset;\r\n  if (hsv[2] > 1) {\r\n    hsv[2] = 1;\r\n  } else if (hsv[2] < 0) {\r\n    hsv[2] = 0;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color, offset) {\r\n  var hsv = RGBtoHSV(color[0] * 255, color[1] * 255, color[2] * 255);\r\n  hsv[0] += offset / 360;\r\n  if (hsv[0] > 1) {\r\n    hsv[0] -= 1;\r\n  } else if (hsv[0] < 0) {\r\n    hsv[0] += 1;\r\n  }\r\n  return HSVtoRGB(hsv[0], hsv[1], hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function () {\r\n  var colorMap = [];\r\n  var i;\r\n  var hex;\r\n  for (i = 0; i < 256; i += 1) {\r\n    hex = i.toString(16);\r\n    colorMap[i] = hex.length === 1 ? '0' + hex : hex;\r\n  }\r\n\r\n  return function (r, g, b) {\r\n    if (r < 0) {\r\n      r = 0;\r\n    }\r\n    if (g < 0) {\r\n      g = 0;\r\n    }\r\n    if (b < 0) {\r\n      b = 0;\r\n    }\r\n    return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n  };\r\n}());\r\n\r\nfunction BaseEvent() {}\r\nBaseEvent.prototype = {\r\n  triggerEvent: function (eventName, args) {\r\n    if (this._cbs[eventName]) {\r\n      var len = this._cbs[eventName].length;\r\n      for (var i = 0; i < len; i += 1) {\r\n        this._cbs[eventName][i](args);\r\n      }\r\n    }\r\n  },\r\n  addEventListener: function (eventName, callback) {\r\n    if (!this._cbs[eventName]) {\r\n      this._cbs[eventName] = [];\r\n    }\r\n    this._cbs[eventName].push(callback);\r\n\r\n    return function () {\r\n      this.removeEventListener(eventName, callback);\r\n    }.bind(this);\r\n  },\r\n  removeEventListener: function (eventName, callback) {\r\n    if (!callback) {\r\n      this._cbs[eventName] = null;\r\n    } else if (this._cbs[eventName]) {\r\n      var i = 0;\r\n      var len = this._cbs[eventName].length;\r\n      while (i < len) {\r\n        if (this._cbs[eventName][i] === callback) {\r\n          this._cbs[eventName].splice(i, 1);\r\n          i -= 1;\r\n          len -= 1;\r\n        }\r\n        i += 1;\r\n      }\r\n      if (!this._cbs[eventName].length) {\r\n        this._cbs[eventName] = null;\r\n      }\r\n    }\r\n  },\r\n};\r\n\r\n/* exported createTypedArray, createSizedArray */\r\n\r\nvar createTypedArray = (function () {\r\n  function createRegularArray(type, len) {\r\n    var i = 0;\r\n    var arr = [];\r\n    var value;\r\n    switch (type) {\r\n      case 'int16':\r\n      case 'uint8c':\r\n        value = 1;\r\n        break;\r\n      default:\r\n        value = 1.1;\r\n        break;\r\n    }\r\n    for (i = 0; i < len; i += 1) {\r\n      arr.push(value);\r\n    }\r\n    return arr;\r\n  }\r\n  function createTypedArrayFactory(type, len) {\r\n    if (type === 'float32') {\r\n      return new Float32Array(len);\r\n    } if (type === 'int16') {\r\n      return new Int16Array(len);\r\n    } if (type === 'uint8c') {\r\n      return new Uint8ClampedArray(len);\r\n    }\r\n    return createRegularArray(type, len);\r\n  }\r\n  if (typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n    return createTypedArrayFactory;\r\n  }\r\n  return createRegularArray;\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n  return Array.apply(null, { length: len });\r\n}\r\n\r\n/* global svgNS */\r\n/* exported createNS */\r\n\r\nfunction createNS(type) {\r\n  // return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n  return document.createElementNS(svgNS, type);\r\n}\r\n\r\n/* exported createTag */\r\n\r\nfunction createTag(type) {\r\n  // return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n  return document.createElement(type);\r\n}\r\n\r\nfunction DynamicPropertyContainer() {}\r\nDynamicPropertyContainer.prototype = {\r\n  addDynamicProperty: function (prop) {\r\n    if (this.dynamicProperties.indexOf(prop) === -1) {\r\n      this.dynamicProperties.push(prop);\r\n      this.container.addDynamicProperty(this);\r\n      this._isAnimated = true;\r\n    }\r\n  },\r\n  iterateDynamicProperties: function () {\r\n    this._mdf = false;\r\n    var i;\r\n    var len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.dynamicProperties[i].getValue();\r\n      if (this.dynamicProperties[i]._mdf) {\r\n        this._mdf = true;\r\n      }\r\n    }\r\n  },\r\n  initDynamicPropertyContainer: function (container) {\r\n    this.container = container;\r\n    this.dynamicProperties = [];\r\n    this._mdf = false;\r\n    this._isAnimated = false;\r\n  },\r\n};\r\n\r\n/* exported getBlendMode */\r\n\r\nvar getBlendMode = (function () {\r\n  var blendModeEnums = {\r\n    0: 'source-over',\r\n    1: 'multiply',\r\n    2: 'screen',\r\n    3: 'overlay',\r\n    4: 'darken',\r\n    5: 'lighten',\r\n    6: 'color-dodge',\r\n    7: 'color-burn',\r\n    8: 'hard-light',\r\n    9: 'soft-light',\r\n    10: 'difference',\r\n    11: 'exclusion',\r\n    12: 'hue',\r\n    13: 'saturation',\r\n    14: 'color',\r\n    15: 'luminosity',\r\n  };\r\n\r\n  return function (mode) {\r\n    return blendModeEnums[mode] || '';\r\n  };\r\n}());\r\n\r\n/* global createTypedArray */\r\n\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function () {\r\n  var _cos = Math.cos;\r\n  var _sin = Math.sin;\r\n  var _tan = Math.tan;\r\n  var _rnd = Math.round;\r\n\r\n  function reset() {\r\n    this.props[0] = 1;\r\n    this.props[1] = 0;\r\n    this.props[2] = 0;\r\n    this.props[3] = 0;\r\n    this.props[4] = 0;\r\n    this.props[5] = 1;\r\n    this.props[6] = 0;\r\n    this.props[7] = 0;\r\n    this.props[8] = 0;\r\n    this.props[9] = 0;\r\n    this.props[10] = 1;\r\n    this.props[11] = 0;\r\n    this.props[12] = 0;\r\n    this.props[13] = 0;\r\n    this.props[14] = 0;\r\n    this.props[15] = 1;\r\n    return this;\r\n  }\r\n\r\n  function rotate(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateX(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateY(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, 0, mSin, 0, 0, 1, 0, 0, -mSin, 0, mCos, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function rotateZ(angle) {\r\n    if (angle === 0) {\r\n      return this;\r\n    }\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function shear(sx, sy) {\r\n    return this._t(1, sy, sx, 1, 0, 0);\r\n  }\r\n\r\n  function skew(ax, ay) {\r\n    return this.shear(_tan(ax), _tan(ay));\r\n  }\r\n\r\n  function skewFromAxis(ax, angle) {\r\n    var mCos = _cos(angle);\r\n    var mSin = _sin(angle);\r\n    return this._t(mCos, mSin, 0, 0, -mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\r\n      ._t(1, 0, 0, 0, _tan(ax), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)\r\n      ._t(mCos, -mSin, 0, 0, mSin, mCos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\r\n    // return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n  }\r\n\r\n  function scale(sx, sy, sz) {\r\n    if (!sz && sz !== 0) {\r\n      sz = 1;\r\n    }\r\n    if (sx === 1 && sy === 1 && sz === 1) {\r\n      return this;\r\n    }\r\n    return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n  }\r\n\r\n  function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n    this.props[0] = a;\r\n    this.props[1] = b;\r\n    this.props[2] = c;\r\n    this.props[3] = d;\r\n    this.props[4] = e;\r\n    this.props[5] = f;\r\n    this.props[6] = g;\r\n    this.props[7] = h;\r\n    this.props[8] = i;\r\n    this.props[9] = j;\r\n    this.props[10] = k;\r\n    this.props[11] = l;\r\n    this.props[12] = m;\r\n    this.props[13] = n;\r\n    this.props[14] = o;\r\n    this.props[15] = p;\r\n    return this;\r\n  }\r\n\r\n  function translate(tx, ty, tz) {\r\n    tz = tz || 0;\r\n    if (tx !== 0 || ty !== 0 || tz !== 0) {\r\n      return this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, tx, ty, tz, 1);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n    var _p = this.props;\r\n\r\n    if (a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0) {\r\n      // NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n      // if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n      _p[12] = _p[12] * a2 + _p[15] * m2;\r\n      _p[13] = _p[13] * f2 + _p[15] * n2;\r\n      _p[14] = _p[14] * k2 + _p[15] * o2;\r\n      _p[15] *= p2;\r\n      // }\r\n      this._identityCalculated = false;\r\n      return this;\r\n    }\r\n\r\n    var a1 = _p[0];\r\n    var b1 = _p[1];\r\n    var c1 = _p[2];\r\n    var d1 = _p[3];\r\n    var e1 = _p[4];\r\n    var f1 = _p[5];\r\n    var g1 = _p[6];\r\n    var h1 = _p[7];\r\n    var i1 = _p[8];\r\n    var j1 = _p[9];\r\n    var k1 = _p[10];\r\n    var l1 = _p[11];\r\n    var m1 = _p[12];\r\n    var n1 = _p[13];\r\n    var o1 = _p[14];\r\n    var p1 = _p[15];\r\n\r\n    /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n    _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n    _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2;\r\n    _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2;\r\n    _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2;\r\n\r\n    _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2;\r\n    _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2;\r\n    _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2;\r\n    _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2;\r\n\r\n    _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2;\r\n    _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2;\r\n    _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2;\r\n    _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2;\r\n\r\n    _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2;\r\n    _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2;\r\n    _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2;\r\n    _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2;\r\n\r\n    this._identityCalculated = false;\r\n    return this;\r\n  }\r\n\r\n  function isIdentity() {\r\n    if (!this._identityCalculated) {\r\n      this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n      this._identityCalculated = true;\r\n    }\r\n    return this._identity;\r\n  }\r\n\r\n  function equals(matr) {\r\n    var i = 0;\r\n    while (i < 16) {\r\n      if (matr.props[i] !== this.props[i]) {\r\n        return false;\r\n      }\r\n      i += 1;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function clone(matr) {\r\n    var i;\r\n    for (i = 0; i < 16; i += 1) {\r\n      matr.props[i] = this.props[i];\r\n    }\r\n    return matr;\r\n  }\r\n\r\n  function cloneFromProps(props) {\r\n    var i;\r\n    for (i = 0; i < 16; i += 1) {\r\n      this.props[i] = props[i];\r\n    }\r\n  }\r\n\r\n  function applyToPoint(x, y, z) {\r\n    return {\r\n      x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n      y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n      z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\r\n    };\r\n    /* return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         }; */\r\n  }\r\n  function applyToX(x, y, z) {\r\n    return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n  }\r\n  function applyToY(x, y, z) {\r\n    return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n  }\r\n  function applyToZ(x, y, z) {\r\n    return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n  }\r\n\r\n  function getInverseMatrix() {\r\n    var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n    var a = this.props[5] / determinant;\r\n    var b = -this.props[1] / determinant;\r\n    var c = -this.props[4] / determinant;\r\n    var d = this.props[0] / determinant;\r\n    var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12]) / determinant;\r\n    var f = -(this.props[0] * this.props[13] - this.props[1] * this.props[12]) / determinant;\r\n    var inverseMatrix = new Matrix();\r\n    inverseMatrix.props[0] = a;\r\n    inverseMatrix.props[1] = b;\r\n    inverseMatrix.props[4] = c;\r\n    inverseMatrix.props[5] = d;\r\n    inverseMatrix.props[12] = e;\r\n    inverseMatrix.props[13] = f;\r\n    return inverseMatrix;\r\n  }\r\n\r\n  function inversePoint(pt) {\r\n    var inverseMatrix = this.getInverseMatrix();\r\n    return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0);\r\n  }\r\n\r\n  function inversePoints(pts) {\r\n    var i;\r\n    var len = pts.length;\r\n    var retPts = [];\r\n    for (i = 0; i < len; i += 1) {\r\n      retPts[i] = inversePoint(pts[i]);\r\n    }\r\n    return retPts;\r\n  }\r\n\r\n  function applyToTriplePoints(pt1, pt2, pt3) {\r\n    var arr = createTypedArray('float32', 6);\r\n    if (this.isIdentity()) {\r\n      arr[0] = pt1[0];\r\n      arr[1] = pt1[1];\r\n      arr[2] = pt2[0];\r\n      arr[3] = pt2[1];\r\n      arr[4] = pt3[0];\r\n      arr[5] = pt3[1];\r\n    } else {\r\n      var p0 = this.props[0];\r\n      var p1 = this.props[1];\r\n      var p4 = this.props[4];\r\n      var p5 = this.props[5];\r\n      var p12 = this.props[12];\r\n      var p13 = this.props[13];\r\n      arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n      arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n      arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n      arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n      arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n      arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function applyToPointArray(x, y, z) {\r\n    var arr;\r\n    if (this.isIdentity()) {\r\n      arr = [x, y, z];\r\n    } else {\r\n      arr = [\r\n        x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n        x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n        x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14],\r\n      ];\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function applyToPointStringified(x, y) {\r\n    if (this.isIdentity()) {\r\n      return x + ',' + y;\r\n    }\r\n    var _p = this.props;\r\n    return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100 + ',' + Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n  }\r\n\r\n  function toCSS() {\r\n    // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n    /* if(this.isIdentity()) {\r\n            return '';\r\n        } */\r\n    var i = 0;\r\n    var props = this.props;\r\n    var cssValue = 'matrix3d(';\r\n    var v = 10000;\r\n    while (i < 16) {\r\n      cssValue += _rnd(props[i] * v) / v;\r\n      cssValue += i === 15 ? ')' : ',';\r\n      i += 1;\r\n    }\r\n    return cssValue;\r\n  }\r\n\r\n  function roundMatrixProperty(val) {\r\n    var v = 10000;\r\n    if ((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n      return _rnd(val * v) / v;\r\n    }\r\n    return val;\r\n  }\r\n\r\n  function to2dCSS() {\r\n    // Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n    /* if(this.isIdentity()) {\r\n            return '';\r\n        } */\r\n    var props = this.props;\r\n    var _a = roundMatrixProperty(props[0]);\r\n    var _b = roundMatrixProperty(props[1]);\r\n    var _c = roundMatrixProperty(props[4]);\r\n    var _d = roundMatrixProperty(props[5]);\r\n    var _e = roundMatrixProperty(props[12]);\r\n    var _f = roundMatrixProperty(props[13]);\r\n    return 'matrix(' + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + ')';\r\n  }\r\n\r\n  return function () {\r\n    this.reset = reset;\r\n    this.rotate = rotate;\r\n    this.rotateX = rotateX;\r\n    this.rotateY = rotateY;\r\n    this.rotateZ = rotateZ;\r\n    this.skew = skew;\r\n    this.skewFromAxis = skewFromAxis;\r\n    this.shear = shear;\r\n    this.scale = scale;\r\n    this.setTransform = setTransform;\r\n    this.translate = translate;\r\n    this.transform = transform;\r\n    this.applyToPoint = applyToPoint;\r\n    this.applyToX = applyToX;\r\n    this.applyToY = applyToY;\r\n    this.applyToZ = applyToZ;\r\n    this.applyToPointArray = applyToPointArray;\r\n    this.applyToTriplePoints = applyToTriplePoints;\r\n    this.applyToPointStringified = applyToPointStringified;\r\n    this.toCSS = toCSS;\r\n    this.to2dCSS = to2dCSS;\r\n    this.clone = clone;\r\n    this.cloneFromProps = cloneFromProps;\r\n    this.equals = equals;\r\n    this.inversePoints = inversePoints;\r\n    this.inversePoint = inversePoint;\r\n    this.getInverseMatrix = getInverseMatrix;\r\n    this._t = this.transform;\r\n    this.isIdentity = isIdentity;\r\n    this._identity = true;\r\n    this._identityCalculated = false;\r\n\r\n    this.props = createTypedArray('float32', 16);\r\n    this.reset();\r\n  };\r\n}());\r\n\r\n/* eslint-disable */\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\n/* eslint-disable */\r\nvar BezierFactory = (function () {\r\n  /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n  var ob = {};\r\n  ob.getBezierEasing = getBezierEasing;\r\n  var beziers = {};\r\n\r\n  function getBezierEasing(a, b, c, d, nm) {\r\n    var str = nm || ('bez_' + a + '_' + b + '_' + c + '_' + d).replace(/\\./g, 'p');\r\n    if (beziers[str]) {\r\n      return beziers[str];\r\n    }\r\n    var bezEasing = new BezierEasing([a, b, c, d]);\r\n    beziers[str] = bezEasing;\r\n    return bezEasing;\r\n  }\r\n\r\n  // These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n  var NEWTON_ITERATIONS = 4;\r\n  var NEWTON_MIN_SLOPE = 0.001;\r\n  var SUBDIVISION_PRECISION = 0.0000001;\r\n  var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n  var kSplineTableSize = 11;\r\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n  var float32ArraySupported = typeof Float32Array === 'function';\r\n\r\n  function A(aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n  function B(aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n  function C(aA1) { return 3.0 * aA1; }\r\n\r\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n  function calcBezier(aT, aA1, aA2) {\r\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\r\n  }\r\n\r\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n  function getSlope(aT, aA1, aA2) {\r\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n  }\r\n\r\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\r\n    var currentX,\r\n      currentT,\r\n      i = 0;\r\n    do {\r\n      currentT = aA + (aB - aA) / 2.0;\r\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n      if (currentX > 0.0) {\r\n        aB = currentT;\r\n      } else {\r\n        aA = currentT;\r\n      }\r\n    } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n    return currentT;\r\n  }\r\n\r\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\r\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n      if (currentSlope === 0.0) return aGuessT;\r\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n      aGuessT -= currentX / currentSlope;\r\n    }\r\n    return aGuessT;\r\n  }\r\n\r\n  /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n  function BezierEasing(points) {\r\n    this._p = points;\r\n    this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n    this._precomputed = false;\r\n\r\n    this.get = this.get.bind(this);\r\n  }\r\n\r\n  BezierEasing.prototype = {\r\n\r\n    get: function (x) {\r\n      var mX1 = this._p[0],\r\n        mY1 = this._p[1],\r\n        mX2 = this._p[2],\r\n        mY2 = this._p[3];\r\n      if (!this._precomputed) this._precompute();\r\n      if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n      // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n      if (x === 0) return 0;\r\n      if (x === 1) return 1;\r\n      return calcBezier(this._getTForX(x), mY1, mY2);\r\n    },\r\n\r\n    // Private part\r\n\r\n    _precompute: function () {\r\n      var mX1 = this._p[0],\r\n        mY1 = this._p[1],\r\n        mX2 = this._p[2],\r\n        mY2 = this._p[3];\r\n      this._precomputed = true;\r\n      if (mX1 !== mY1 || mX2 !== mY2) { this._calcSampleValues(); }\r\n    },\r\n\r\n    _calcSampleValues: function () {\r\n      var mX1 = this._p[0],\r\n        mX2 = this._p[2];\r\n      for (var i = 0; i < kSplineTableSize; ++i) {\r\n        this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n      }\r\n    },\r\n\r\n    /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n    _getTForX: function (aX) {\r\n      var mX1 = this._p[0],\r\n        mX2 = this._p[2],\r\n        mSampleValues = this._mSampleValues;\r\n\r\n      var intervalStart = 0.0;\r\n      var currentSample = 1;\r\n      var lastSample = kSplineTableSize - 1;\r\n\r\n      for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n        intervalStart += kSampleStepSize;\r\n      }\r\n      --currentSample;\r\n\r\n      // Interpolate to provide an initial guess for t\r\n      var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample + 1] - mSampleValues[currentSample]);\r\n      var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n      var initialSlope = getSlope(guessForT, mX1, mX2);\r\n      if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n        return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n      } if (initialSlope === 0.0) {\r\n        return guessForT;\r\n      }\r\n      return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n    },\r\n  };\r\n\r\n  return ob;\r\n}());\r\n\r\n(function () {\r\n  var lastTime = 0;\r\n  var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n  for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) { // eslint-disable-line no-plusplus\r\n    window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n    window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n  }\r\n  if (!window.requestAnimationFrame) {\r\n    window.requestAnimationFrame = function (callback) {\r\n      var currTime = new Date().getTime();\r\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n      var id = setTimeout(function () {\r\n        callback(currTime + timeToCall);\r\n      },\r\n      timeToCall);\r\n      lastTime = currTime + timeToCall;\r\n      return id;\r\n    };\r\n  }\r\n  if (!window.cancelAnimationFrame) {\r\n    window.cancelAnimationFrame = function (id) {\r\n      clearTimeout(id);\r\n    };\r\n  }\r\n}());\r\n\r\n/* exported extendPrototype, getDescriptor, createProxyFunction */\r\n\r\nfunction extendPrototype(sources, destination) {\r\n  var i;\r\n  var len = sources.length;\r\n  var sourcePrototype;\r\n  for (i = 0; i < len; i += 1) {\r\n    sourcePrototype = sources[i].prototype;\r\n    for (var attr in sourcePrototype) {\r\n      if (Object.prototype.hasOwnProperty.call(sourcePrototype, attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n    }\r\n  }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n  return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n  function ProxyFunction() {}\r\n  ProxyFunction.prototype = prototype;\r\n  return ProxyFunction;\r\n}\r\n\r\n/* global segmentsLengthPool, defaultCurveSegments, createSizedArray, bmPow, bmSqrt, bmFloor, createTypedArray, bezierLengthPool */\r\n/* exported bez */\r\n\r\nfunction bezFunction() {\r\n  var math = Math;\r\n\r\n  function pointOnLine2D(x1, y1, x2, y2, x3, y3) {\r\n    var det1 = (x1 * y2) + (y1 * x3) + (x2 * y3) - (x3 * y2) - (y3 * x1) - (x2 * y1);\r\n    return det1 > -0.001 && det1 < 0.001;\r\n  }\r\n\r\n  function pointOnLine3D(x1, y1, z1, x2, y2, z2, x3, y3, z3) {\r\n    if (z1 === 0 && z2 === 0 && z3 === 0) {\r\n      return pointOnLine2D(x1, y1, x2, y2, x3, y3);\r\n    }\r\n    var dist1 = math.sqrt(math.pow(x2 - x1, 2) + math.pow(y2 - y1, 2) + math.pow(z2 - z1, 2));\r\n    var dist2 = math.sqrt(math.pow(x3 - x1, 2) + math.pow(y3 - y1, 2) + math.pow(z3 - z1, 2));\r\n    var dist3 = math.sqrt(math.pow(x3 - x2, 2) + math.pow(y3 - y2, 2) + math.pow(z3 - z2, 2));\r\n    var diffDist;\r\n    if (dist1 > dist2) {\r\n      if (dist1 > dist3) {\r\n        diffDist = dist1 - dist2 - dist3;\r\n      } else {\r\n        diffDist = dist3 - dist2 - dist1;\r\n      }\r\n    } else if (dist3 > dist2) {\r\n      diffDist = dist3 - dist2 - dist1;\r\n    } else {\r\n      diffDist = dist2 - dist1 - dist3;\r\n    }\r\n    return diffDist > -0.0001 && diffDist < 0.0001;\r\n  }\r\n\r\n  var getBezierLength = (function () {\r\n    return function (pt1, pt2, pt3, pt4) {\r\n      var curveSegments = defaultCurveSegments;\r\n      var k;\r\n      var i;\r\n      var len;\r\n      var ptCoord;\r\n      var perc;\r\n      var addedLength = 0;\r\n      var ptDistance;\r\n      var point = [];\r\n      var lastPoint = [];\r\n      var lengthData = bezierLengthPool.newElement();\r\n      len = pt3.length;\r\n      for (k = 0; k < curveSegments; k += 1) {\r\n        perc = k / (curveSegments - 1);\r\n        ptDistance = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n          ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * pt3[i] + 3 * (1 - perc) * bmPow(perc, 2) * pt4[i] + bmPow(perc, 3) * pt2[i];\r\n          point[i] = ptCoord;\r\n          if (lastPoint[i] !== null) {\r\n            ptDistance += bmPow(point[i] - lastPoint[i], 2);\r\n          }\r\n          lastPoint[i] = point[i];\r\n        }\r\n        if (ptDistance) {\r\n          ptDistance = bmSqrt(ptDistance);\r\n          addedLength += ptDistance;\r\n        }\r\n        lengthData.percents[k] = perc;\r\n        lengthData.lengths[k] = addedLength;\r\n      }\r\n      lengthData.addedLength = addedLength;\r\n      return lengthData;\r\n    };\r\n  }());\r\n\r\n  function getSegmentsLength(shapeData) {\r\n    var segmentsLength = segmentsLengthPool.newElement();\r\n    var closed = shapeData.c;\r\n    var pathV = shapeData.v;\r\n    var pathO = shapeData.o;\r\n    var pathI = shapeData.i;\r\n    var i;\r\n    var len = shapeData._length;\r\n    var lengths = segmentsLength.lengths;\r\n    var totalLength = 0;\r\n    for (i = 0; i < len - 1; i += 1) {\r\n      lengths[i] = getBezierLength(pathV[i], pathV[i + 1], pathO[i], pathI[i + 1]);\r\n      totalLength += lengths[i].addedLength;\r\n    }\r\n    if (closed && len) {\r\n      lengths[i] = getBezierLength(pathV[i], pathV[0], pathO[i], pathI[0]);\r\n      totalLength += lengths[i].addedLength;\r\n    }\r\n    segmentsLength.totalLength = totalLength;\r\n    return segmentsLength;\r\n  }\r\n\r\n  function BezierData(length) {\r\n    this.segmentLength = 0;\r\n    this.points = new Array(length);\r\n  }\r\n\r\n  function PointData(partial, point) {\r\n    this.partialLength = partial;\r\n    this.point = point;\r\n  }\r\n\r\n  var buildBezierData = (function () {\r\n    var storedData = {};\r\n\r\n    return function (pt1, pt2, pt3, pt4) {\r\n      var bezierName = (pt1[0] + '_' + pt1[1] + '_' + pt2[0] + '_' + pt2[1] + '_' + pt3[0] + '_' + pt3[1] + '_' + pt4[0] + '_' + pt4[1]).replace(/\\./g, 'p');\r\n      if (!storedData[bezierName]) {\r\n        var curveSegments = defaultCurveSegments;\r\n        var k;\r\n        var i;\r\n        var len;\r\n        var ptCoord;\r\n        var perc;\r\n        var addedLength = 0;\r\n        var ptDistance;\r\n        var point;\r\n        var lastPoint = null;\r\n        if (pt1.length === 2 && (pt1[0] !== pt2[0] || pt1[1] !== pt2[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt1[0] + pt3[0], pt1[1] + pt3[1]) && pointOnLine2D(pt1[0], pt1[1], pt2[0], pt2[1], pt2[0] + pt4[0], pt2[1] + pt4[1])) {\r\n          curveSegments = 2;\r\n        }\r\n        var bezierData = new BezierData(curveSegments);\r\n        len = pt3.length;\r\n        for (k = 0; k < curveSegments; k += 1) {\r\n          point = createSizedArray(len);\r\n          perc = k / (curveSegments - 1);\r\n          ptDistance = 0;\r\n          for (i = 0; i < len; i += 1) {\r\n            ptCoord = bmPow(1 - perc, 3) * pt1[i] + 3 * bmPow(1 - perc, 2) * perc * (pt1[i] + pt3[i]) + 3 * (1 - perc) * bmPow(perc, 2) * (pt2[i] + pt4[i]) + bmPow(perc, 3) * pt2[i];\r\n            point[i] = ptCoord;\r\n            if (lastPoint !== null) {\r\n              ptDistance += bmPow(point[i] - lastPoint[i], 2);\r\n            }\r\n          }\r\n          ptDistance = bmSqrt(ptDistance);\r\n          addedLength += ptDistance;\r\n          bezierData.points[k] = new PointData(ptDistance, point);\r\n          lastPoint = point;\r\n        }\r\n        bezierData.segmentLength = addedLength;\r\n        storedData[bezierName] = bezierData;\r\n      }\r\n      return storedData[bezierName];\r\n    };\r\n  }());\r\n\r\n  function getDistancePerc(perc, bezierData) {\r\n    var percents = bezierData.percents;\r\n    var lengths = bezierData.lengths;\r\n    var len = percents.length;\r\n    var initPos = bmFloor((len - 1) * perc);\r\n    var lengthPos = perc * bezierData.addedLength;\r\n    var lPerc = 0;\r\n    if (initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]) {\r\n      return percents[initPos];\r\n    }\r\n    var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n    var flag = true;\r\n    while (flag) {\r\n      if (lengths[initPos] <= lengthPos && lengths[initPos + 1] > lengthPos) {\r\n        lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos + 1] - lengths[initPos]);\r\n        flag = false;\r\n      } else {\r\n        initPos += dir;\r\n      }\r\n      if (initPos < 0 || initPos >= len - 1) {\r\n        // FIX for TypedArrays that don't store floating point values with enough accuracy\r\n        if (initPos === len - 1) {\r\n          return percents[initPos];\r\n        }\r\n        flag = false;\r\n      }\r\n    }\r\n    return percents[initPos] + (percents[initPos + 1] - percents[initPos]) * lPerc;\r\n  }\r\n\r\n  function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n    var t1 = getDistancePerc(percent, bezierData);\r\n    var u1 = 1 - t1;\r\n    var ptX = math.round((u1 * u1 * u1 * pt1[0] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[0] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[0] + t1 * t1 * t1 * pt2[0]) * 1000) / 1000;\r\n    var ptY = math.round((u1 * u1 * u1 * pt1[1] + (t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1) * pt3[1] + (t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1) * pt4[1] + t1 * t1 * t1 * pt2[1]) * 1000) / 1000;\r\n    return [ptX, ptY];\r\n  }\r\n\r\n  var bezierSegmentPoints = createTypedArray('float32', 8);\r\n\r\n  function getNewSegment(pt1, pt2, pt3, pt4, startPerc, endPerc, bezierData) {\r\n    if (startPerc < 0) {\r\n      startPerc = 0;\r\n    } else if (startPerc > 1) {\r\n      startPerc = 1;\r\n    }\r\n    var t0 = getDistancePerc(startPerc, bezierData);\r\n    endPerc = endPerc > 1 ? 1 : endPerc;\r\n    var t1 = getDistancePerc(endPerc, bezierData);\r\n    var i;\r\n    var len = pt1.length;\r\n    var u0 = 1 - t0;\r\n    var u1 = 1 - t1;\r\n    var u0u0u0 = u0 * u0 * u0;\r\n    var t0u0u0_3 = t0 * u0 * u0 * 3; // eslint-disable-line camelcase\r\n    var t0t0u0_3 = t0 * t0 * u0 * 3; // eslint-disable-line camelcase\r\n    var t0t0t0 = t0 * t0 * t0;\r\n    //\r\n    var u0u0u1 = u0 * u0 * u1;\r\n    var t0u0u1_3 = t0 * u0 * u1 + u0 * t0 * u1 + u0 * u0 * t1; // eslint-disable-line camelcase\r\n    var t0t0u1_3 = t0 * t0 * u1 + u0 * t0 * t1 + t0 * u0 * t1; // eslint-disable-line camelcase\r\n    var t0t0t1 = t0 * t0 * t1;\r\n    //\r\n    var u0u1u1 = u0 * u1 * u1;\r\n    var t0u1u1_3 = t0 * u1 * u1 + u0 * t1 * u1 + u0 * u1 * t1; // eslint-disable-line camelcase\r\n    var t0t1u1_3 = t0 * t1 * u1 + u0 * t1 * t1 + t0 * u1 * t1; // eslint-disable-line camelcase\r\n    var t0t1t1 = t0 * t1 * t1;\r\n    //\r\n    var u1u1u1 = u1 * u1 * u1;\r\n    var t1u1u1_3 = t1 * u1 * u1 + u1 * t1 * u1 + u1 * u1 * t1; // eslint-disable-line camelcase\r\n    var t1t1u1_3 = t1 * t1 * u1 + u1 * t1 * t1 + t1 * u1 * t1; // eslint-disable-line camelcase\r\n    var t1t1t1 = t1 * t1 * t1;\r\n    for (i = 0; i < len; i += 1) {\r\n      bezierSegmentPoints[i * 4] = math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 1] = math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 2] = math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n      bezierSegmentPoints[i * 4 + 3] = math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000; // eslint-disable-line camelcase\r\n    }\r\n\r\n    return bezierSegmentPoints;\r\n  }\r\n\r\n  return {\r\n    getSegmentsLength: getSegmentsLength,\r\n    getNewSegment: getNewSegment,\r\n    getPointInSegment: getPointInSegment,\r\n    buildBezierData: buildBezierData,\r\n    pointOnLine2D: pointOnLine2D,\r\n    pointOnLine3D: pointOnLine3D,\r\n  };\r\n}\r\n\r\nvar bez = bezFunction();\r\n\r\n/* exported dataManager */\r\n\r\nfunction dataFunctionManager() {\r\n  // var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n  function completeLayers(layers, comps, fontManager) {\r\n    var layerData;\r\n    var i;\r\n    var len = layers.length;\r\n    var j;\r\n    var jLen;\r\n    var k;\r\n    var kLen;\r\n    for (i = 0; i < len; i += 1) {\r\n      layerData = layers[i];\r\n      if (('ks' in layerData) && !layerData.completed) {\r\n        layerData.completed = true;\r\n        if (layerData.tt) {\r\n          layers[i - 1].td = layerData.tt;\r\n        }\r\n        if (layerData.hasMask) {\r\n          var maskProps = layerData.masksProperties;\r\n          jLen = maskProps.length;\r\n          for (j = 0; j < jLen; j += 1) {\r\n            if (maskProps[j].pt.k.i) {\r\n              convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n            } else {\r\n              kLen = maskProps[j].pt.k.length;\r\n              for (k = 0; k < kLen; k += 1) {\r\n                if (maskProps[j].pt.k[k].s) {\r\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                }\r\n                if (maskProps[j].pt.k[k].e) {\r\n                  convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (layerData.ty === 0) {\r\n          layerData.layers = findCompLayers(layerData.refId, comps);\r\n          completeLayers(layerData.layers, comps, fontManager);\r\n        } else if (layerData.ty === 4) {\r\n          completeShapes(layerData.shapes);\r\n        } else if (layerData.ty === 5) {\r\n          completeText(layerData, fontManager);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function findCompLayers(id, comps) {\r\n    var i = 0;\r\n    var len = comps.length;\r\n    while (i < len) {\r\n      if (comps[i].id === id) {\r\n        if (!comps[i].layers.__used) {\r\n          comps[i].layers.__used = true;\r\n          return comps[i].layers;\r\n        }\r\n        return JSON.parse(JSON.stringify(comps[i].layers));\r\n      }\r\n      i += 1;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function completeShapes(arr) {\r\n    var i;\r\n    var len = arr.length;\r\n    var j;\r\n    var jLen;\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      if (arr[i].ty === 'sh') {\r\n        if (arr[i].ks.k.i) {\r\n          convertPathsToAbsoluteValues(arr[i].ks.k);\r\n        } else {\r\n          jLen = arr[i].ks.k.length;\r\n          for (j = 0; j < jLen; j += 1) {\r\n            if (arr[i].ks.k[j].s) {\r\n              convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n            }\r\n            if (arr[i].ks.k[j].e) {\r\n              convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n            }\r\n          }\r\n        }\r\n      } else if (arr[i].ty === 'gr') {\r\n        completeShapes(arr[i].it);\r\n      }\r\n    }\r\n  }\r\n\r\n  function convertPathsToAbsoluteValues(path) {\r\n    var i;\r\n    var len = path.i.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      path.i[i][0] += path.v[i][0];\r\n      path.i[i][1] += path.v[i][1];\r\n      path.o[i][0] += path.v[i][0];\r\n      path.o[i][1] += path.v[i][1];\r\n    }\r\n  }\r\n\r\n  function checkVersion(minimum, animVersionString) {\r\n    var animVersion = animVersionString ? animVersionString.split('.') : [100, 100, 100];\r\n    if (minimum[0] > animVersion[0]) {\r\n      return true;\r\n    } if (animVersion[0] > minimum[0]) {\r\n      return false;\r\n    }\r\n    if (minimum[1] > animVersion[1]) {\r\n      return true;\r\n    } if (animVersion[1] > minimum[1]) {\r\n      return false;\r\n    }\r\n    if (minimum[2] > animVersion[2]) {\r\n      return true;\r\n    } if (animVersion[2] > minimum[2]) {\r\n      return false;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  var checkText = (function () {\r\n    var minimumVersion = [4, 4, 14];\r\n\r\n    function updateTextLayer(textLayer) {\r\n      var documentData = textLayer.t.d;\r\n      textLayer.t.d = {\r\n        k: [\r\n          {\r\n            s: documentData,\r\n            t: 0,\r\n          },\r\n        ],\r\n      };\r\n    }\r\n\r\n    function iterateLayers(layers) {\r\n      var i;\r\n      var len = layers.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        if (layers[i].ty === 5) {\r\n          updateTextLayer(layers[i]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return function (animationData) {\r\n      if (checkVersion(minimumVersion, animationData.v)) {\r\n        iterateLayers(animationData.layers);\r\n        if (animationData.assets) {\r\n          var i;\r\n          var len = animationData.assets.length;\r\n          for (i = 0; i < len; i += 1) {\r\n            if (animationData.assets[i].layers) {\r\n              iterateLayers(animationData.assets[i].layers);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }());\r\n\r\n  var checkChars = (function () {\r\n    var minimumVersion = [4, 7, 99];\r\n    return function (animationData) {\r\n      if (animationData.chars && !checkVersion(minimumVersion, animationData.v)) {\r\n        var i;\r\n        var len = animationData.chars.length;\r\n        var j;\r\n        var jLen;\r\n        var pathData;\r\n        var paths;\r\n        for (i = 0; i < len; i += 1) {\r\n          if (animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n            paths = animationData.chars[i].data.shapes[0].it;\r\n            jLen = paths.length;\r\n\r\n            for (j = 0; j < jLen; j += 1) {\r\n              pathData = paths[j].ks.k;\r\n              if (!pathData.__converted) {\r\n                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                pathData.__converted = true;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }());\r\n\r\n  var checkColors = (function () {\r\n    var minimumVersion = [4, 1, 9];\r\n\r\n    function iterateShapes(shapes) {\r\n      var i;\r\n      var len = shapes.length;\r\n      var j;\r\n      var jLen;\r\n      for (i = 0; i < len; i += 1) {\r\n        if (shapes[i].ty === 'gr') {\r\n          iterateShapes(shapes[i].it);\r\n        } else if (shapes[i].ty === 'fl' || shapes[i].ty === 'st') {\r\n          if (shapes[i].c.k && shapes[i].c.k[0].i) {\r\n            jLen = shapes[i].c.k.length;\r\n            for (j = 0; j < jLen; j += 1) {\r\n              if (shapes[i].c.k[j].s) {\r\n                shapes[i].c.k[j].s[0] /= 255;\r\n                shapes[i].c.k[j].s[1] /= 255;\r\n                shapes[i].c.k[j].s[2] /= 255;\r\n                shapes[i].c.k[j].s[3] /= 255;\r\n              }\r\n              if (shapes[i].c.k[j].e) {\r\n                shapes[i].c.k[j].e[0] /= 255;\r\n                shapes[i].c.k[j].e[1] /= 255;\r\n                shapes[i].c.k[j].e[2] /= 255;\r\n                shapes[i].c.k[j].e[3] /= 255;\r\n              }\r\n            }\r\n          } else {\r\n            shapes[i].c.k[0] /= 255;\r\n            shapes[i].c.k[1] /= 255;\r\n            shapes[i].c.k[2] /= 255;\r\n            shapes[i].c.k[3] /= 255;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    function iterateLayers(layers) {\r\n      var i;\r\n      var len = layers.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        if (layers[i].ty === 4) {\r\n          iterateShapes(layers[i].shapes);\r\n        }\r\n      }\r\n    }\r\n\r\n    return function (animationData) {\r\n      if (checkVersion(minimumVersion, animationData.v)) {\r\n        iterateLayers(animationData.layers);\r\n        if (animationData.assets) {\r\n          var i;\r\n          var len = animationData.assets.length;\r\n          for (i = 0; i < len; i += 1) {\r\n            if (animationData.assets[i].layers) {\r\n              iterateLayers(animationData.assets[i].layers);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }());\r\n\r\n  var checkShapes = (function () {\r\n    var minimumVersion = [4, 4, 18];\r\n\r\n    function completeClosingShapes(arr) {\r\n      var i;\r\n      var len = arr.length;\r\n      var j;\r\n      var jLen;\r\n      for (i = len - 1; i >= 0; i -= 1) {\r\n        if (arr[i].ty === 'sh') {\r\n          if (arr[i].ks.k.i) {\r\n            arr[i].ks.k.c = arr[i].closed;\r\n          } else {\r\n            jLen = arr[i].ks.k.length;\r\n            for (j = 0; j < jLen; j += 1) {\r\n              if (arr[i].ks.k[j].s) {\r\n                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n              }\r\n              if (arr[i].ks.k[j].e) {\r\n                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n              }\r\n            }\r\n          }\r\n        } else if (arr[i].ty === 'gr') {\r\n          completeClosingShapes(arr[i].it);\r\n        }\r\n      }\r\n    }\r\n\r\n    function iterateLayers(layers) {\r\n      var layerData;\r\n      var i;\r\n      var len = layers.length;\r\n      var j;\r\n      var jLen;\r\n      var k;\r\n      var kLen;\r\n      for (i = 0; i < len; i += 1) {\r\n        layerData = layers[i];\r\n        if (layerData.hasMask) {\r\n          var maskProps = layerData.masksProperties;\r\n          jLen = maskProps.length;\r\n          for (j = 0; j < jLen; j += 1) {\r\n            if (maskProps[j].pt.k.i) {\r\n              maskProps[j].pt.k.c = maskProps[j].cl;\r\n            } else {\r\n              kLen = maskProps[j].pt.k.length;\r\n              for (k = 0; k < kLen; k += 1) {\r\n                if (maskProps[j].pt.k[k].s) {\r\n                  maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                }\r\n                if (maskProps[j].pt.k[k].e) {\r\n                  maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n        if (layerData.ty === 4) {\r\n          completeClosingShapes(layerData.shapes);\r\n        }\r\n      }\r\n    }\r\n\r\n    return function (animationData) {\r\n      if (checkVersion(minimumVersion, animationData.v)) {\r\n        iterateLayers(animationData.layers);\r\n        if (animationData.assets) {\r\n          var i;\r\n          var len = animationData.assets.length;\r\n          for (i = 0; i < len; i += 1) {\r\n            if (animationData.assets[i].layers) {\r\n              iterateLayers(animationData.assets[i].layers);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }());\r\n\r\n  function completeData(animationData, fontManager) {\r\n    if (animationData.__complete) {\r\n      return;\r\n    }\r\n    checkColors(animationData);\r\n    checkText(animationData);\r\n    checkChars(animationData);\r\n    checkShapes(animationData);\r\n    completeLayers(animationData.layers, animationData.assets, fontManager);\r\n    animationData.__complete = true;\r\n  }\r\n\r\n  function completeText(data) {\r\n    if (data.t.a.length === 0 && !('m' in data.t.p)) {\r\n      data.singleShape = true;\r\n    }\r\n  }\r\n\r\n  var moduleOb = {};\r\n  moduleOb.completeData = completeData;\r\n  moduleOb.checkColors = checkColors;\r\n  moduleOb.checkChars = checkChars;\r\n  moduleOb.checkShapes = checkShapes;\r\n  moduleOb.completeLayers = completeLayers;\r\n\r\n  return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\n\r\n/* exported getFontProperties */\r\n\r\nfunction getFontProperties(fontData) {\r\n  var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n  var fWeight = 'normal'; var\r\n    fStyle = 'normal';\r\n  var len = styles.length;\r\n  var styleName;\r\n  for (var i = 0; i < len; i += 1) {\r\n    styleName = styles[i].toLowerCase();\r\n    switch (styleName) {\r\n      case 'italic':\r\n        fStyle = 'italic';\r\n        break;\r\n      case 'bold':\r\n        fWeight = '700';\r\n        break;\r\n      case 'black':\r\n        fWeight = '900';\r\n        break;\r\n      case 'medium':\r\n        fWeight = '500';\r\n        break;\r\n      case 'regular':\r\n      case 'normal':\r\n        fWeight = '400';\r\n        break;\r\n      case 'light':\r\n      case 'thin':\r\n        fWeight = '200';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  return {\r\n    style: fStyle,\r\n    weight: fontData.fWeight || fWeight,\r\n  };\r\n}\r\n\r\n/* global createNS, createTag, getFontProperties */\r\n/* exported FontManager */\r\n\r\nvar FontManager = (function () {\r\n  var maxWaitingTime = 5000;\r\n  var emptyChar = {\r\n    w: 0,\r\n    size: 0,\r\n    shapes: [],\r\n  };\r\n  var combinedCharacters = [];\r\n  // Hindi characters\r\n  combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366,\r\n    2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379,\r\n    2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n  function trimFontOptions(font) {\r\n    var familyArray = font.split(',');\r\n    var i;\r\n    var len = familyArray.length;\r\n    var enabledFamilies = [];\r\n    for (i = 0; i < len; i += 1) {\r\n      if (familyArray[i] !== 'sans-serif' && familyArray[i] !== 'monospace') {\r\n        enabledFamilies.push(familyArray[i]);\r\n      }\r\n    }\r\n    return enabledFamilies.join(',');\r\n  }\r\n\r\n  function setUpNode(font, family) {\r\n    var parentNode = createTag('span');\r\n    // Node is invisible to screen readers.\r\n    parentNode.setAttribute('aria-hidden', true);\r\n    parentNode.style.fontFamily = family;\r\n    var node = createTag('span');\r\n    // Characters that vary significantly among different fonts\r\n    node.innerText = 'giItT1WQy@!-/#';\r\n    // Visible - so we can measure it - but not on the screen\r\n    parentNode.style.position = 'absolute';\r\n    parentNode.style.left = '-10000px';\r\n    parentNode.style.top = '-10000px';\r\n    // Large font size makes even subtle changes obvious\r\n    parentNode.style.fontSize = '300px';\r\n    // Reset any font properties\r\n    parentNode.style.fontVariant = 'normal';\r\n    parentNode.style.fontStyle = 'normal';\r\n    parentNode.style.fontWeight = 'normal';\r\n    parentNode.style.letterSpacing = '0';\r\n    parentNode.appendChild(node);\r\n    document.body.appendChild(parentNode);\r\n\r\n    // Remember width with no applied web font\r\n    var width = node.offsetWidth;\r\n    node.style.fontFamily = trimFontOptions(font) + ', ' + family;\r\n    return { node: node, w: width, parent: parentNode };\r\n  }\r\n\r\n  function checkLoadedFonts() {\r\n    var i;\r\n    var len = this.fonts.length;\r\n    var node;\r\n    var w;\r\n    var loadedCount = len;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.fonts[i].loaded) {\r\n        loadedCount -= 1;\r\n      } else if (this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0) {\r\n        this.fonts[i].loaded = true;\r\n      } else {\r\n        node = this.fonts[i].monoCase.node;\r\n        w = this.fonts[i].monoCase.w;\r\n        if (node.offsetWidth !== w) {\r\n          loadedCount -= 1;\r\n          this.fonts[i].loaded = true;\r\n        } else {\r\n          node = this.fonts[i].sansCase.node;\r\n          w = this.fonts[i].sansCase.w;\r\n          if (node.offsetWidth !== w) {\r\n            loadedCount -= 1;\r\n            this.fonts[i].loaded = true;\r\n          }\r\n        }\r\n        if (this.fonts[i].loaded) {\r\n          this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n          this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime) {\r\n      setTimeout(this.checkLoadedFontsBinded, 20);\r\n    } else {\r\n      setTimeout(this.setIsLoadedBinded, 10);\r\n    }\r\n  }\r\n\r\n  function createHelper(def, fontData) {\r\n    var tHelper = createNS('text');\r\n    tHelper.style.fontSize = '100px';\r\n    // tHelper.style.fontFamily = fontData.fFamily;\r\n\r\n    var fontProps = getFontProperties(fontData);\r\n    tHelper.setAttribute('font-family', fontData.fFamily);\r\n    tHelper.setAttribute('font-style', fontProps.style);\r\n    tHelper.setAttribute('font-weight', fontProps.weight);\r\n    tHelper.textContent = '1';\r\n    if (fontData.fClass) {\r\n      tHelper.style.fontFamily = 'inherit';\r\n      tHelper.setAttribute('class', fontData.fClass);\r\n    } else {\r\n      tHelper.style.fontFamily = fontData.fFamily;\r\n    }\r\n    def.appendChild(tHelper);\r\n    var tCanvasHelper = createTag('canvas').getContext('2d');\r\n    tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px ' + fontData.fFamily;\r\n    // tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n    return tHelper;\r\n  }\r\n\r\n  function addFonts(fontData, defs) {\r\n    if (!fontData) {\r\n      this.isLoaded = true;\r\n      return;\r\n    }\r\n    if (this.chars) {\r\n      this.isLoaded = true;\r\n      this.fonts = fontData.list;\r\n      return;\r\n    }\r\n\r\n    var fontArr = fontData.list;\r\n    var i;\r\n    var len = fontArr.length;\r\n    var _pendingFonts = len;\r\n    for (i = 0; i < len; i += 1) {\r\n      var shouldLoadFont = true;\r\n      var loadedSelector;\r\n      var j;\r\n      fontArr[i].loaded = false;\r\n      fontArr[i].monoCase = setUpNode(fontArr[i].fFamily, 'monospace');\r\n      fontArr[i].sansCase = setUpNode(fontArr[i].fFamily, 'sans-serif');\r\n      if (!fontArr[i].fPath) {\r\n        fontArr[i].loaded = true;\r\n        _pendingFonts -= 1;\r\n      } else if (fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3) {\r\n        loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"' + fontArr[i].fFamily + '\"], style[f-origin=\"3\"][f-family=\"' + fontArr[i].fFamily + '\"]');\r\n\r\n        if (loadedSelector.length > 0) {\r\n          shouldLoadFont = false;\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var s = createTag('style');\r\n          s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          s.setAttribute('f-origin', fontArr[i].origin);\r\n          s.setAttribute('f-family', fontArr[i].fFamily);\r\n          s.type = 'text/css';\r\n          s.innerText = '@font-face {font-family: ' + fontArr[i].fFamily + \"; font-style: normal; src: url('\" + fontArr[i].fPath + \"');}\";\r\n          defs.appendChild(s);\r\n        }\r\n      } else if (fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1) {\r\n        loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n        for (j = 0; j < loadedSelector.length; j += 1) {\r\n          if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n            // Font is already loaded\r\n            shouldLoadFont = false;\r\n          }\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var l = createTag('link');\r\n          l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          l.setAttribute('f-origin', fontArr[i].origin);\r\n          l.type = 'text/css';\r\n          l.rel = 'stylesheet';\r\n          l.href = fontArr[i].fPath;\r\n          document.body.appendChild(l);\r\n        }\r\n      } else if (fontArr[i].fOrigin === 't' || fontArr[i].origin === 2) {\r\n        loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n        for (j = 0; j < loadedSelector.length; j += 1) {\r\n          if (fontArr[i].fPath === loadedSelector[j].src) {\r\n            // Font is already loaded\r\n            shouldLoadFont = false;\r\n          }\r\n        }\r\n\r\n        if (shouldLoadFont) {\r\n          var sc = createTag('link');\r\n          sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n          sc.setAttribute('f-origin', fontArr[i].origin);\r\n          sc.setAttribute('rel', 'stylesheet');\r\n          sc.setAttribute('href', fontArr[i].fPath);\r\n          defs.appendChild(sc);\r\n        }\r\n      }\r\n      fontArr[i].helper = createHelper(defs, fontArr[i]);\r\n      fontArr[i].cache = {};\r\n      this.fonts.push(fontArr[i]);\r\n    }\r\n    if (_pendingFonts === 0) {\r\n      this.isLoaded = true;\r\n    } else {\r\n      // On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n      // Adding this timeout seems to fix it\r\n      setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n    }\r\n  }\r\n\r\n  function addChars(chars) {\r\n    if (!chars) {\r\n      return;\r\n    }\r\n    if (!this.chars) {\r\n      this.chars = [];\r\n    }\r\n    var i;\r\n    var len = chars.length;\r\n    var j;\r\n    var jLen = this.chars.length;\r\n    var found;\r\n    for (i = 0; i < len; i += 1) {\r\n      j = 0;\r\n      found = false;\r\n      while (j < jLen) {\r\n        if (this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch) {\r\n          found = true;\r\n        }\r\n        j += 1;\r\n      }\r\n      if (!found) {\r\n        this.chars.push(chars[i]);\r\n        jLen += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function getCharData(char, style, font) {\r\n    var i = 0;\r\n    var len = this.chars.length;\r\n    while (i < len) {\r\n      if (this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font) {\r\n        return this.chars[i];\r\n      }\r\n      i += 1;\r\n    }\r\n    if (((typeof char === 'string' && char.charCodeAt(0) !== 13) || !char)\r\n            && console\r\n            && console.warn // eslint-disable-line no-console\r\n            && !this._warned\r\n    ) {\r\n      this._warned = true;\r\n      console.warn('Missing character from exported characters list: ', char, style, font); // eslint-disable-line no-console\r\n    }\r\n    return emptyChar;\r\n  }\r\n\r\n  function measureText(char, fontName, size) {\r\n    var fontData = this.getFontByName(fontName);\r\n    var index = char.charCodeAt(0);\r\n    if (!fontData.cache[index + 1]) {\r\n      var tHelper = fontData.helper;\r\n      // Canvas version\r\n      // fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n      // SVG version\r\n      // console.log(tHelper.getBBox().width)\r\n      if (char === ' ') {\r\n        tHelper.textContent = '|' + char + '|';\r\n        var doubleSize = tHelper.getComputedTextLength();\r\n        tHelper.textContent = '||';\r\n        var singleSize = tHelper.getComputedTextLength();\r\n        fontData.cache[index + 1] = (doubleSize - singleSize) / 100;\r\n      } else {\r\n        tHelper.textContent = char;\r\n        fontData.cache[index + 1] = (tHelper.getComputedTextLength()) / 100;\r\n      }\r\n    }\r\n    return fontData.cache[index + 1] * size;\r\n  }\r\n\r\n  function getFontByName(name) {\r\n    var i = 0;\r\n    var len = this.fonts.length;\r\n    while (i < len) {\r\n      if (this.fonts[i].fName === name) {\r\n        return this.fonts[i];\r\n      }\r\n      i += 1;\r\n    }\r\n    return this.fonts[0];\r\n  }\r\n\r\n  function getCombinedCharacterCodes() {\r\n    return combinedCharacters;\r\n  }\r\n\r\n  function setIsLoaded() {\r\n    this.isLoaded = true;\r\n  }\r\n\r\n  var Font = function () {\r\n    this.fonts = [];\r\n    this.chars = null;\r\n    this.typekitLoaded = 0;\r\n    this.isLoaded = false;\r\n    this._warned = false;\r\n    this.initTime = Date.now();\r\n    this.setIsLoadedBinded = this.setIsLoaded.bind(this);\r\n    this.checkLoadedFontsBinded = this.checkLoadedFonts.bind(this);\r\n  };\r\n    // TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it.\r\n  Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n  var fontPrototype = {\r\n    addChars: addChars,\r\n    addFonts: addFonts,\r\n    getCharData: getCharData,\r\n    getFontByName: getFontByName,\r\n    measureText: measureText,\r\n    checkLoadedFonts: checkLoadedFonts,\r\n    setIsLoaded: setIsLoaded,\r\n  };\r\n\r\n  Font.prototype = fontPrototype;\r\n\r\n  return Font;\r\n}());\r\n\r\n/* global initialDefaultFrame, BezierFactory, degToRads, bez, createTypedArray */\r\n/* exported PropertyFactory */\r\n\r\nvar PropertyFactory = (function () {\r\n  var initFrame = initialDefaultFrame;\r\n  var mathAbs = Math.abs;\r\n\r\n  function interpolateValue(frameNum, caching) {\r\n    var offsetTime = this.offsetTime;\r\n    var newValue;\r\n    if (this.propType === 'multidimensional') {\r\n      newValue = createTypedArray('float32', this.pv.length);\r\n    }\r\n    var iterationIndex = caching.lastIndex;\r\n    var i = iterationIndex;\r\n    var len = this.keyframes.length - 1;\r\n    var flag = true;\r\n    var keyData;\r\n    var nextKeyData;\r\n\r\n    while (flag) {\r\n      keyData = this.keyframes[i];\r\n      nextKeyData = this.keyframes[i + 1];\r\n      if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime) {\r\n        if (keyData.h) {\r\n          keyData = nextKeyData;\r\n        }\r\n        iterationIndex = 0;\r\n        break;\r\n      }\r\n      if ((nextKeyData.t - offsetTime) > frameNum) {\r\n        iterationIndex = i;\r\n        break;\r\n      }\r\n      if (i < len - 1) {\r\n        i += 1;\r\n      } else {\r\n        iterationIndex = 0;\r\n        flag = false;\r\n      }\r\n    }\r\n\r\n    var k;\r\n    var kLen;\r\n    var perc;\r\n    var jLen;\r\n    var j;\r\n    var fnc;\r\n    var nextKeyTime = nextKeyData.t - offsetTime;\r\n    var keyTime = keyData.t - offsetTime;\r\n    var endValue;\r\n    if (keyData.to) {\r\n      if (!keyData.bezierData) {\r\n        keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n      }\r\n      var bezierData = keyData.bezierData;\r\n      if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n        var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n        kLen = bezierData.points[ind].point.length;\r\n        for (k = 0; k < kLen; k += 1) {\r\n          newValue[k] = bezierData.points[ind].point[k];\r\n        }\r\n        // caching._lastKeyframeIndex = -1;\r\n      } else {\r\n        if (keyData.__fnct) {\r\n          fnc = keyData.__fnct;\r\n        } else {\r\n          fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n          keyData.__fnct = fnc;\r\n        }\r\n        perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n        var distanceInLine = bezierData.segmentLength * perc;\r\n\r\n        var segmentPerc;\r\n        var addedLength = (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n        j = (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n        flag = true;\r\n        jLen = bezierData.points.length;\r\n        while (flag) {\r\n          addedLength += bezierData.points[j].partialLength;\r\n          if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n            kLen = bezierData.points[j].point.length;\r\n            for (k = 0; k < kLen; k += 1) {\r\n              newValue[k] = bezierData.points[j].point[k];\r\n            }\r\n            break;\r\n          } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n            segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n            kLen = bezierData.points[j].point.length;\r\n            for (k = 0; k < kLen; k += 1) {\r\n              newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n            }\r\n            break;\r\n          }\r\n          if (j < jLen - 1) {\r\n            j += 1;\r\n          } else {\r\n            flag = false;\r\n          }\r\n        }\r\n        caching._lastPoint = j;\r\n        caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n        caching._lastKeyframeIndex = i;\r\n      }\r\n    } else {\r\n      var outX;\r\n      var outY;\r\n      var inX;\r\n      var inY;\r\n      var keyValue;\r\n      len = keyData.s.length;\r\n      endValue = nextKeyData.s || keyData.e;\r\n      if (this.sh && keyData.h !== 1) {\r\n        if (frameNum >= nextKeyTime) {\r\n          newValue[0] = endValue[0];\r\n          newValue[1] = endValue[1];\r\n          newValue[2] = endValue[2];\r\n        } else if (frameNum <= keyTime) {\r\n          newValue[0] = keyData.s[0];\r\n          newValue[1] = keyData.s[1];\r\n          newValue[2] = keyData.s[2];\r\n        } else {\r\n          var quatStart = createQuaternion(keyData.s);\r\n          var quatEnd = createQuaternion(endValue);\r\n          var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n          quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n        }\r\n      } else {\r\n        for (i = 0; i < len; i += 1) {\r\n          if (keyData.h !== 1) {\r\n            if (frameNum >= nextKeyTime) {\r\n              perc = 1;\r\n            } else if (frameNum < keyTime) {\r\n              perc = 0;\r\n            } else {\r\n              if (keyData.o.x.constructor === Array) {\r\n                if (!keyData.__fnct) {\r\n                  keyData.__fnct = [];\r\n                }\r\n                if (!keyData.__fnct[i]) {\r\n                  outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                  outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                  inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                  inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                  fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                  keyData.__fnct[i] = fnc;\r\n                } else {\r\n                  fnc = keyData.__fnct[i];\r\n                }\r\n              } else if (!keyData.__fnct) {\r\n                outX = keyData.o.x;\r\n                outY = keyData.o.y;\r\n                inX = keyData.i.x;\r\n                inY = keyData.i.y;\r\n                fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                keyData.__fnct = fnc;\r\n              } else {\r\n                fnc = keyData.__fnct;\r\n              }\r\n              perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n            }\r\n          }\r\n\r\n          endValue = nextKeyData.s || keyData.e;\r\n          keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n          if (this.propType === 'multidimensional') {\r\n            newValue[i] = keyValue;\r\n          } else {\r\n            newValue = keyValue;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    caching.lastIndex = iterationIndex;\r\n    return newValue;\r\n  }\r\n\r\n  // based on @Toji's https://github.com/toji/gl-matrix/\r\n  function slerp(a, b, t) {\r\n    var out = [];\r\n    var ax = a[0];\r\n    var ay = a[1];\r\n    var az = a[2];\r\n    var aw = a[3];\r\n    var bx = b[0];\r\n    var by = b[1];\r\n    var bz = b[2];\r\n    var bw = b[3];\r\n\r\n    var omega;\r\n    var cosom;\r\n    var sinom;\r\n    var scale0;\r\n    var scale1;\r\n\r\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n    if (cosom < 0.0) {\r\n      cosom = -cosom;\r\n      bx = -bx;\r\n      by = -by;\r\n      bz = -bz;\r\n      bw = -bw;\r\n    }\r\n    if ((1.0 - cosom) > 0.000001) {\r\n      omega = Math.acos(cosom);\r\n      sinom = Math.sin(omega);\r\n      scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n      scale1 = Math.sin(t * omega) / sinom;\r\n    } else {\r\n      scale0 = 1.0 - t;\r\n      scale1 = t;\r\n    }\r\n    out[0] = scale0 * ax + scale1 * bx;\r\n    out[1] = scale0 * ay + scale1 * by;\r\n    out[2] = scale0 * az + scale1 * bz;\r\n    out[3] = scale0 * aw + scale1 * bw;\r\n\r\n    return out;\r\n  }\r\n\r\n  function quaternionToEuler(out, quat) {\r\n    var qx = quat[0];\r\n    var qy = quat[1];\r\n    var qz = quat[2];\r\n    var qw = quat[3];\r\n    var heading = Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy * qy - 2 * qz * qz);\r\n    var attitude = Math.asin(2 * qx * qy + 2 * qz * qw);\r\n    var bank = Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx * qx - 2 * qz * qz);\r\n    out[0] = heading / degToRads;\r\n    out[1] = attitude / degToRads;\r\n    out[2] = bank / degToRads;\r\n  }\r\n\r\n  function createQuaternion(values) {\r\n    var heading = values[0] * degToRads;\r\n    var attitude = values[1] * degToRads;\r\n    var bank = values[2] * degToRads;\r\n    var c1 = Math.cos(heading / 2);\r\n    var c2 = Math.cos(attitude / 2);\r\n    var c3 = Math.cos(bank / 2);\r\n    var s1 = Math.sin(heading / 2);\r\n    var s2 = Math.sin(attitude / 2);\r\n    var s3 = Math.sin(bank / 2);\r\n    var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n    var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n    var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n    var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n    return [x, y, z, w];\r\n  }\r\n\r\n  function getValueAtCurrentTime() {\r\n    var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n    var initTime = this.keyframes[0].t - this.offsetTime;\r\n    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n    if (!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))) {\r\n      if (this._caching.lastFrame >= frameNum) {\r\n        this._caching._lastKeyframeIndex = -1;\r\n        this._caching.lastIndex = 0;\r\n      }\r\n\r\n      var renderResult = this.interpolateValue(frameNum, this._caching);\r\n      this.pv = renderResult;\r\n    }\r\n    this._caching.lastFrame = frameNum;\r\n    return this.pv;\r\n  }\r\n\r\n  function setVValue(val) {\r\n    var multipliedValue;\r\n    if (this.propType === 'unidimensional') {\r\n      multipliedValue = val * this.mult;\r\n      if (mathAbs(this.v - multipliedValue) > 0.00001) {\r\n        this.v = multipliedValue;\r\n        this._mdf = true;\r\n      }\r\n    } else {\r\n      var i = 0;\r\n      var len = this.v.length;\r\n      while (i < len) {\r\n        multipliedValue = val[i] * this.mult;\r\n        if (mathAbs(this.v[i] - multipliedValue) > 0.00001) {\r\n          this.v[i] = multipliedValue;\r\n          this._mdf = true;\r\n        }\r\n        i += 1;\r\n      }\r\n    }\r\n  }\r\n\r\n  function processEffectsSequence() {\r\n    if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n      return;\r\n    }\r\n    if (this.lock) {\r\n      this.setVValue(this.pv);\r\n      return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = this._isFirstFrame;\r\n    var i;\r\n    var len = this.effectsSequence.length;\r\n    var finalValue = this.kf ? this.pv : this.data.k;\r\n    for (i = 0; i < len; i += 1) {\r\n      finalValue = this.effectsSequence[i](finalValue);\r\n    }\r\n    this.setVValue(finalValue);\r\n    this._isFirstFrame = false;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function addEffect(effectFunction) {\r\n    this.effectsSequence.push(effectFunction);\r\n    this.container.addDynamicProperty(this);\r\n  }\r\n\r\n  function ValueProperty(elem, data, mult, container) {\r\n    this.propType = 'unidimensional';\r\n    this.mult = mult || 1;\r\n    this.data = data;\r\n    this.v = mult ? data.k * mult : data.k;\r\n    this.pv = data.k;\r\n    this._mdf = false;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this.vel = 0;\r\n    this.effectsSequence = [];\r\n    this._isFirstFrame = true;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function MultiDimensionalProperty(elem, data, mult, container) {\r\n    this.propType = 'multidimensional';\r\n    this.mult = mult || 1;\r\n    this.data = data;\r\n    this._mdf = false;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this.frameId = -1;\r\n    var i;\r\n    var len = data.k.length;\r\n    this.v = createTypedArray('float32', len);\r\n    this.pv = createTypedArray('float32', len);\r\n    this.vel = createTypedArray('float32', len);\r\n    for (i = 0; i < len; i += 1) {\r\n      this.v[i] = data.k[i] * this.mult;\r\n      this.pv[i] = data.k[i];\r\n    }\r\n    this._isFirstFrame = true;\r\n    this.effectsSequence = [];\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function KeyframedValueProperty(elem, data, mult, container) {\r\n    this.propType = 'unidimensional';\r\n    this.keyframes = data.k;\r\n    this.offsetTime = elem.data.st;\r\n    this.frameId = -1;\r\n    this._caching = {\r\n      lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1,\r\n    };\r\n    this.k = true;\r\n    this.kf = true;\r\n    this.data = data;\r\n    this.mult = mult || 1;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.v = initFrame;\r\n    this.pv = initFrame;\r\n    this._isFirstFrame = true;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.interpolateValue = interpolateValue;\r\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function KeyframedMultidimensionalProperty(elem, data, mult, container) {\r\n    this.propType = 'multidimensional';\r\n    var i;\r\n    var len = data.k.length;\r\n    var s;\r\n    var e;\r\n    var to;\r\n    var ti;\r\n    for (i = 0; i < len - 1; i += 1) {\r\n      if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\r\n        s = data.k[i].s;\r\n        e = data.k[i + 1].s;\r\n        to = data.k[i].to;\r\n        ti = data.k[i].ti;\r\n        if ((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], s[0] + to[0], s[1] + to[1]) && bez.pointOnLine2D(s[0], s[1], e[0], e[1], e[0] + ti[0], e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], s[0] + to[0], s[1] + to[1], s[2] + to[2]) && bez.pointOnLine3D(s[0], s[1], s[2], e[0], e[1], e[2], e[0] + ti[0], e[1] + ti[1], e[2] + ti[2]))) {\r\n          data.k[i].to = null;\r\n          data.k[i].ti = null;\r\n        }\r\n        if (s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n          if (s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n            data.k[i].to = null;\r\n            data.k[i].ti = null;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n    this.data = data;\r\n    this.keyframes = data.k;\r\n    this.offsetTime = elem.data.st;\r\n    this.k = true;\r\n    this.kf = true;\r\n    this._isFirstFrame = true;\r\n    this.mult = mult || 1;\r\n    this.elem = elem;\r\n    this.container = container;\r\n    this.comp = elem.comp;\r\n    this.getValue = processEffectsSequence;\r\n    this.setVValue = setVValue;\r\n    this.interpolateValue = interpolateValue;\r\n    this.frameId = -1;\r\n    var arrLen = data.k[0].s.length;\r\n    this.v = createTypedArray('float32', arrLen);\r\n    this.pv = createTypedArray('float32', arrLen);\r\n    for (i = 0; i < arrLen; i += 1) {\r\n      this.v[i] = initFrame;\r\n      this.pv[i] = initFrame;\r\n    }\r\n    this._caching = { lastFrame: initFrame, lastIndex: 0, value: createTypedArray('float32', arrLen) };\r\n    this.addEffect = addEffect;\r\n  }\r\n\r\n  function getProp(elem, data, type, mult, container) {\r\n    var p;\r\n    if (!data.k.length) {\r\n      p = new ValueProperty(elem, data, mult, container);\r\n    } else if (typeof (data.k[0]) === 'number') {\r\n      p = new MultiDimensionalProperty(elem, data, mult, container);\r\n    } else {\r\n      switch (type) {\r\n        case 0:\r\n          p = new KeyframedValueProperty(elem, data, mult, container);\r\n          break;\r\n        case 1:\r\n          p = new KeyframedMultidimensionalProperty(elem, data, mult, container);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    if (p.effectsSequence.length) {\r\n      container.addDynamicProperty(p);\r\n    }\r\n    return p;\r\n  }\r\n\r\n  var ob = {\r\n    getProp: getProp,\r\n  };\r\n  return ob;\r\n}());\r\n\r\n/* global Matrix, degToRads, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n/* exported TransformPropertyFactory */\r\n\r\nvar TransformPropertyFactory = (function () {\r\n  var defaultVector = [0, 0];\r\n\r\n  function applyToMatrix(mat) {\r\n    var _mdf = this._mdf;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || _mdf;\r\n    if (this.a) {\r\n      mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n    }\r\n    if (this.s) {\r\n      mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n    }\r\n    if (this.sk) {\r\n      mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n    }\r\n    if (this.r) {\r\n      mat.rotate(-this.r.v);\r\n    } else {\r\n      mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n        .rotateY(this.or.v[1])\r\n        .rotateX(this.or.v[0]);\r\n    }\r\n    if (this.data.p.s) {\r\n      if (this.data.p.z) {\r\n        mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n      } else {\r\n        mat.translate(this.px.v, this.py.v, 0);\r\n      }\r\n    } else {\r\n      mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n    }\r\n  }\r\n  function processKeys(forceRender) {\r\n    if (this.elem.globalData.frameId === this.frameId) {\r\n      return;\r\n    }\r\n    if (this._isDirty) {\r\n      this.precalculateMatrix();\r\n      this._isDirty = false;\r\n    }\r\n\r\n    this.iterateDynamicProperties();\r\n\r\n    if (this._mdf || forceRender) {\r\n      var frameRate;\r\n      this.v.cloneFromProps(this.pre.props);\r\n      if (this.appliedTransformations < 1) {\r\n        this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n      }\r\n      if (this.appliedTransformations < 2) {\r\n        this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n      }\r\n      if (this.sk && this.appliedTransformations < 3) {\r\n        this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n      }\r\n      if (this.r && this.appliedTransformations < 4) {\r\n        this.v.rotate(-this.r.v);\r\n      } else if (!this.r && this.appliedTransformations < 4) {\r\n        this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n          .rotateY(this.or.v[1])\r\n          .rotateX(this.or.v[0]);\r\n      }\r\n      if (this.autoOriented) {\r\n        var v1;\r\n        var v2;\r\n        frameRate = this.elem.globalData.frameRate;\r\n        if (this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n          if (this.p._caching.lastFrame + this.p.offsetTime <= this.p.keyframes[0].t) {\r\n            v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n          } else if (this.p._caching.lastFrame + this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n            v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n            v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\r\n          } else {\r\n            v1 = this.p.pv;\r\n            v2 = this.p.getValueAtTime((this.p._caching.lastFrame + this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n          }\r\n        } else if (this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n          v1 = [];\r\n          v2 = [];\r\n          var px = this.px;\r\n          var py = this.py;\r\n          if (px._caching.lastFrame + px.offsetTime <= px.keyframes[0].t) {\r\n            v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate, 0);\r\n            v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate, 0);\r\n            v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate, 0);\r\n          } else if (px._caching.lastFrame + px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n            v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate), 0);\r\n            v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate), 0);\r\n            v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n            v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate, 0);\r\n          } else {\r\n            v1 = [px.pv, py.pv];\r\n            v2[0] = px.getValueAtTime((px._caching.lastFrame + px.offsetTime - 0.01) / frameRate, px.offsetTime);\r\n            v2[1] = py.getValueAtTime((py._caching.lastFrame + py.offsetTime - 0.01) / frameRate, py.offsetTime);\r\n          }\r\n        } else {\r\n          v2 = defaultVector;\r\n          v1 = v2;\r\n        }\r\n        this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n      }\r\n      if (this.data.p && this.data.p.s) {\r\n        if (this.data.p.z) {\r\n          this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n        } else {\r\n          this.v.translate(this.px.v, this.py.v, 0);\r\n        }\r\n      } else {\r\n        this.v.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n      }\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function precalculateMatrix() {\r\n    if (!this.a.k) {\r\n      this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n      this.appliedTransformations = 1;\r\n    } else {\r\n      return;\r\n    }\r\n    if (!this.s.effectsSequence.length) {\r\n      this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n      this.appliedTransformations = 2;\r\n    } else {\r\n      return;\r\n    }\r\n    if (this.sk) {\r\n      if (!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n        this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n        this.appliedTransformations = 3;\r\n      } else {\r\n        return;\r\n      }\r\n    }\r\n    if (this.r) {\r\n      if (!this.r.effectsSequence.length) {\r\n        this.pre.rotate(-this.r.v);\r\n        this.appliedTransformations = 4;\r\n      }\r\n    } else if (!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n      this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2])\r\n        .rotateY(this.or.v[1])\r\n        .rotateX(this.or.v[0]);\r\n      this.appliedTransformations = 4;\r\n    }\r\n  }\r\n\r\n  function autoOrient() {\r\n    //\r\n    // var prevP = this.getValueAtTime();\r\n  }\r\n\r\n  function addDynamicProperty(prop) {\r\n    this._addDynamicProperty(prop);\r\n    this.elem.addDynamicProperty(prop);\r\n    this._isDirty = true;\r\n  }\r\n\r\n  function TransformProperty(elem, data, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.propType = 'transform';\r\n    this.data = data;\r\n    this.v = new Matrix();\r\n    // Precalculated matrix with non animated properties\r\n    this.pre = new Matrix();\r\n    this.appliedTransformations = 0;\r\n    this.initDynamicPropertyContainer(container || elem);\r\n    if (data.p && data.p.s) {\r\n      this.px = PropertyFactory.getProp(elem, data.p.x, 0, 0, this);\r\n      this.py = PropertyFactory.getProp(elem, data.p.y, 0, 0, this);\r\n      if (data.p.z) {\r\n        this.pz = PropertyFactory.getProp(elem, data.p.z, 0, 0, this);\r\n      }\r\n    } else {\r\n      this.p = PropertyFactory.getProp(elem, data.p || { k: [0, 0, 0] }, 1, 0, this);\r\n    }\r\n    if (data.rx) {\r\n      this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n      this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n      this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n      if (data.or.k[0].ti) {\r\n        var i;\r\n        var len = data.or.k.length;\r\n        for (i = 0; i < len; i += 1) {\r\n          data.or.k[i].to = null;\r\n          data.or.k[i].ti = null;\r\n        }\r\n      }\r\n      this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n      // sh Indicates it needs to be capped between -180 and 180\r\n      this.or.sh = true;\r\n    } else {\r\n      this.r = PropertyFactory.getProp(elem, data.r || { k: 0 }, 0, degToRads, this);\r\n    }\r\n    if (data.sk) {\r\n      this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n      this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n    }\r\n    this.a = PropertyFactory.getProp(elem, data.a || { k: [0, 0, 0] }, 1, 0, this);\r\n    this.s = PropertyFactory.getProp(elem, data.s || { k: [100, 100, 100] }, 1, 0.01, this);\r\n    // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n    if (data.o) {\r\n      this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, elem);\r\n    } else {\r\n      this.o = { _mdf: false, v: 1 };\r\n    }\r\n    this._isDirty = true;\r\n    if (!this.dynamicProperties.length) {\r\n      this.getValue(true);\r\n    }\r\n  }\r\n\r\n  TransformProperty.prototype = {\r\n    applyToMatrix: applyToMatrix,\r\n    getValue: processKeys,\r\n    precalculateMatrix: precalculateMatrix,\r\n    autoOrient: autoOrient,\r\n  };\r\n\r\n  extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n  TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n  TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n  function getTransformProperty(elem, data, container) {\r\n    return new TransformProperty(elem, data, container);\r\n  }\r\n\r\n  return {\r\n    getTransformProperty: getTransformProperty,\r\n  };\r\n}());\r\n\r\n/* global createSizedArray, createSizedArray, pointPool */\r\n\r\nfunction ShapePath() {\r\n  this.c = false;\r\n  this._length = 0;\r\n  this._maxLength = 8;\r\n  this.v = createSizedArray(this._maxLength);\r\n  this.o = createSizedArray(this._maxLength);\r\n  this.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function (closed, len) {\r\n  this.c = closed;\r\n  this.setLength(len);\r\n  var i = 0;\r\n  while (i < len) {\r\n    this.v[i] = pointPool.newElement();\r\n    this.o[i] = pointPool.newElement();\r\n    this.i[i] = pointPool.newElement();\r\n    i += 1;\r\n  }\r\n};\r\n\r\nShapePath.prototype.setLength = function (len) {\r\n  while (this._maxLength < len) {\r\n    this.doubleArrayLength();\r\n  }\r\n  this._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function () {\r\n  this.v = this.v.concat(createSizedArray(this._maxLength));\r\n  this.i = this.i.concat(createSizedArray(this._maxLength));\r\n  this.o = this.o.concat(createSizedArray(this._maxLength));\r\n  this._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function (x, y, type, pos, replace) {\r\n  var arr;\r\n  this._length = Math.max(this._length, pos + 1);\r\n  if (this._length >= this._maxLength) {\r\n    this.doubleArrayLength();\r\n  }\r\n  switch (type) {\r\n    case 'v':\r\n      arr = this.v;\r\n      break;\r\n    case 'i':\r\n      arr = this.i;\r\n      break;\r\n    case 'o':\r\n      arr = this.o;\r\n      break;\r\n    default:\r\n      arr = [];\r\n      break;\r\n  }\r\n  if (!arr[pos] || (arr[pos] && !replace)) {\r\n    arr[pos] = pointPool.newElement();\r\n  }\r\n  arr[pos][0] = x;\r\n  arr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function (vX, vY, oX, oY, iX, iY, pos, replace) {\r\n  this.setXYAt(vX, vY, 'v', pos, replace);\r\n  this.setXYAt(oX, oY, 'o', pos, replace);\r\n  this.setXYAt(iX, iY, 'i', pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function () {\r\n  var newPath = new ShapePath();\r\n  newPath.setPathData(this.c, this._length);\r\n  var vertices = this.v;\r\n  var outPoints = this.o;\r\n  var inPoints = this.i;\r\n  var init = 0;\r\n  if (this.c) {\r\n    newPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n    init = 1;\r\n  }\r\n  var cnt = this._length - 1;\r\n  var len = this._length;\r\n\r\n  var i;\r\n  for (i = init; i < len; i += 1) {\r\n    newPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n    cnt -= 1;\r\n  }\r\n  return newPath;\r\n};\r\n\r\n/* global extendPrototype, roundCorner, BezierFactory, shapePool, degToRads,\r\n  shapeCollectionPool, PropertyFactory, bmMin, DynamicPropertyContainer */\r\n/* exported ShapePropertyFactory */\r\n\r\nvar ShapePropertyFactory = (function () {\r\n  var initFrame = -999999;\r\n\r\n  function interpolateShape(frameNum, previousValue, caching) {\r\n    var iterationIndex = caching.lastIndex;\r\n    var keyPropS;\r\n    var keyPropE;\r\n    var isHold;\r\n    var j;\r\n    var k;\r\n    var jLen;\r\n    var kLen;\r\n    var perc;\r\n    var vertexValue;\r\n    var kf = this.keyframes;\r\n    if (frameNum < kf[0].t - this.offsetTime) {\r\n      keyPropS = kf[0].s[0];\r\n      isHold = true;\r\n      iterationIndex = 0;\r\n    } else if (frameNum >= kf[kf.length - 1].t - this.offsetTime) {\r\n      keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n      /* if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            } */\r\n      isHold = true;\r\n    } else {\r\n      var i = iterationIndex;\r\n      var len = kf.length - 1;\r\n      var flag = true;\r\n      var keyData;\r\n      var nextKeyData;\r\n      while (flag) {\r\n        keyData = kf[i];\r\n        nextKeyData = kf[i + 1];\r\n        if ((nextKeyData.t - this.offsetTime) > frameNum) {\r\n          break;\r\n        }\r\n        if (i < len - 1) {\r\n          i += 1;\r\n        } else {\r\n          flag = false;\r\n        }\r\n      }\r\n      isHold = keyData.h === 1;\r\n      iterationIndex = i;\r\n      if (!isHold) {\r\n        if (frameNum >= nextKeyData.t - this.offsetTime) {\r\n          perc = 1;\r\n        } else if (frameNum < keyData.t - this.offsetTime) {\r\n          perc = 0;\r\n        } else {\r\n          var fnc;\r\n          if (keyData.__fnct) {\r\n            fnc = keyData.__fnct;\r\n          } else {\r\n            fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y).get;\r\n            keyData.__fnct = fnc;\r\n          }\r\n          perc = fnc((frameNum - (keyData.t - this.offsetTime)) / ((nextKeyData.t - this.offsetTime) - (keyData.t - this.offsetTime)));\r\n        }\r\n        keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n      }\r\n      keyPropS = keyData.s[0];\r\n    }\r\n    jLen = previousValue._length;\r\n    kLen = keyPropS.i[0].length;\r\n    caching.lastIndex = iterationIndex;\r\n\r\n    for (j = 0; j < jLen; j += 1) {\r\n      for (k = 0; k < kLen; k += 1) {\r\n        vertexValue = isHold ? keyPropS.i[j][k] : keyPropS.i[j][k] + (keyPropE.i[j][k] - keyPropS.i[j][k]) * perc;\r\n        previousValue.i[j][k] = vertexValue;\r\n        vertexValue = isHold ? keyPropS.o[j][k] : keyPropS.o[j][k] + (keyPropE.o[j][k] - keyPropS.o[j][k]) * perc;\r\n        previousValue.o[j][k] = vertexValue;\r\n        vertexValue = isHold ? keyPropS.v[j][k] : keyPropS.v[j][k] + (keyPropE.v[j][k] - keyPropS.v[j][k]) * perc;\r\n        previousValue.v[j][k] = vertexValue;\r\n      }\r\n    }\r\n  }\r\n\r\n  function interpolateShapeCurrentTime() {\r\n    var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n    var initTime = this.keyframes[0].t - this.offsetTime;\r\n    var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n    var lastFrame = this._caching.lastFrame;\r\n    if (!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))) {\r\n      /// /\r\n      this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n      this.interpolateShape(frameNum, this.pv, this._caching);\r\n      /// /\r\n    }\r\n    this._caching.lastFrame = frameNum;\r\n    return this.pv;\r\n  }\r\n\r\n  function resetShape() {\r\n    this.paths = this.localShapeCollection;\r\n  }\r\n\r\n  function shapesEqual(shape1, shape2) {\r\n    if (shape1._length !== shape2._length || shape1.c !== shape2.c) {\r\n      return false;\r\n    }\r\n    var i;\r\n    var len = shape1._length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (shape1.v[i][0] !== shape2.v[i][0]\r\n            || shape1.v[i][1] !== shape2.v[i][1]\r\n            || shape1.o[i][0] !== shape2.o[i][0]\r\n            || shape1.o[i][1] !== shape2.o[i][1]\r\n            || shape1.i[i][0] !== shape2.i[i][0]\r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function setVValue(newPath) {\r\n    if (!shapesEqual(this.v, newPath)) {\r\n      this.v = shapePool.clone(newPath);\r\n      this.localShapeCollection.releaseShapes();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this._mdf = true;\r\n      this.paths = this.localShapeCollection;\r\n    }\r\n  }\r\n\r\n  function processEffectsSequence() {\r\n    if (this.elem.globalData.frameId === this.frameId) {\r\n      return;\r\n    } if (!this.effectsSequence.length) {\r\n      this._mdf = false;\r\n      return;\r\n    }\r\n    if (this.lock) {\r\n      this.setVValue(this.pv);\r\n      return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var finalValue;\r\n    if (this.kf) {\r\n      finalValue = this.pv;\r\n    } else if (this.data.ks) {\r\n      finalValue = this.data.ks.k;\r\n    } else {\r\n      finalValue = this.data.pt.k;\r\n    }\r\n    var i;\r\n    var len = this.effectsSequence.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      finalValue = this.effectsSequence[i](finalValue);\r\n    }\r\n    this.setVValue(finalValue);\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n  }\r\n\r\n  function ShapeProperty(elem, data, type) {\r\n    this.propType = 'shape';\r\n    this.comp = elem.comp;\r\n    this.container = elem;\r\n    this.elem = elem;\r\n    this.data = data;\r\n    this.k = false;\r\n    this.kf = false;\r\n    this._mdf = false;\r\n    var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n    this.v = shapePool.clone(pathData);\r\n    this.pv = shapePool.clone(this.v);\r\n    this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n    this.paths = this.localShapeCollection;\r\n    this.paths.addShape(this.v);\r\n    this.reset = resetShape;\r\n    this.effectsSequence = [];\r\n  }\r\n\r\n  function addEffect(effectFunction) {\r\n    this.effectsSequence.push(effectFunction);\r\n    this.container.addDynamicProperty(this);\r\n  }\r\n\r\n  ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n  ShapeProperty.prototype.getValue = processEffectsSequence;\r\n  ShapeProperty.prototype.setVValue = setVValue;\r\n  ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n  function KeyframedShapeProperty(elem, data, type) {\r\n    this.propType = 'shape';\r\n    this.comp = elem.comp;\r\n    this.elem = elem;\r\n    this.container = elem;\r\n    this.offsetTime = elem.data.st;\r\n    this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n    this.k = true;\r\n    this.kf = true;\r\n    var len = this.keyframes[0].s[0].i.length;\r\n    this.v = shapePool.newElement();\r\n    this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n    this.pv = shapePool.clone(this.v);\r\n    this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n    this.paths = this.localShapeCollection;\r\n    this.paths.addShape(this.v);\r\n    this.lastFrame = initFrame;\r\n    this.reset = resetShape;\r\n    this._caching = { lastFrame: initFrame, lastIndex: 0 };\r\n    this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n  }\r\n  KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n  KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n  KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n  KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n  var EllShapeProperty = (function () {\r\n    var cPoint = roundCorner;\r\n\r\n    function EllShapePropertyFactory(elem, data) {\r\n      /* this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            }; */\r\n      this.v = shapePool.newElement();\r\n      this.v.setPathData(true, 4);\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.paths = this.localShapeCollection;\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.d = data.d;\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.frameId = -1;\r\n      this.initDynamicPropertyContainer(elem);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertEllToPath();\r\n      }\r\n    }\r\n\r\n    EllShapePropertyFactory.prototype = {\r\n      reset: resetShape,\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf) {\r\n          this.convertEllToPath();\r\n        }\r\n      },\r\n      convertEllToPath: function () {\r\n        var p0 = this.p.v[0];\r\n        var p1 = this.p.v[1];\r\n        var s0 = this.s.v[0] / 2;\r\n        var s1 = this.s.v[1] / 2;\r\n        var _cw = this.d !== 3;\r\n        var _v = this.v;\r\n        _v.v[0][0] = p0;\r\n        _v.v[0][1] = p1 - s1;\r\n        _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.v[1][1] = p1;\r\n        _v.v[2][0] = p0;\r\n        _v.v[2][1] = p1 + s1;\r\n        _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.v[3][1] = p1;\r\n        _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n        _v.i[0][1] = p1 - s1;\r\n        _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.i[1][1] = p1 - s1 * cPoint;\r\n        _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n        _v.i[2][1] = p1 + s1;\r\n        _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.i[3][1] = p1 + s1 * cPoint;\r\n        _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n        _v.o[0][1] = p1 - s1;\r\n        _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n        _v.o[1][1] = p1 + s1 * cPoint;\r\n        _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n        _v.o[2][1] = p1 + s1;\r\n        _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n        _v.o[3][1] = p1 - s1 * cPoint;\r\n      },\r\n    };\r\n\r\n    extendPrototype([DynamicPropertyContainer], EllShapePropertyFactory);\r\n\r\n    return EllShapePropertyFactory;\r\n  }());\r\n\r\n  var StarShapeProperty = (function () {\r\n    function StarShapePropertyFactory(elem, data) {\r\n      this.v = shapePool.newElement();\r\n      this.v.setPathData(true, 0);\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.data = data;\r\n      this.frameId = -1;\r\n      this.d = data.d;\r\n      this.initDynamicPropertyContainer(elem);\r\n      if (data.sy === 1) {\r\n        this.ir = PropertyFactory.getProp(elem, data.ir, 0, 0, this);\r\n        this.is = PropertyFactory.getProp(elem, data.is, 0, 0.01, this);\r\n        this.convertToPath = this.convertStarToPath;\r\n      } else {\r\n        this.convertToPath = this.convertPolygonToPath;\r\n      }\r\n      this.pt = PropertyFactory.getProp(elem, data.pt, 0, 0, this);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.r = PropertyFactory.getProp(elem, data.r, 0, degToRads, this);\r\n      this.or = PropertyFactory.getProp(elem, data.or, 0, 0, this);\r\n      this.os = PropertyFactory.getProp(elem, data.os, 0, 0.01, this);\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.paths = this.localShapeCollection;\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertToPath();\r\n      }\r\n    }\r\n\r\n    StarShapePropertyFactory.prototype = {\r\n      reset: resetShape,\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n        if (this._mdf) {\r\n          this.convertToPath();\r\n        }\r\n      },\r\n      convertStarToPath: function () {\r\n        var numPts = Math.floor(this.pt.v) * 2;\r\n        var angle = (Math.PI * 2) / numPts;\r\n        /* this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts; */\r\n        var longFlag = true;\r\n        var longRad = this.or.v;\r\n        var shortRad = this.ir.v;\r\n        var longRound = this.os.v;\r\n        var shortRound = this.is.v;\r\n        var longPerimSegment = (2 * Math.PI * longRad) / (numPts * 2);\r\n        var shortPerimSegment = (2 * Math.PI * shortRad) / (numPts * 2);\r\n        var i;\r\n        var rad;\r\n        var roundness;\r\n        var perimSegment;\r\n        var currentAng = -Math.PI / 2;\r\n        currentAng += this.r.v;\r\n        var dir = this.data.d === 3 ? -1 : 1;\r\n        this.v._length = 0;\r\n        for (i = 0; i < numPts; i += 1) {\r\n          rad = longFlag ? longRad : shortRad;\r\n          roundness = longFlag ? longRound : shortRound;\r\n          perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n          var x = rad * Math.cos(currentAng);\r\n          var y = rad * Math.sin(currentAng);\r\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\r\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\r\n          x += +this.p.v[0];\r\n          y += +this.p.v[1];\r\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\r\n\r\n          /* this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts; */\r\n          longFlag = !longFlag;\r\n          currentAng += angle * dir;\r\n        }\r\n      },\r\n      convertPolygonToPath: function () {\r\n        var numPts = Math.floor(this.pt.v);\r\n        var angle = (Math.PI * 2) / numPts;\r\n        var rad = this.or.v;\r\n        var roundness = this.os.v;\r\n        var perimSegment = (2 * Math.PI * rad) / (numPts * 4);\r\n        var i;\r\n        var currentAng = -Math.PI * 0.5;\r\n        var dir = this.data.d === 3 ? -1 : 1;\r\n        currentAng += this.r.v;\r\n        this.v._length = 0;\r\n        for (i = 0; i < numPts; i += 1) {\r\n          var x = rad * Math.cos(currentAng);\r\n          var y = rad * Math.sin(currentAng);\r\n          var ox = x === 0 && y === 0 ? 0 : y / Math.sqrt(x * x + y * y);\r\n          var oy = x === 0 && y === 0 ? 0 : -x / Math.sqrt(x * x + y * y);\r\n          x += +this.p.v[0];\r\n          y += +this.p.v[1];\r\n          this.v.setTripleAt(x, y, x - ox * perimSegment * roundness * dir, y - oy * perimSegment * roundness * dir, x + ox * perimSegment * roundness * dir, y + oy * perimSegment * roundness * dir, i, true);\r\n          currentAng += angle * dir;\r\n        }\r\n        this.paths.length = 0;\r\n        this.paths[0] = this.v;\r\n      },\r\n\r\n    };\r\n    extendPrototype([DynamicPropertyContainer], StarShapePropertyFactory);\r\n\r\n    return StarShapePropertyFactory;\r\n  }());\r\n\r\n  var RectShapeProperty = (function () {\r\n    function RectShapePropertyFactory(elem, data) {\r\n      this.v = shapePool.newElement();\r\n      this.v.c = true;\r\n      this.localShapeCollection = shapeCollectionPool.newShapeCollection();\r\n      this.localShapeCollection.addShape(this.v);\r\n      this.paths = this.localShapeCollection;\r\n      this.elem = elem;\r\n      this.comp = elem.comp;\r\n      this.frameId = -1;\r\n      this.d = data.d;\r\n      this.initDynamicPropertyContainer(elem);\r\n      this.p = PropertyFactory.getProp(elem, data.p, 1, 0, this);\r\n      this.s = PropertyFactory.getProp(elem, data.s, 1, 0, this);\r\n      this.r = PropertyFactory.getProp(elem, data.r, 0, 0, this);\r\n      if (this.dynamicProperties.length) {\r\n        this.k = true;\r\n      } else {\r\n        this.k = false;\r\n        this.convertRectToPath();\r\n      }\r\n    }\r\n\r\n    RectShapePropertyFactory.prototype = {\r\n      convertRectToPath: function () {\r\n        var p0 = this.p.v[0];\r\n        var p1 = this.p.v[1];\r\n        var v0 = this.s.v[0] / 2;\r\n        var v1 = this.s.v[1] / 2;\r\n        var round = bmMin(v0, v1, this.r.v);\r\n        var cPoint = round * (1 - roundCorner);\r\n        this.v._length = 0;\r\n\r\n        if (this.d === 2 || this.d === 1) {\r\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, 0, true);\r\n          this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, p0 + v0, p1 + v1 - round, 1, true);\r\n          if (round !== 0) {\r\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, 2, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0 + round, p1 + v1, 3, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, 4, true);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1 + round, 5, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, 6, true);\r\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, p0 + v0 - round, p1 - v1, 7, true);\r\n          } else {\r\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0 + cPoint, p1 + v1, p0 - v0, p1 + v1, 2);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0, p1 - v1 + cPoint, p0 - v0, p1 - v1, 3);\r\n          }\r\n        } else {\r\n          this.v.setTripleAt(p0 + v0, p1 - v1 + round, p0 + v0, p1 - v1 + cPoint, p0 + v0, p1 - v1 + round, 0, true);\r\n          if (round !== 0) {\r\n            this.v.setTripleAt(p0 + v0 - round, p1 - v1, p0 + v0 - round, p1 - v1, p0 + v0 - cPoint, p1 - v1, 1, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0 + round, p1 - v1, 2, true);\r\n            this.v.setTripleAt(p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + round, p0 - v0, p1 - v1 + cPoint, 3, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1 - round, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1 - round, 4, true);\r\n            this.v.setTripleAt(p0 - v0 + round, p1 + v1, p0 - v0 + round, p1 + v1, p0 - v0 + cPoint, p1 + v1, 5, true);\r\n            this.v.setTripleAt(p0 + v0 - round, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0 - round, p1 + v1, 6, true);\r\n            this.v.setTripleAt(p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - round, p0 + v0, p1 + v1 - cPoint, 7, true);\r\n          } else {\r\n            this.v.setTripleAt(p0 - v0, p1 - v1, p0 - v0 + cPoint, p1 - v1, p0 - v0, p1 - v1, 1, true);\r\n            this.v.setTripleAt(p0 - v0, p1 + v1, p0 - v0, p1 + v1 - cPoint, p0 - v0, p1 + v1, 2, true);\r\n            this.v.setTripleAt(p0 + v0, p1 + v1, p0 + v0 - cPoint, p1 + v1, p0 + v0, p1 + v1, 3, true);\r\n          }\r\n        }\r\n      },\r\n      getValue: function () {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n          return;\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n        this.iterateDynamicProperties();\r\n        if (this._mdf) {\r\n          this.convertRectToPath();\r\n        }\r\n      },\r\n      reset: resetShape,\r\n    };\r\n    extendPrototype([DynamicPropertyContainer], RectShapePropertyFactory);\r\n\r\n    return RectShapePropertyFactory;\r\n  }());\r\n\r\n  function getShapeProp(elem, data, type) {\r\n    var prop;\r\n    if (type === 3 || type === 4) {\r\n      var dataProp = type === 3 ? data.pt : data.ks;\r\n      var keys = dataProp.k;\r\n      if (keys.length) {\r\n        prop = new KeyframedShapeProperty(elem, data, type);\r\n      } else {\r\n        prop = new ShapeProperty(elem, data, type);\r\n      }\r\n    } else if (type === 5) {\r\n      prop = new RectShapeProperty(elem, data);\r\n    } else if (type === 6) {\r\n      prop = new EllShapeProperty(elem, data);\r\n    } else if (type === 7) {\r\n      prop = new StarShapeProperty(elem, data);\r\n    }\r\n    if (prop.k) {\r\n      elem.addDynamicProperty(prop);\r\n    }\r\n    return prop;\r\n  }\r\n\r\n  function getConstructorFunction() {\r\n    return ShapeProperty;\r\n  }\r\n\r\n  function getKeyframedConstructorFunction() {\r\n    return KeyframedShapeProperty;\r\n  }\r\n\r\n  var ob = {};\r\n  ob.getShapeProp = getShapeProp;\r\n  ob.getConstructorFunction = getConstructorFunction;\r\n  ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n  return ob;\r\n}());\r\n\r\n/* global shapeCollectionPool, initialDefaultFrame, extendPrototype, DynamicPropertyContainer */\r\n/* exported ShapeModifiers */\r\n\r\nvar ShapeModifiers = (function () {\r\n  var ob = {};\r\n  var modifiers = {};\r\n  ob.registerModifier = registerModifier;\r\n  ob.getModifier = getModifier;\r\n\r\n  function registerModifier(nm, factory) {\r\n    if (!modifiers[nm]) {\r\n      modifiers[nm] = factory;\r\n    }\r\n  }\r\n\r\n  function getModifier(nm, elem, data) {\r\n    return new modifiers[nm](elem, data);\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\nfunction ShapeModifier() {}\r\nShapeModifier.prototype.initModifierProperties = function () {};\r\nShapeModifier.prototype.addShapeToModifier = function () {};\r\nShapeModifier.prototype.addShape = function (data) {\r\n  if (!this.closed) {\r\n    // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\r\n    data.sh.container.addDynamicProperty(data.sh);\r\n    var shapeData = { shape: data.sh, data: data, localShapeCollection: shapeCollectionPool.newShapeCollection() };\r\n    this.shapes.push(shapeData);\r\n    this.addShapeToModifier(shapeData);\r\n    if (this._isAnimated) {\r\n      data.setAsAnimated();\r\n    }\r\n  }\r\n};\r\nShapeModifier.prototype.init = function (elem, data) {\r\n  this.shapes = [];\r\n  this.elem = elem;\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.initModifierProperties(elem, data);\r\n  this.frameId = initialDefaultFrame;\r\n  this.closed = false;\r\n  this.k = false;\r\n  if (this.dynamicProperties.length) {\r\n    this.k = true;\r\n  } else {\r\n    this.getValue(true);\r\n  }\r\n};\r\nShapeModifier.prototype.processKeys = function () {\r\n  if (this.elem.globalData.frameId === this.frameId) {\r\n    return;\r\n  }\r\n  this.frameId = this.elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, segmentsLengthPool, bez, shapePool, ShapeModifiers */\r\n\r\nfunction TrimModifier() {\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n  this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n  this.sValue = 0;\r\n  this.eValue = 0;\r\n  this.getValue = this.processKeys;\r\n  this.m = data.m;\r\n  this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function (shapeData) {\r\n  shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function (s, e, shapeLength, addedLength, totalModifierLength) {\r\n  var segments = [];\r\n  if (e <= 1) {\r\n    segments.push({\r\n      s: s,\r\n      e: e,\r\n    });\r\n  } else if (s >= 1) {\r\n    segments.push({\r\n      s: s - 1,\r\n      e: e - 1,\r\n    });\r\n  } else {\r\n    segments.push({\r\n      s: s,\r\n      e: 1,\r\n    });\r\n    segments.push({\r\n      s: 0,\r\n      e: e - 1,\r\n    });\r\n  }\r\n  var shapeSegments = [];\r\n  var i;\r\n  var len = segments.length;\r\n  var segmentOb;\r\n  for (i = 0; i < len; i += 1) {\r\n    segmentOb = segments[i];\r\n    if (!(segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength)) {\r\n      var shapeS;\r\n      var shapeE;\r\n      if (segmentOb.s * totalModifierLength <= addedLength) {\r\n        shapeS = 0;\r\n      } else {\r\n        shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n      }\r\n      if (segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n        shapeE = 1;\r\n      } else {\r\n        shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n      }\r\n      shapeSegments.push([shapeS, shapeE]);\r\n    }\r\n  }\r\n  if (!shapeSegments.length) {\r\n    shapeSegments.push([0, 0]);\r\n  }\r\n  return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function (pathsData) {\r\n  var i;\r\n  var len = pathsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    segmentsLengthPool.release(pathsData[i]);\r\n  }\r\n  pathsData.length = 0;\r\n  return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var s;\r\n  var e;\r\n  if (this._mdf || _isFirstFrame) {\r\n    var o = (this.o.v % 360) / 360;\r\n    if (o < 0) {\r\n      o += 1;\r\n    }\r\n    if (this.s.v > 1) {\r\n      s = 1 + o;\r\n    } else if (this.s.v < 0) {\r\n      s = 0 + o;\r\n    } else {\r\n      s = this.s.v + o;\r\n    }\r\n    if (this.e.v > 1) {\r\n      e = 1 + o;\r\n    } else if (this.e.v < 0) {\r\n      e = 0 + o;\r\n    } else {\r\n      e = this.e.v + o;\r\n    }\r\n\r\n    if (s > e) {\r\n      var _s = s;\r\n      s = e;\r\n      e = _s;\r\n    }\r\n    s = Math.round(s * 10000) * 0.0001;\r\n    e = Math.round(e * 10000) * 0.0001;\r\n    this.sValue = s;\r\n    this.eValue = e;\r\n  } else {\r\n    s = this.sValue;\r\n    e = this.eValue;\r\n  }\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var pathsData;\r\n  var pathData;\r\n  var totalShapeLength;\r\n  var totalModifierLength = 0;\r\n\r\n  if (e === s) {\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapes[i].localShapeCollection.releaseShapes();\r\n      this.shapes[i].shape._mdf = true;\r\n      this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n      if (this._mdf) {\r\n        this.shapes[i].pathsData.length = 0;\r\n      }\r\n    }\r\n  } else if (!((e === 1 && s === 0) || (e === 0 && s === 1))) {\r\n    var segments = [];\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n      if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n        shapeData.shape.paths = shapeData.localShapeCollection;\r\n      } else {\r\n        shapePaths = shapeData.shape.paths;\r\n        jLen = shapePaths._length;\r\n        totalShapeLength = 0;\r\n        if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n          totalShapeLength = shapeData.totalShapeLength;\r\n        } else {\r\n          pathsData = this.releasePathsData(shapeData.pathsData);\r\n          for (j = 0; j < jLen; j += 1) {\r\n            pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n            pathsData.push(pathData);\r\n            totalShapeLength += pathData.totalLength;\r\n          }\r\n          shapeData.totalShapeLength = totalShapeLength;\r\n          shapeData.pathsData = pathsData;\r\n        }\r\n\r\n        totalModifierLength += totalShapeLength;\r\n        shapeData.shape._mdf = true;\r\n      }\r\n    }\r\n    var shapeS = s;\r\n    var shapeE = e;\r\n    var addedLength = 0;\r\n    var edges;\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      shapeData = this.shapes[i];\r\n      if (shapeData.shape._mdf) {\r\n        localShapeCollection = shapeData.localShapeCollection;\r\n        localShapeCollection.releaseShapes();\r\n        // if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n        if (this.m === 2 && len > 1) {\r\n          edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n          addedLength += shapeData.totalShapeLength;\r\n        } else {\r\n          edges = [[shapeS, shapeE]];\r\n        }\r\n        jLen = edges.length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          shapeS = edges[j][0];\r\n          shapeE = edges[j][1];\r\n          segments.length = 0;\r\n          if (shapeE <= 1) {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * shapeS,\r\n              e: shapeData.totalShapeLength * shapeE,\r\n            });\r\n          } else if (shapeS >= 1) {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * (shapeS - 1),\r\n              e: shapeData.totalShapeLength * (shapeE - 1),\r\n            });\r\n          } else {\r\n            segments.push({\r\n              s: shapeData.totalShapeLength * shapeS,\r\n              e: shapeData.totalShapeLength,\r\n            });\r\n            segments.push({\r\n              s: 0,\r\n              e: shapeData.totalShapeLength * (shapeE - 1),\r\n            });\r\n          }\r\n          var newShapesData = this.addShapes(shapeData, segments[0]);\r\n          if (segments[0].s !== segments[0].e) {\r\n            if (segments.length > 1) {\r\n              var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n              if (lastShapeInCollection.c) {\r\n                var lastShape = newShapesData.pop();\r\n                this.addPaths(newShapesData, localShapeCollection);\r\n                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n              } else {\r\n                this.addPaths(newShapesData, localShapeCollection);\r\n                newShapesData = this.addShapes(shapeData, segments[1]);\r\n              }\r\n            }\r\n            this.addPaths(newShapesData, localShapeCollection);\r\n          }\r\n        }\r\n        shapeData.shape.paths = localShapeCollection;\r\n      }\r\n    }\r\n  } else if (this._mdf) {\r\n    for (i = 0; i < len; i += 1) {\r\n      // Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n      // Don't remove this even if it's losing cached info.\r\n      this.shapes[i].pathsData.length = 0;\r\n      this.shapes[i].shape._mdf = true;\r\n    }\r\n  }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function (newPaths, localShapeCollection) {\r\n  var i;\r\n  var len = newPaths.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    localShapeCollection.addShape(newPaths[i]);\r\n  }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function (pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n  shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n  shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n  if (newShape) {\r\n    shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n  }\r\n  shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function (points, shapePath, pos, newShape) {\r\n  shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n  shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n  if (newShape) {\r\n    shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n  }\r\n  shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function (shapeData, shapeSegment, shapePath) {\r\n  var pathsData = shapeData.pathsData;\r\n  var shapePaths = shapeData.shape.paths.shapes;\r\n  var i;\r\n  var len = shapeData.shape.paths._length;\r\n  var j;\r\n  var jLen;\r\n  var addedLength = 0;\r\n  var currentLengthData;\r\n  var segmentCount;\r\n  var lengths;\r\n  var segment;\r\n  var shapes = [];\r\n  var initPos;\r\n  var newShape = true;\r\n  if (!shapePath) {\r\n    shapePath = shapePool.newElement();\r\n    segmentCount = 0;\r\n    initPos = 0;\r\n  } else {\r\n    segmentCount = shapePath._length;\r\n    initPos = shapePath._length;\r\n  }\r\n  shapes.push(shapePath);\r\n  for (i = 0; i < len; i += 1) {\r\n    lengths = pathsData[i].lengths;\r\n    shapePath.c = shapePaths[i].c;\r\n    jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n    for (j = 1; j < jLen; j += 1) {\r\n      currentLengthData = lengths[j - 1];\r\n      if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n        addedLength += currentLengthData.addedLength;\r\n        shapePath.c = false;\r\n      } else if (addedLength > shapeSegment.e) {\r\n        shapePath.c = false;\r\n        break;\r\n      } else {\r\n        if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n          this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n        } else {\r\n          segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength) / currentLengthData.addedLength, (shapeSegment.e - addedLength) / currentLengthData.addedLength, lengths[j - 1]);\r\n          this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n          // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n          shapePath.c = false;\r\n        }\r\n        addedLength += currentLengthData.addedLength;\r\n        segmentCount += 1;\r\n      }\r\n    }\r\n    if (shapePaths[i].c && lengths.length) {\r\n      currentLengthData = lengths[j - 1];\r\n      if (addedLength <= shapeSegment.e) {\r\n        var segmentLength = lengths[j - 1].addedLength;\r\n        if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n          this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n        } else {\r\n          segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n          this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n          // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n          newShape = false;\r\n          shapePath.c = false;\r\n        }\r\n      } else {\r\n        shapePath.c = false;\r\n      }\r\n      addedLength += currentLengthData.addedLength;\r\n      segmentCount += 1;\r\n    }\r\n    if (shapePath._length) {\r\n      shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n      shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1], 'o', shapePath._length - 1);\r\n    }\r\n    if (addedLength > shapeSegment.e) {\r\n      break;\r\n    }\r\n    if (i < len - 1) {\r\n      shapePath = shapePool.newElement();\r\n      newShape = true;\r\n      shapes.push(shapePath);\r\n      segmentCount = 0;\r\n    }\r\n  }\r\n  return shapes;\r\n};\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, shapePool, roundCorner, ShapeModifiers */\r\n\r\nfunction RoundCornersModifier() {}\r\nextendPrototype([ShapeModifier], RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.rd = PropertyFactory.getProp(elem, data.r, 0, null, this);\r\n  this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function (path, round) {\r\n  var clonedPath = shapePool.newElement();\r\n  clonedPath.c = path.c;\r\n  var i;\r\n  var len = path._length;\r\n  var currentV;\r\n  var currentI;\r\n  var currentO;\r\n  var closerV;\r\n  var distance;\r\n  var newPosPerc;\r\n  var index = 0;\r\n  var vX;\r\n  var vY;\r\n  var oX;\r\n  var oY;\r\n  var iX;\r\n  var iY;\r\n  for (i = 0; i < len; i += 1) {\r\n    currentV = path.v[i];\r\n    currentO = path.o[i];\r\n    currentI = path.i[i];\r\n    if (currentV[0] === currentO[0] && currentV[1] === currentO[1] && currentV[0] === currentI[0] && currentV[1] === currentI[1]) {\r\n      if ((i === 0 || i === len - 1) && !path.c) {\r\n        clonedPath.setTripleAt(currentV[0], currentV[1], currentO[0], currentO[1], currentI[0], currentI[1], index);\r\n        /* clonedPath.v[index] = currentV;\r\n                clonedPath.o[index] = currentO;\r\n                clonedPath.i[index] = currentI; */\r\n        index += 1;\r\n      } else {\r\n        if (i === 0) {\r\n          closerV = path.v[len - 1];\r\n        } else {\r\n          closerV = path.v[i - 1];\r\n        }\r\n        distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\r\n        newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\r\n        iX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\r\n        vX = iX;\r\n        iY = currentV[1] - (currentV[1] - closerV[1]) * newPosPerc;\r\n        vY = iY;\r\n        oX = vX - (vX - currentV[0]) * roundCorner;\r\n        oY = vY - (vY - currentV[1]) * roundCorner;\r\n        clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\r\n        index += 1;\r\n\r\n        if (i === len - 1) {\r\n          closerV = path.v[0];\r\n        } else {\r\n          closerV = path.v[i + 1];\r\n        }\r\n        distance = Math.sqrt(Math.pow(currentV[0] - closerV[0], 2) + Math.pow(currentV[1] - closerV[1], 2));\r\n        newPosPerc = distance ? Math.min(distance / 2, round) / distance : 0;\r\n        oX = currentV[0] + (closerV[0] - currentV[0]) * newPosPerc;\r\n        vX = oX;\r\n        oY = currentV[1] + (closerV[1] - currentV[1]) * newPosPerc;\r\n        vY = oY;\r\n        iX = vX - (vX - currentV[0]) * roundCorner;\r\n        iY = vY - (vY - currentV[1]) * roundCorner;\r\n        clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, index);\r\n        index += 1;\r\n      }\r\n    } else {\r\n      clonedPath.setTripleAt(path.v[i][0], path.v[i][1], path.o[i][0], path.o[i][1], path.i[i][0], path.i[i][1], index);\r\n      index += 1;\r\n    }\r\n  }\r\n  return clonedPath;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var rd = this.rd.v;\r\n\r\n  if (rd !== 0) {\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      localShapeCollection = shapeData.localShapeCollection;\r\n      if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\r\n        localShapeCollection.releaseShapes();\r\n        shapeData.shape._mdf = true;\r\n        shapePaths = shapeData.shape.paths.shapes;\r\n        jLen = shapeData.shape.paths._length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          localShapeCollection.addShape(this.processPath(shapePaths[j], rd));\r\n        }\r\n      }\r\n      shapeData.shape.paths = shapeData.localShapeCollection;\r\n    }\r\n  }\r\n  if (!this.dynamicProperties.length) {\r\n    this._mdf = false;\r\n  }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd', RoundCornersModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, PropertyFactory, shapePool, ShapeModifiers */\r\n\r\nfunction PuckerAndBloatModifier() {}\r\nextendPrototype([ShapeModifier], PuckerAndBloatModifier);\r\nPuckerAndBloatModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.amount = PropertyFactory.getProp(elem, data.a, 0, null, this);\r\n  this._isAnimated = !!this.amount.effectsSequence.length;\r\n};\r\n\r\nPuckerAndBloatModifier.prototype.processPath = function (path, amount) {\r\n  var percent = amount / 100;\r\n  var centerPoint = [0, 0];\r\n  var pathLength = path._length;\r\n  var i = 0;\r\n  for (i = 0; i < pathLength; i += 1) {\r\n    centerPoint[0] += path.v[i][0];\r\n    centerPoint[1] += path.v[i][1];\r\n  }\r\n  centerPoint[0] /= pathLength;\r\n  centerPoint[1] /= pathLength;\r\n  var clonedPath = shapePool.newElement();\r\n  clonedPath.c = path.c;\r\n  var vX;\r\n  var vY;\r\n  var oX;\r\n  var oY;\r\n  var iX;\r\n  var iY;\r\n  for (i = 0; i < pathLength; i += 1) {\r\n    vX = path.v[i][0] + (centerPoint[0] - path.v[i][0]) * percent;\r\n    vY = path.v[i][1] + (centerPoint[1] - path.v[i][1]) * percent;\r\n    oX = path.o[i][0] + (centerPoint[0] - path.o[i][0]) * -percent;\r\n    oY = path.o[i][1] + (centerPoint[1] - path.o[i][1]) * -percent;\r\n    iX = path.i[i][0] + (centerPoint[0] - path.i[i][0]) * -percent;\r\n    iY = path.i[i][1] + (centerPoint[1] - path.i[i][1]) * -percent;\r\n    clonedPath.setTripleAt(vX, vY, oX, oY, iX, iY, i);\r\n  }\r\n  return clonedPath;\r\n};\r\n\r\nPuckerAndBloatModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var shapePaths;\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var j;\r\n  var jLen;\r\n  var amount = this.amount.v;\r\n\r\n  if (amount !== 0) {\r\n    var shapeData;\r\n    var localShapeCollection;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapeData = this.shapes[i];\r\n      localShapeCollection = shapeData.localShapeCollection;\r\n      if (!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)) {\r\n        localShapeCollection.releaseShapes();\r\n        shapeData.shape._mdf = true;\r\n        shapePaths = shapeData.shape.paths.shapes;\r\n        jLen = shapeData.shape.paths._length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          localShapeCollection.addShape(this.processPath(shapePaths[j], amount));\r\n        }\r\n      }\r\n      shapeData.shape.paths = shapeData.localShapeCollection;\r\n    }\r\n  }\r\n  if (!this.dynamicProperties.length) {\r\n    this._mdf = false;\r\n  }\r\n};\r\nShapeModifiers.registerModifier('pb', PuckerAndBloatModifier);\r\n\r\n/* global extendPrototype, ShapeModifier, TransformPropertyFactory, PropertyFactory, Matrix, ShapeModifiers */\r\n\r\nfunction RepeaterModifier() {}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function (elem, data) {\r\n  this.getValue = this.processKeys;\r\n  this.c = PropertyFactory.getProp(elem, data.c, 0, null, this);\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, null, this);\r\n  this.tr = TransformPropertyFactory.getTransformProperty(elem, data.tr, this);\r\n  this.so = PropertyFactory.getProp(elem, data.tr.so, 0, 0.01, this);\r\n  this.eo = PropertyFactory.getProp(elem, data.tr.eo, 0, 0.01, this);\r\n  this.data = data;\r\n  if (!this.dynamicProperties.length) {\r\n    this.getValue(true);\r\n  }\r\n  this._isAnimated = !!this.dynamicProperties.length;\r\n  this.pMatrix = new Matrix();\r\n  this.rMatrix = new Matrix();\r\n  this.sMatrix = new Matrix();\r\n  this.tMatrix = new Matrix();\r\n  this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function (pMatrix, rMatrix, sMatrix, transform, perc, inv) {\r\n  var dir = inv ? -1 : 1;\r\n  var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n  var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n  pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n  rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n  rMatrix.rotate(-transform.r.v * dir * perc);\r\n  rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n  sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n  sMatrix.scale(inv ? 1 / scaleX : scaleX, inv ? 1 / scaleY : scaleY);\r\n  sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function (elem, arr, pos, elemsData) {\r\n  this.elem = elem;\r\n  this.arr = arr;\r\n  this.pos = pos;\r\n  this.elemsData = elemsData;\r\n  this._currentCopies = 0;\r\n  this._elements = [];\r\n  this._groups = [];\r\n  this.frameId = -1;\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.initModifierProperties(elem, arr[pos]);\r\n  while (pos > 0) {\r\n    pos -= 1;\r\n    // this._elements.unshift(arr.splice(pos,1)[0]);\r\n    this._elements.unshift(arr[pos]);\r\n  }\r\n  if (this.dynamicProperties.length) {\r\n    this.k = true;\r\n  } else {\r\n    this.getValue(true);\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function (elements) {\r\n  var i;\r\n  var len = elements.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    elements[i]._processed = false;\r\n    if (elements[i].ty === 'gr') {\r\n      this.resetElements(elements[i].it);\r\n    }\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function (elements) {\r\n  var newElements = JSON.parse(JSON.stringify(elements));\r\n  this.resetElements(newElements);\r\n  return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function (elements, renderFlag) {\r\n  var i;\r\n  var len = elements.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    elements[i]._render = renderFlag;\r\n    if (elements[i].ty === 'gr') {\r\n      this.changeGroupRender(elements[i].it, renderFlag);\r\n    }\r\n  }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function (_isFirstFrame) {\r\n  var items;\r\n  var itemsTransform;\r\n  var i;\r\n  var dir;\r\n  var cont;\r\n  var hasReloaded = false;\r\n  if (this._mdf || _isFirstFrame) {\r\n    var copies = Math.ceil(this.c.v);\r\n    if (this._groups.length < copies) {\r\n      while (this._groups.length < copies) {\r\n        var group = {\r\n          it: this.cloneElements(this._elements),\r\n          ty: 'gr',\r\n        };\r\n        group.it.push({\r\n          a: { a: 0, ix: 1, k: [0, 0] }, nm: 'Transform', o: { a: 0, ix: 7, k: 100 }, p: { a: 0, ix: 2, k: [0, 0] }, r: { a: 1, ix: 6, k: [{ s: 0, e: 0, t: 0 }, { s: 0, e: 0, t: 1 }] }, s: { a: 0, ix: 3, k: [100, 100] }, sa: { a: 0, ix: 5, k: 0 }, sk: { a: 0, ix: 4, k: 0 }, ty: 'tr',\r\n        });\r\n\r\n        this.arr.splice(0, 0, group);\r\n        this._groups.splice(0, 0, group);\r\n        this._currentCopies += 1;\r\n      }\r\n      this.elem.reloadShapes();\r\n      hasReloaded = true;\r\n    }\r\n    cont = 0;\r\n    var renderFlag;\r\n    for (i = 0; i <= this._groups.length - 1; i += 1) {\r\n      renderFlag = cont < copies;\r\n      this._groups[i]._render = renderFlag;\r\n      this.changeGroupRender(this._groups[i].it, renderFlag);\r\n      if (!renderFlag) {\r\n        var elems = this.elemsData[i].it;\r\n        var transformData = elems[elems.length - 1];\r\n        if (transformData.transform.op.v !== 0) {\r\n          transformData.transform.op._mdf = true;\r\n          transformData.transform.op.v = 0;\r\n        } else {\r\n          transformData.transform.op._mdf = false;\r\n        }\r\n      }\r\n      cont += 1;\r\n    }\r\n\r\n    this._currentCopies = copies;\r\n    /// /\r\n\r\n    var offset = this.o.v;\r\n    var offsetModulo = offset % 1;\r\n    var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n    var pProps = this.pMatrix.props;\r\n    var rProps = this.rMatrix.props;\r\n    var sProps = this.sMatrix.props;\r\n    this.pMatrix.reset();\r\n    this.rMatrix.reset();\r\n    this.sMatrix.reset();\r\n    this.tMatrix.reset();\r\n    this.matrix.reset();\r\n    var iteration = 0;\r\n\r\n    if (offset > 0) {\r\n      while (iteration < roundOffset) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n        iteration += 1;\r\n      }\r\n      if (offsetModulo) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n        iteration += offsetModulo;\r\n      }\r\n    } else if (offset < 0) {\r\n      while (iteration > roundOffset) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n        iteration -= 1;\r\n      }\r\n      if (offsetModulo) {\r\n        this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, -offsetModulo, true);\r\n        iteration -= offsetModulo;\r\n      }\r\n    }\r\n    i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n    dir = this.data.m === 1 ? 1 : -1;\r\n    cont = this._currentCopies;\r\n    var j;\r\n    var jLen;\r\n    while (cont) {\r\n      items = this.elemsData[i].it;\r\n      itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n      jLen = itemsTransform.length;\r\n      items[items.length - 1].transform.mProps._mdf = true;\r\n      items[items.length - 1].transform.op._mdf = true;\r\n      items[items.length - 1].transform.op.v = this._currentCopies === 1\r\n        ? this.so.v\r\n        : this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n\r\n      if (iteration !== 0) {\r\n        if ((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)) {\r\n          this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n        }\r\n        this.matrix.transform(rProps[0], rProps[1], rProps[2], rProps[3], rProps[4], rProps[5], rProps[6], rProps[7], rProps[8], rProps[9], rProps[10], rProps[11], rProps[12], rProps[13], rProps[14], rProps[15]);\r\n        this.matrix.transform(sProps[0], sProps[1], sProps[2], sProps[3], sProps[4], sProps[5], sProps[6], sProps[7], sProps[8], sProps[9], sProps[10], sProps[11], sProps[12], sProps[13], sProps[14], sProps[15]);\r\n        this.matrix.transform(pProps[0], pProps[1], pProps[2], pProps[3], pProps[4], pProps[5], pProps[6], pProps[7], pProps[8], pProps[9], pProps[10], pProps[11], pProps[12], pProps[13], pProps[14], pProps[15]);\r\n\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsTransform[j] = this.matrix.props[j];\r\n        }\r\n        this.matrix.reset();\r\n      } else {\r\n        this.matrix.reset();\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsTransform[j] = this.matrix.props[j];\r\n        }\r\n      }\r\n      iteration += 1;\r\n      cont -= 1;\r\n      i += dir;\r\n    }\r\n  } else {\r\n    cont = this._currentCopies;\r\n    i = 0;\r\n    dir = 1;\r\n    while (cont) {\r\n      items = this.elemsData[i].it;\r\n      itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n      items[items.length - 1].transform.mProps._mdf = false;\r\n      items[items.length - 1].transform.op._mdf = false;\r\n      cont -= 1;\r\n      i += dir;\r\n    }\r\n  }\r\n  return hasReloaded;\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function () {};\r\n\r\nShapeModifiers.registerModifier('rp', RepeaterModifier);\r\n\r\n/* global createSizedArray, shapePool */\r\n\r\nfunction ShapeCollection() {\r\n  this._length = 0;\r\n  this._maxLength = 4;\r\n  this.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function (shapeData) {\r\n  if (this._length === this._maxLength) {\r\n    this.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n    this._maxLength *= 2;\r\n  }\r\n  this.shapes[this._length] = shapeData;\r\n  this._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function () {\r\n  var i;\r\n  for (i = 0; i < this._length; i += 1) {\r\n    shapePool.release(this.shapes[i]);\r\n  }\r\n  this._length = 0;\r\n};\r\n\r\n/* global createSizedArray, createTypedArray, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction DashProperty(elem, data, renderer, container) {\r\n  this.elem = elem;\r\n  this.frameId = -1;\r\n  this.dataProps = createSizedArray(data.length);\r\n  this.renderer = renderer;\r\n  this.k = false;\r\n  this.dashStr = '';\r\n  this.dashArray = createTypedArray('float32', data.length ? data.length - 1 : 0);\r\n  this.dashoffset = createTypedArray('float32', 1);\r\n  this.initDynamicPropertyContainer(container);\r\n  var i;\r\n  var len = data.length || 0;\r\n  var prop;\r\n  for (i = 0; i < len; i += 1) {\r\n    prop = PropertyFactory.getProp(elem, data[i].v, 0, 0, this);\r\n    this.k = prop.k || this.k;\r\n    this.dataProps[i] = { n: data[i].n, p: prop };\r\n  }\r\n  if (!this.k) {\r\n    this.getValue(true);\r\n  }\r\n  this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function (forceRender) {\r\n  if (this.elem.globalData.frameId === this.frameId && !forceRender) {\r\n    return;\r\n  }\r\n  this.frameId = this.elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n  this._mdf = this._mdf || forceRender;\r\n  if (this._mdf) {\r\n    var i = 0;\r\n    var len = this.dataProps.length;\r\n    if (this.renderer === 'svg') {\r\n      this.dashStr = '';\r\n    }\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.dataProps[i].n !== 'o') {\r\n        if (this.renderer === 'svg') {\r\n          this.dashStr += ' ' + this.dataProps[i].p.v;\r\n        } else {\r\n          this.dashArray[i] = this.dataProps[i].p.v;\r\n        }\r\n      } else {\r\n        this.dashoffset[0] = this.dataProps[i].p.v;\r\n      }\r\n    }\r\n  }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\n\r\n/* global createTypedArray, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\nfunction GradientProperty(elem, data, container) {\r\n  this.data = data;\r\n  this.c = createTypedArray('uint8c', data.p * 4);\r\n  var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p * 4) : data.k.k.length - data.p * 4;\r\n  this.o = createTypedArray('float32', cLength);\r\n  this._cmdf = false;\r\n  this._omdf = false;\r\n  this._collapsable = this.checkCollapsable();\r\n  this._hasOpacity = cLength;\r\n  this.initDynamicPropertyContainer(container);\r\n  this.prop = PropertyFactory.getProp(elem, data.k, 1, null, this);\r\n  this.k = this.prop.k;\r\n  this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function (values, points) {\r\n  var i = 0;\r\n  var len = this.o.length / 2;\r\n  var diff;\r\n  while (i < len) {\r\n    diff = Math.abs(values[i * 4] - values[points * 4 + i * 2]);\r\n    if (diff > 0.01) {\r\n      return false;\r\n    }\r\n    i += 1;\r\n  }\r\n  return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function () {\r\n  if (this.o.length / 2 !== this.c.length / 4) {\r\n    return false;\r\n  }\r\n  if (this.data.k.k[0].s) {\r\n    var i = 0;\r\n    var len = this.data.k.k.length;\r\n    while (i < len) {\r\n      if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n        return false;\r\n      }\r\n      i += 1;\r\n    }\r\n  } else if (!this.comparePoints(this.data.k.k, this.data.p)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function (forceRender) {\r\n  this.prop.getValue();\r\n  this._mdf = false;\r\n  this._cmdf = false;\r\n  this._omdf = false;\r\n  if (this.prop._mdf || forceRender) {\r\n    var i;\r\n    var len = this.data.p * 4;\r\n    var mult;\r\n    var val;\r\n    for (i = 0; i < len; i += 1) {\r\n      mult = i % 4 === 0 ? 100 : 255;\r\n      val = Math.round(this.prop.v[i] * mult);\r\n      if (this.c[i] !== val) {\r\n        this.c[i] = val;\r\n        this._cmdf = !forceRender;\r\n      }\r\n    }\r\n    if (this.o.length) {\r\n      len = this.prop.v.length;\r\n      for (i = this.data.p * 4; i < len; i += 1) {\r\n        mult = i % 2 === 0 ? 100 : 1;\r\n        val = i % 2 === 0 ? Math.round(this.prop.v[i] * 100) : this.prop.v[i];\r\n        if (this.o[i - this.data.p * 4] !== val) {\r\n          this.o[i - this.data.p * 4] = val;\r\n          this._omdf = !forceRender;\r\n        }\r\n      }\r\n    }\r\n    this._mdf = !forceRender;\r\n  }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\n\r\n/* exported buildShapeString */\r\n\r\nvar buildShapeString = function (pathNodes, length, closed, mat) {\r\n  if (length === 0) {\r\n    return '';\r\n  }\r\n  var _o = pathNodes.o;\r\n  var _i = pathNodes.i;\r\n  var _v = pathNodes.v;\r\n  var i;\r\n  var shapeString = ' M' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n  for (i = 1; i < length; i += 1) {\r\n    shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[i][0], _i[i][1]) + ' ' + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n  }\r\n  if (closed && length) {\r\n    shapeString += ' C' + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + ' ' + mat.applyToPointStringified(_i[0][0], _i[0][1]) + ' ' + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n    shapeString += 'z';\r\n  }\r\n  return shapeString;\r\n};\r\n\r\n/* global Howl */\r\n/* exported audioControllerFactory */\r\n\r\nvar audioControllerFactory = (function () {\r\n  function AudioController(audioFactory) {\r\n    this.audios = [];\r\n    this.audioFactory = audioFactory;\r\n    this._volume = 1;\r\n    this._isMuted = false;\r\n  }\r\n\r\n  AudioController.prototype = {\r\n    addAudio: function (audio) {\r\n      this.audios.push(audio);\r\n    },\r\n    pause: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].pause();\r\n      }\r\n    },\r\n    resume: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].resume();\r\n      }\r\n    },\r\n    setRate: function (rateValue) {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].setRate(rateValue);\r\n      }\r\n    },\r\n    createAudio: function (assetPath) {\r\n      if (this.audioFactory) {\r\n        return this.audioFactory(assetPath);\r\n      } if (Howl) {\r\n        return new Howl({\r\n          src: [assetPath],\r\n        });\r\n      }\r\n      return {\r\n        isPlaying: false,\r\n        play: function () { this.isPlaying = true; },\r\n        seek: function () { this.isPlaying = false; },\r\n        playing: function () {},\r\n        rate: function () {},\r\n        setVolume: function () {},\r\n      };\r\n    },\r\n    setAudioFactory: function (audioFactory) {\r\n      this.audioFactory = audioFactory;\r\n    },\r\n    setVolume: function (value) {\r\n      this._volume = value;\r\n      this._updateVolume();\r\n    },\r\n    mute: function () {\r\n      this._isMuted = true;\r\n      this._updateVolume();\r\n    },\r\n    unmute: function () {\r\n      this._isMuted = false;\r\n      this._updateVolume();\r\n    },\r\n    getVolume: function () {\r\n      return this._volume;\r\n    },\r\n    _updateVolume: function () {\r\n      var i;\r\n      var len = this.audios.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this.audios[i].volume(this._volume * (this._isMuted ? 0 : 1));\r\n      }\r\n    },\r\n  };\r\n\r\n  return function () {\r\n    return new AudioController();\r\n  };\r\n}());\r\n\r\n/* global createTag, createNS, isSafari, assetLoader */\r\n/* exported ImagePreloader */\r\n\r\nvar ImagePreloader = (function () {\r\n  var proxyImage = (function () {\r\n    var canvas = createTag('canvas');\r\n    canvas.width = 1;\r\n    canvas.height = 1;\r\n    var ctx = canvas.getContext('2d');\r\n    ctx.fillStyle = 'rgba(0,0,0,0)';\r\n    ctx.fillRect(0, 0, 1, 1);\r\n    return canvas;\r\n  }());\r\n\r\n  function imageLoaded() {\r\n    this.loadedAssets += 1;\r\n    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\r\n      if (this.imagesLoadedCb) {\r\n        this.imagesLoadedCb(null);\r\n      }\r\n    }\r\n  }\r\n  function footageLoaded() {\r\n    this.loadedFootagesCount += 1;\r\n    if (this.loadedAssets === this.totalImages && this.loadedFootagesCount === this.totalFootages) {\r\n      if (this.imagesLoadedCb) {\r\n        this.imagesLoadedCb(null);\r\n      }\r\n    }\r\n  }\r\n\r\n  function getAssetsPath(assetData, assetsPath, originalPath) {\r\n    var path = '';\r\n    if (assetData.e) {\r\n      path = assetData.p;\r\n    } else if (assetsPath) {\r\n      var imagePath = assetData.p;\r\n      if (imagePath.indexOf('images/') !== -1) {\r\n        imagePath = imagePath.split('/')[1];\r\n      }\r\n      path = assetsPath + imagePath;\r\n    } else {\r\n      path = originalPath;\r\n      path += assetData.u ? assetData.u : '';\r\n      path += assetData.p;\r\n    }\r\n    return path;\r\n  }\r\n\r\n  function testImageLoaded(img) {\r\n    var _count = 0;\r\n    var intervalId = setInterval(function () {\r\n      var box = img.getBBox();\r\n      if (box.width || _count > 500) {\r\n        this._imageLoaded();\r\n        clearInterval(intervalId);\r\n      }\r\n      _count += 1;\r\n    }.bind(this), 50);\r\n  }\r\n\r\n  function createImageData(assetData) {\r\n    var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n    var img = createNS('image');\r\n    if (isSafari) {\r\n      this.testImageLoaded(img);\r\n    } else {\r\n      img.addEventListener('load', this._imageLoaded, false);\r\n    }\r\n    img.addEventListener('error', function () {\r\n      ob.img = proxyImage;\r\n      this._imageLoaded();\r\n    }.bind(this), false);\r\n    img.setAttributeNS('http://www.w3.org/1999/xlink', 'href', path);\r\n    if (this._elementHelper.append) {\r\n      this._elementHelper.append(img);\r\n    } else {\r\n      this._elementHelper.appendChild(img);\r\n    }\r\n    var ob = {\r\n      img: img,\r\n      assetData: assetData,\r\n    };\r\n    return ob;\r\n  }\r\n\r\n  function createImgData(assetData) {\r\n    var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n    var img = createTag('img');\r\n    img.crossOrigin = 'anonymous';\r\n    img.addEventListener('load', this._imageLoaded, false);\r\n    img.addEventListener('error', function () {\r\n      ob.img = proxyImage;\r\n      this._imageLoaded();\r\n    }.bind(this), false);\r\n    img.src = path;\r\n    var ob = {\r\n      img: img,\r\n      assetData: assetData,\r\n    };\r\n    return ob;\r\n  }\r\n\r\n  function createFootageData(data) {\r\n    var ob = {\r\n      assetData: data,\r\n    };\r\n    var path = getAssetsPath(data, this.assetsPath, this.path);\r\n    assetLoader.load(path, function (footageData) {\r\n      ob.img = footageData;\r\n      this._footageLoaded();\r\n    }.bind(this), function () {\r\n      ob.img = {};\r\n      this._footageLoaded();\r\n    }.bind(this));\r\n    return ob;\r\n  }\r\n\r\n  function loadAssets(assets, cb) {\r\n    this.imagesLoadedCb = cb;\r\n    var i;\r\n    var len = assets.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (!assets[i].layers) {\r\n        if (!assets[i].t) {\r\n          this.totalImages += 1;\r\n          this.images.push(this._createImageData(assets[i]));\r\n        } else if (assets[i].t === 3) {\r\n          this.totalFootages += 1;\r\n          this.images.push(this.createFootageData(assets[i]));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  function setPath(path) {\r\n    this.path = path || '';\r\n  }\r\n\r\n  function setAssetsPath(path) {\r\n    this.assetsPath = path || '';\r\n  }\r\n\r\n  function getAsset(assetData) {\r\n    var i = 0;\r\n    var len = this.images.length;\r\n    while (i < len) {\r\n      if (this.images[i].assetData === assetData) {\r\n        return this.images[i].img;\r\n      }\r\n      i += 1;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function destroy() {\r\n    this.imagesLoadedCb = null;\r\n    this.images.length = 0;\r\n  }\r\n\r\n  function loadedImages() {\r\n    return this.totalImages === this.loadedAssets;\r\n  }\r\n\r\n  function loadedFootages() {\r\n    return this.totalFootages === this.loadedFootagesCount;\r\n  }\r\n\r\n  function setCacheType(type, elementHelper) {\r\n    if (type === 'svg') {\r\n      this._elementHelper = elementHelper;\r\n      this._createImageData = this.createImageData.bind(this);\r\n    } else {\r\n      this._createImageData = this.createImgData.bind(this);\r\n    }\r\n  }\r\n\r\n  function ImagePreloaderFactory() {\r\n    this._imageLoaded = imageLoaded.bind(this);\r\n    this._footageLoaded = footageLoaded.bind(this);\r\n    this.testImageLoaded = testImageLoaded.bind(this);\r\n    this.createFootageData = createFootageData.bind(this);\r\n    this.assetsPath = '';\r\n    this.path = '';\r\n    this.totalImages = 0;\r\n    this.totalFootages = 0;\r\n    this.loadedAssets = 0;\r\n    this.loadedFootagesCount = 0;\r\n    this.imagesLoadedCb = null;\r\n    this.images = [];\r\n  }\r\n\r\n  ImagePreloaderFactory.prototype = {\r\n    loadAssets: loadAssets,\r\n    setAssetsPath: setAssetsPath,\r\n    setPath: setPath,\r\n    loadedImages: loadedImages,\r\n    loadedFootages: loadedFootages,\r\n    destroy: destroy,\r\n    getAsset: getAsset,\r\n    createImgData: createImgData,\r\n    createImageData: createImageData,\r\n    imageLoaded: imageLoaded,\r\n    footageLoaded: footageLoaded,\r\n    setCacheType: setCacheType,\r\n  };\r\n\r\n  return ImagePreloaderFactory;\r\n}());\r\n\r\n/* exported featureSupport */\r\n\r\nvar featureSupport = (function () {\r\n  var ob = {\r\n    maskType: true,\r\n  };\r\n  if (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n    ob.maskType = false;\r\n  }\r\n  return ob;\r\n}());\r\n\r\n/* global createNS */\r\n/* exported filtersFactory */\r\n\r\nvar filtersFactory = (function () {\r\n  var ob = {};\r\n  ob.createFilter = createFilter;\r\n  ob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n  function createFilter(filId, skipCoordinates) {\r\n    var fil = createNS('filter');\r\n    fil.setAttribute('id', filId);\r\n    if (skipCoordinates !== true) {\r\n      fil.setAttribute('filterUnits', 'objectBoundingBox');\r\n      fil.setAttribute('x', '0%');\r\n      fil.setAttribute('y', '0%');\r\n      fil.setAttribute('width', '100%');\r\n      fil.setAttribute('height', '100%');\r\n    }\r\n    return fil;\r\n  }\r\n\r\n  function createAlphaToLuminanceFilter() {\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type', 'matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n    feColorMatrix.setAttribute('values', '0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n    return feColorMatrix;\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* exported assetLoader */\r\n\r\nvar assetLoader = (function () {\r\n  function formatResponse(xhr) {\r\n    if (xhr.response && typeof xhr.response === 'object') {\r\n      return xhr.response;\r\n    } if (xhr.response && typeof xhr.response === 'string') {\r\n      return JSON.parse(xhr.response);\r\n    } if (xhr.responseText) {\r\n      return JSON.parse(xhr.responseText);\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function loadAsset(path, callback, errorCallback) {\r\n    var response;\r\n    var xhr = new XMLHttpRequest();\r\n    // set responseType after calling open or IE will break.\r\n    try {\r\n      // This crashes on Android WebView prior to KitKat\r\n      xhr.responseType = 'json';\r\n    } catch (err) {} // eslint-disable-line no-empty\r\n    xhr.onreadystatechange = function () {\r\n      if (xhr.readyState === 4) {\r\n        if (xhr.status === 200) {\r\n          response = formatResponse(xhr);\r\n          callback(response);\r\n        } else {\r\n          try {\r\n            response = formatResponse(xhr);\r\n            callback(response);\r\n          } catch (err) {\r\n            if (errorCallback) {\r\n              errorCallback(err);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n    xhr.open('GET', path, true);\r\n    xhr.send();\r\n  }\r\n  return {\r\n    load: loadAsset,\r\n  };\r\n}());\r\n\r\n/* global createSizedArray, PropertyFactory, TextAnimatorDataProperty, bez, addHueToRGB,\r\n  addSaturationToRGB, addBrightnessToRGB, LetterProps, Matrix, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem) {\r\n  this._isFirstFrame = true;\r\n  this._hasMaskedPath = false;\r\n  this._frameId = -1;\r\n  this._textData = textData;\r\n  this._renderType = renderType;\r\n  this._elem = elem;\r\n  this._animatorsData = createSizedArray(this._textData.a.length);\r\n  this._pathData = {};\r\n  this._moreOptions = {\r\n    alignment: {},\r\n  };\r\n  this.renderedLetters = [];\r\n  this.lettersChangedFlag = false;\r\n  this.initDynamicPropertyContainer(elem);\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function () {\r\n  var i;\r\n  var len = this._textData.a.length;\r\n  var animatorProps;\r\n  var getProp = PropertyFactory.getProp;\r\n  for (i = 0; i < len; i += 1) {\r\n    animatorProps = this._textData.a[i];\r\n    this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n  }\r\n  if (this._textData.p && 'm' in this._textData.p) {\r\n    this._pathData = {\r\n      f: getProp(this._elem, this._textData.p.f, 0, 0, this),\r\n      l: getProp(this._elem, this._textData.p.l, 0, 0, this),\r\n      r: this._textData.p.r,\r\n      m: this._elem.maskManager.getMaskProperty(this._textData.p.m),\r\n    };\r\n    this._hasMaskedPath = true;\r\n  } else {\r\n    this._hasMaskedPath = false;\r\n  }\r\n  this._moreOptions.alignment = getProp(this._elem, this._textData.m.a, 1, 0, this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function (documentData, lettersChangedFlag) {\r\n  this.lettersChangedFlag = lettersChangedFlag;\r\n  if (!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n    return;\r\n  }\r\n  this._isFirstFrame = false;\r\n  var alignment = this._moreOptions.alignment.v;\r\n  var animators = this._animatorsData;\r\n  var textData = this._textData;\r\n  var matrixHelper = this.mHelper;\r\n  var renderType = this._renderType;\r\n  var renderedLettersCount = this.renderedLetters.length;\r\n  var xPos;\r\n  var yPos;\r\n  var i;\r\n  var len;\r\n  var letters = documentData.l;\r\n  var pathInfo;\r\n  var currentLength;\r\n  var currentPoint;\r\n  var segmentLength;\r\n  var flag;\r\n  var pointInd;\r\n  var segmentInd;\r\n  var prevPoint;\r\n  var points;\r\n  var segments;\r\n  var partialLength;\r\n  var totalLength;\r\n  var perc;\r\n  var tanAngle;\r\n  var mask;\r\n  if (this._hasMaskedPath) {\r\n    mask = this._pathData.m;\r\n    if (!this._pathData.n || this._pathData._mdf) {\r\n      var paths = mask.v;\r\n      if (this._pathData.r) {\r\n        paths = paths.reverse();\r\n      }\r\n      // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n      pathInfo = {\r\n        tLength: 0,\r\n        segments: [],\r\n      };\r\n      len = paths._length - 1;\r\n      var bezierData;\r\n      totalLength = 0;\r\n      for (i = 0; i < len; i += 1) {\r\n        bezierData = bez.buildBezierData(paths.v[i],\r\n          paths.v[i + 1],\r\n          [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n          [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n        pathInfo.tLength += bezierData.segmentLength;\r\n        pathInfo.segments.push(bezierData);\r\n        totalLength += bezierData.segmentLength;\r\n      }\r\n      i = len;\r\n      if (mask.v.c) {\r\n        bezierData = bez.buildBezierData(paths.v[i],\r\n          paths.v[0],\r\n          [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]],\r\n          [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n        pathInfo.tLength += bezierData.segmentLength;\r\n        pathInfo.segments.push(bezierData);\r\n        totalLength += bezierData.segmentLength;\r\n      }\r\n      this._pathData.pi = pathInfo;\r\n    }\r\n    pathInfo = this._pathData.pi;\r\n\r\n    currentLength = this._pathData.f.v;\r\n    segmentInd = 0;\r\n    pointInd = 1;\r\n    segmentLength = 0;\r\n    flag = true;\r\n    segments = pathInfo.segments;\r\n    if (currentLength < 0 && mask.v.c) {\r\n      if (pathInfo.tLength < Math.abs(currentLength)) {\r\n        currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n      }\r\n      segmentInd = segments.length - 1;\r\n      points = segments[segmentInd].points;\r\n      pointInd = points.length - 1;\r\n      while (currentLength < 0) {\r\n        currentLength += points[pointInd].partialLength;\r\n        pointInd -= 1;\r\n        if (pointInd < 0) {\r\n          segmentInd -= 1;\r\n          points = segments[segmentInd].points;\r\n          pointInd = points.length - 1;\r\n        }\r\n      }\r\n    }\r\n    points = segments[segmentInd].points;\r\n    prevPoint = points[pointInd - 1];\r\n    currentPoint = points[pointInd];\r\n    partialLength = currentPoint.partialLength;\r\n  }\r\n\r\n  len = letters.length;\r\n  xPos = 0;\r\n  yPos = 0;\r\n  var yOff = documentData.finalSize * 1.2 * 0.714;\r\n  var firstLine = true;\r\n  var animatorProps;\r\n  var animatorSelector;\r\n  var j;\r\n  var jLen;\r\n  var letterValue;\r\n\r\n  jLen = animators.length;\r\n\r\n  var mult;\r\n  var ind = -1;\r\n  var offf;\r\n  var xPathPos;\r\n  var yPathPos;\r\n  var initPathPos = currentLength;\r\n  var initSegmentInd = segmentInd;\r\n  var initPointInd = pointInd;\r\n  var currentLine = -1;\r\n  var elemOpacity;\r\n  var sc;\r\n  var sw;\r\n  var fc;\r\n  var k;\r\n  var letterSw;\r\n  var letterSc;\r\n  var letterFc;\r\n  var letterM = '';\r\n  var letterP = this.defaultPropsArray;\r\n  var letterO;\r\n\r\n  //\r\n  if (documentData.j === 2 || documentData.j === 1) {\r\n    var animatorJustifyOffset = 0;\r\n    var animatorFirstCharOffset = 0;\r\n    var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n    var lastIndex = 0;\r\n    var isNewLine = true;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      if (letters[i].n) {\r\n        if (animatorJustifyOffset) {\r\n          animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while (lastIndex < i) {\r\n          letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n          lastIndex += 1;\r\n        }\r\n        animatorJustifyOffset = 0;\r\n        isNewLine = true;\r\n      } else {\r\n        for (j = 0; j < jLen; j += 1) {\r\n          animatorProps = animators[j].a;\r\n          if (animatorProps.t.propType) {\r\n            if (isNewLine && documentData.j === 2) {\r\n              animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n            }\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorJustifyOffset += animatorProps.t.v * mult[0] * justifyOffsetMult;\r\n            } else {\r\n              animatorJustifyOffset += animatorProps.t.v * mult * justifyOffsetMult;\r\n            }\r\n          }\r\n        }\r\n        isNewLine = false;\r\n      }\r\n    }\r\n    if (animatorJustifyOffset) {\r\n      animatorJustifyOffset += animatorFirstCharOffset;\r\n    }\r\n    while (lastIndex < i) {\r\n      letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n      lastIndex += 1;\r\n    }\r\n  }\r\n  //\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    matrixHelper.reset();\r\n    elemOpacity = 1;\r\n    if (letters[i].n) {\r\n      xPos = 0;\r\n      yPos += documentData.yOffset;\r\n      yPos += firstLine ? 1 : 0;\r\n      currentLength = initPathPos;\r\n      firstLine = false;\r\n      if (this._hasMaskedPath) {\r\n        segmentInd = initSegmentInd;\r\n        pointInd = initPointInd;\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n        segmentLength = 0;\r\n      }\r\n      letterM = '';\r\n      letterFc = '';\r\n      letterSw = '';\r\n      letterO = '';\r\n      letterP = this.defaultPropsArray;\r\n    } else {\r\n      if (this._hasMaskedPath) {\r\n        if (currentLine !== letters[i].line) {\r\n          switch (documentData.j) {\r\n            case 1:\r\n              currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n              break;\r\n            case 2:\r\n              currentLength += (totalLength - documentData.lineWidths[letters[i].line]) / 2;\r\n              break;\r\n            default:\r\n              break;\r\n          }\r\n          currentLine = letters[i].line;\r\n        }\r\n        if (ind !== letters[i].ind) {\r\n          if (letters[ind]) {\r\n            currentLength += letters[ind].extra;\r\n          }\r\n          currentLength += letters[i].an / 2;\r\n          ind = letters[i].ind;\r\n        }\r\n        currentLength += (alignment[0] * letters[i].an) * 0.005;\r\n        var animatorOffset = 0;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          animatorProps = animators[j].a;\r\n          if (animatorProps.p.propType) {\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorOffset += animatorProps.p.v[0] * mult[0];\r\n            } else {\r\n              animatorOffset += animatorProps.p.v[0] * mult;\r\n            }\r\n          }\r\n          if (animatorProps.a.propType) {\r\n            animatorSelector = animators[j].s;\r\n            mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n            if (mult.length) {\r\n              animatorOffset += animatorProps.a.v[0] * mult[0];\r\n            } else {\r\n              animatorOffset += animatorProps.a.v[0] * mult;\r\n            }\r\n          }\r\n        }\r\n        flag = true;\r\n        while (flag) {\r\n          if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n            perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n            xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n            yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n            matrixHelper.translate((-alignment[0] * letters[i].an) * 0.005, -(alignment[1] * yOff) * 0.01);\r\n            flag = false;\r\n          } else if (points) {\r\n            segmentLength += currentPoint.partialLength;\r\n            pointInd += 1;\r\n            if (pointInd >= points.length) {\r\n              pointInd = 0;\r\n              segmentInd += 1;\r\n              if (!segments[segmentInd]) {\r\n                if (mask.v.c) {\r\n                  pointInd = 0;\r\n                  segmentInd = 0;\r\n                  points = segments[segmentInd].points;\r\n                } else {\r\n                  segmentLength -= currentPoint.partialLength;\r\n                  points = null;\r\n                }\r\n              } else {\r\n                points = segments[segmentInd].points;\r\n              }\r\n            }\r\n            if (points) {\r\n              prevPoint = currentPoint;\r\n              currentPoint = points[pointInd];\r\n              partialLength = currentPoint.partialLength;\r\n            }\r\n          }\r\n        }\r\n        offf = letters[i].an / 2 - letters[i].add;\r\n        matrixHelper.translate(-offf, 0, 0);\r\n      } else {\r\n        offf = letters[i].an / 2 - letters[i].add;\r\n        matrixHelper.translate(-offf, 0, 0);\r\n\r\n        // Grouping alignment\r\n        matrixHelper.translate((-alignment[0] * letters[i].an) * 0.005, (-alignment[1] * yOff) * 0.01, 0);\r\n      }\r\n\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.t.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          // This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n          if (xPos !== 0 || documentData.j !== 0) {\r\n            if (this._hasMaskedPath) {\r\n              if (mult.length) {\r\n                currentLength += animatorProps.t.v * mult[0];\r\n              } else {\r\n                currentLength += animatorProps.t.v * mult;\r\n              }\r\n            } else if (mult.length) {\r\n              xPos += animatorProps.t.v * mult[0];\r\n            } else {\r\n              xPos += animatorProps.t.v * mult;\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (documentData.strokeWidthAnim) {\r\n        sw = documentData.sw || 0;\r\n      }\r\n      if (documentData.strokeColorAnim) {\r\n        if (documentData.sc) {\r\n          sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n        } else {\r\n          sc = [0, 0, 0];\r\n        }\r\n      }\r\n      if (documentData.fillColorAnim && documentData.fc) {\r\n        fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.a.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n\r\n          if (mult.length) {\r\n            matrixHelper.translate(-animatorProps.a.v[0] * mult[0], -animatorProps.a.v[1] * mult[1], animatorProps.a.v[2] * mult[2]);\r\n          } else {\r\n            matrixHelper.translate(-animatorProps.a.v[0] * mult, -animatorProps.a.v[1] * mult, animatorProps.a.v[2] * mult);\r\n          }\r\n        }\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        if (animatorProps.s.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          if (mult.length) {\r\n            matrixHelper.scale(1 + ((animatorProps.s.v[0] - 1) * mult[0]), 1 + ((animatorProps.s.v[1] - 1) * mult[1]), 1);\r\n          } else {\r\n            matrixHelper.scale(1 + ((animatorProps.s.v[0] - 1) * mult), 1 + ((animatorProps.s.v[1] - 1) * mult), 1);\r\n          }\r\n        }\r\n      }\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n        animatorSelector = animators[j].s;\r\n        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n        if (animatorProps.sk.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n          } else {\r\n            matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.r.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n          } else {\r\n            matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.ry.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateY(animatorProps.ry.v * mult[1]);\r\n          } else {\r\n            matrixHelper.rotateY(animatorProps.ry.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.rx.propType) {\r\n          if (mult.length) {\r\n            matrixHelper.rotateX(animatorProps.rx.v * mult[0]);\r\n          } else {\r\n            matrixHelper.rotateX(animatorProps.rx.v * mult);\r\n          }\r\n        }\r\n        if (animatorProps.o.propType) {\r\n          if (mult.length) {\r\n            elemOpacity += ((animatorProps.o.v) * mult[0] - elemOpacity) * mult[0];\r\n          } else {\r\n            elemOpacity += ((animatorProps.o.v) * mult - elemOpacity) * mult;\r\n          }\r\n        }\r\n        if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n          if (mult.length) {\r\n            sw += animatorProps.sw.v * mult[0];\r\n          } else {\r\n            sw += animatorProps.sw.v * mult;\r\n          }\r\n        }\r\n        if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n          for (k = 0; k < 3; k += 1) {\r\n            if (mult.length) {\r\n              sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult[0];\r\n            } else {\r\n              sc[k] += (animatorProps.sc.v[k] - sc[k]) * mult;\r\n            }\r\n          }\r\n        }\r\n        if (documentData.fillColorAnim && documentData.fc) {\r\n          if (animatorProps.fc.propType) {\r\n            for (k = 0; k < 3; k += 1) {\r\n              if (mult.length) {\r\n                fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult[0];\r\n              } else {\r\n                fc[k] += (animatorProps.fc.v[k] - fc[k]) * mult;\r\n              }\r\n            }\r\n          }\r\n          if (animatorProps.fh.propType) {\r\n            if (mult.length) {\r\n              fc = addHueToRGB(fc, animatorProps.fh.v * mult[0]);\r\n            } else {\r\n              fc = addHueToRGB(fc, animatorProps.fh.v * mult);\r\n            }\r\n          }\r\n          if (animatorProps.fs.propType) {\r\n            if (mult.length) {\r\n              fc = addSaturationToRGB(fc, animatorProps.fs.v * mult[0]);\r\n            } else {\r\n              fc = addSaturationToRGB(fc, animatorProps.fs.v * mult);\r\n            }\r\n          }\r\n          if (animatorProps.fb.propType) {\r\n            if (mult.length) {\r\n              fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult[0]);\r\n            } else {\r\n              fc = addBrightnessToRGB(fc, animatorProps.fb.v * mult);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (j = 0; j < jLen; j += 1) {\r\n        animatorProps = animators[j].a;\r\n\r\n        if (animatorProps.p.propType) {\r\n          animatorSelector = animators[j].s;\r\n          mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n          if (this._hasMaskedPath) {\r\n            if (mult.length) {\r\n              matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n            } else {\r\n              matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n            }\r\n          } else if (mult.length) {\r\n            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n          } else {\r\n            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n          }\r\n        }\r\n      }\r\n      if (documentData.strokeWidthAnim) {\r\n        letterSw = sw < 0 ? 0 : sw;\r\n      }\r\n      if (documentData.strokeColorAnim) {\r\n        letterSc = 'rgb(' + Math.round(sc[0] * 255) + ',' + Math.round(sc[1] * 255) + ',' + Math.round(sc[2] * 255) + ')';\r\n      }\r\n      if (documentData.fillColorAnim && documentData.fc) {\r\n        letterFc = 'rgb(' + Math.round(fc[0] * 255) + ',' + Math.round(fc[1] * 255) + ',' + Math.round(fc[2] * 255) + ')';\r\n      }\r\n\r\n      if (this._hasMaskedPath) {\r\n        matrixHelper.translate(0, -documentData.ls);\r\n\r\n        matrixHelper.translate(0, (alignment[1] * yOff) * 0.01 + yPos, 0);\r\n        if (textData.p.p) {\r\n          tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n          var rot = (Math.atan(tanAngle) * 180) / Math.PI;\r\n          if (currentPoint.point[0] < prevPoint.point[0]) {\r\n            rot += 180;\r\n          }\r\n          matrixHelper.rotate((-rot * Math.PI) / 180);\r\n        }\r\n        matrixHelper.translate(xPathPos, yPathPos, 0);\r\n        currentLength -= (alignment[0] * letters[i].an) * 0.005;\r\n        if (letters[i + 1] && ind !== letters[i + 1].ind) {\r\n          currentLength += letters[i].an / 2;\r\n          currentLength += (documentData.tr * 0.001) * documentData.finalSize;\r\n        }\r\n      } else {\r\n        matrixHelper.translate(xPos, yPos, 0);\r\n\r\n        if (documentData.ps) {\r\n          // matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n          matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\r\n        }\r\n        switch (documentData.j) {\r\n          case 1:\r\n            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]), 0, 0);\r\n            break;\r\n          case 2:\r\n            matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]) / 2, 0, 0);\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n        matrixHelper.translate(0, -documentData.ls);\r\n        matrixHelper.translate(offf, 0, 0);\r\n        matrixHelper.translate((alignment[0] * letters[i].an) * 0.005, (alignment[1] * yOff) * 0.01, 0);\r\n        xPos += letters[i].l + (documentData.tr * 0.001) * documentData.finalSize;\r\n      }\r\n      if (renderType === 'html') {\r\n        letterM = matrixHelper.toCSS();\r\n      } else if (renderType === 'svg') {\r\n        letterM = matrixHelper.to2dCSS();\r\n      } else {\r\n        letterP = [matrixHelper.props[0], matrixHelper.props[1], matrixHelper.props[2], matrixHelper.props[3], matrixHelper.props[4], matrixHelper.props[5], matrixHelper.props[6], matrixHelper.props[7], matrixHelper.props[8], matrixHelper.props[9], matrixHelper.props[10], matrixHelper.props[11], matrixHelper.props[12], matrixHelper.props[13], matrixHelper.props[14], matrixHelper.props[15]];\r\n      }\r\n      letterO = elemOpacity;\r\n    }\r\n\r\n    if (renderedLettersCount <= i) {\r\n      letterValue = new LetterProps(letterO, letterSw, letterSc, letterFc, letterM, letterP);\r\n      this.renderedLetters.push(letterValue);\r\n      renderedLettersCount += 1;\r\n      this.lettersChangedFlag = true;\r\n    } else {\r\n      letterValue = this.renderedLetters[i];\r\n      this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n    }\r\n  }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function () {\r\n  if (this._elem.globalData.frameId === this._frameId) {\r\n    return;\r\n  }\r\n  this._frameId = this._elem.globalData.frameId;\r\n  this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\n\r\n/* global PropertyFactory, degToRads, TextSelectorProp */\r\n/* exported TextAnimatorDataProperty */\r\n\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n  var defaultData = { propType: false };\r\n  var getProp = PropertyFactory.getProp;\r\n  var textAnimatorAnimatables = animatorProps.a;\r\n  this.a = {\r\n    r: textAnimatorAnimatables.r ? getProp(elem, textAnimatorAnimatables.r, 0, degToRads, container) : defaultData,\r\n    rx: textAnimatorAnimatables.rx ? getProp(elem, textAnimatorAnimatables.rx, 0, degToRads, container) : defaultData,\r\n    ry: textAnimatorAnimatables.ry ? getProp(elem, textAnimatorAnimatables.ry, 0, degToRads, container) : defaultData,\r\n    sk: textAnimatorAnimatables.sk ? getProp(elem, textAnimatorAnimatables.sk, 0, degToRads, container) : defaultData,\r\n    sa: textAnimatorAnimatables.sa ? getProp(elem, textAnimatorAnimatables.sa, 0, degToRads, container) : defaultData,\r\n    s: textAnimatorAnimatables.s ? getProp(elem, textAnimatorAnimatables.s, 1, 0.01, container) : defaultData,\r\n    a: textAnimatorAnimatables.a ? getProp(elem, textAnimatorAnimatables.a, 1, 0, container) : defaultData,\r\n    o: textAnimatorAnimatables.o ? getProp(elem, textAnimatorAnimatables.o, 0, 0.01, container) : defaultData,\r\n    p: textAnimatorAnimatables.p ? getProp(elem, textAnimatorAnimatables.p, 1, 0, container) : defaultData,\r\n    sw: textAnimatorAnimatables.sw ? getProp(elem, textAnimatorAnimatables.sw, 0, 0, container) : defaultData,\r\n    sc: textAnimatorAnimatables.sc ? getProp(elem, textAnimatorAnimatables.sc, 1, 0, container) : defaultData,\r\n    fc: textAnimatorAnimatables.fc ? getProp(elem, textAnimatorAnimatables.fc, 1, 0, container) : defaultData,\r\n    fh: textAnimatorAnimatables.fh ? getProp(elem, textAnimatorAnimatables.fh, 0, 0, container) : defaultData,\r\n    fs: textAnimatorAnimatables.fs ? getProp(elem, textAnimatorAnimatables.fs, 0, 0.01, container) : defaultData,\r\n    fb: textAnimatorAnimatables.fb ? getProp(elem, textAnimatorAnimatables.fb, 0, 0.01, container) : defaultData,\r\n    t: textAnimatorAnimatables.t ? getProp(elem, textAnimatorAnimatables.t, 0, 0, container) : defaultData,\r\n  };\r\n\r\n  this.s = TextSelectorProp.getTextSelectorProp(elem, animatorProps.s, container);\r\n  this.s.t = animatorProps.s.t;\r\n}\r\n\r\nfunction LetterProps(o, sw, sc, fc, m, p) {\r\n  this.o = o;\r\n  this.sw = sw;\r\n  this.sc = sc;\r\n  this.fc = fc;\r\n  this.m = m;\r\n  this.p = p;\r\n  this._mdf = {\r\n    o: true,\r\n    sw: !!sw,\r\n    sc: !!sc,\r\n    fc: !!fc,\r\n    m: true,\r\n    p: true,\r\n  };\r\n}\r\n\r\nLetterProps.prototype.update = function (o, sw, sc, fc, m, p) {\r\n  this._mdf.o = false;\r\n  this._mdf.sw = false;\r\n  this._mdf.sc = false;\r\n  this._mdf.fc = false;\r\n  this._mdf.m = false;\r\n  this._mdf.p = false;\r\n  var updated = false;\r\n\r\n  if (this.o !== o) {\r\n    this.o = o;\r\n    this._mdf.o = true;\r\n    updated = true;\r\n  }\r\n  if (this.sw !== sw) {\r\n    this.sw = sw;\r\n    this._mdf.sw = true;\r\n    updated = true;\r\n  }\r\n  if (this.sc !== sc) {\r\n    this.sc = sc;\r\n    this._mdf.sc = true;\r\n    updated = true;\r\n  }\r\n  if (this.fc !== fc) {\r\n    this.fc = fc;\r\n    this._mdf.fc = true;\r\n    updated = true;\r\n  }\r\n  if (this.m !== m) {\r\n    this.m = m;\r\n    this._mdf.m = true;\r\n    updated = true;\r\n  }\r\n  if (p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n    this.p = p;\r\n    this._mdf.p = true;\r\n    updated = true;\r\n  }\r\n  return updated;\r\n};\r\n\r\n/* global FontManager, initialDefaultFrame, getFontProperties */\r\n/* exported TextProperty */\r\n\r\nfunction TextProperty(elem, data) {\r\n  this._frameId = initialDefaultFrame;\r\n  this.pv = '';\r\n  this.v = '';\r\n  this.kf = false;\r\n  this._isFirstFrame = true;\r\n  this._mdf = false;\r\n  this.data = data;\r\n  this.elem = elem;\r\n  this.comp = this.elem.comp;\r\n  this.keysIndex = 0;\r\n  this.canResize = false;\r\n  this.minimumFontSize = 1;\r\n  this.effectsSequence = [];\r\n  this.currentData = {\r\n    ascent: 0,\r\n    boxWidth: this.defaultBoxWidth,\r\n    f: '',\r\n    fStyle: '',\r\n    fWeight: '',\r\n    fc: '',\r\n    j: '',\r\n    justifyOffset: '',\r\n    l: [],\r\n    lh: 0,\r\n    lineWidths: [],\r\n    ls: '',\r\n    of: '',\r\n    s: '',\r\n    sc: '',\r\n    sw: 0,\r\n    t: 0,\r\n    tr: 0,\r\n    sz: 0,\r\n    ps: null,\r\n    fillColorAnim: false,\r\n    strokeColorAnim: false,\r\n    strokeWidthAnim: false,\r\n    yOffset: 0,\r\n    finalSize: 0,\r\n    finalText: [],\r\n    finalLineHeight: 0,\r\n    __complete: false,\r\n\r\n  };\r\n  this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n  if (!this.searchProperty()) {\r\n    this.completeTextData(this.currentData);\r\n  }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0, 0];\r\n\r\nTextProperty.prototype.copyData = function (obj, data) {\r\n  for (var s in data) {\r\n    if (Object.prototype.hasOwnProperty.call(data, s)) {\r\n      obj[s] = data[s];\r\n    }\r\n  }\r\n  return obj;\r\n};\r\n\r\nTextProperty.prototype.setCurrentData = function (data) {\r\n  if (!data.__complete) {\r\n    this.completeTextData(data);\r\n  }\r\n  this.currentData = data;\r\n  this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n  this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function () {\r\n  return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function () {\r\n  this.kf = this.data.d.k.length > 1;\r\n  if (this.kf) {\r\n    this.addEffect(this.getKeyframeValue.bind(this));\r\n  }\r\n  return this.kf;\r\n};\r\n\r\nTextProperty.prototype.addEffect = function (effectFunction) {\r\n  this.effectsSequence.push(effectFunction);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function (_finalValue) {\r\n  if ((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n    return;\r\n  }\r\n  this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n  var currentValue = this.currentData;\r\n  var currentIndex = this.keysIndex;\r\n  if (this.lock) {\r\n    this.setCurrentData(this.currentData);\r\n    return;\r\n  }\r\n  this.lock = true;\r\n  this._mdf = false;\r\n  var i; var\r\n    len = this.effectsSequence.length;\r\n  var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n  for (i = 0; i < len; i += 1) {\r\n    // Checking if index changed to prevent creating a new object every time the expression updates.\r\n    if (currentIndex !== this.keysIndex) {\r\n      finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n    } else {\r\n      finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n    }\r\n  }\r\n  if (currentValue !== finalValue) {\r\n    this.setCurrentData(finalValue);\r\n  }\r\n  this.v = this.currentData;\r\n  this.pv = this.v;\r\n  this.lock = false;\r\n  this.frameId = this.elem.globalData.frameId;\r\n};\r\n\r\nTextProperty.prototype.getKeyframeValue = function () {\r\n  var textKeys = this.data.d.k;\r\n  var frameNum = this.elem.comp.renderedFrame;\r\n  var i = 0; var\r\n    len = textKeys.length;\r\n  while (i <= len - 1) {\r\n    if (i === len - 1 || textKeys[i + 1].t > frameNum) {\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n  if (this.keysIndex !== i) {\r\n    this.keysIndex = i;\r\n  }\r\n  return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function (text) {\r\n  var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n  var charactersArray = [];\r\n  var i = 0; var\r\n    len = text.length;\r\n  var charCode;\r\n  while (i < len) {\r\n    charCode = text.charCodeAt(i);\r\n    if (combinedCharacters.indexOf(charCode) !== -1) {\r\n      charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n    } else if (charCode >= 0xD800 && charCode <= 0xDBFF) {\r\n      charCode = text.charCodeAt(i + 1);\r\n      if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\r\n        charactersArray.push(text.substr(i, 2));\r\n        i += 1;\r\n      } else {\r\n        charactersArray.push(text.charAt(i));\r\n      }\r\n    } else {\r\n      charactersArray.push(text.charAt(i));\r\n    }\r\n    i += 1;\r\n  }\r\n  return charactersArray;\r\n};\r\n\r\nTextProperty.prototype.completeTextData = function (documentData) {\r\n  documentData.__complete = true;\r\n  var fontManager = this.elem.globalData.fontManager;\r\n  var data = this.data;\r\n  var letters = [];\r\n  var i; var\r\n    len;\r\n  var newLineFlag; var index = 0; var\r\n    val;\r\n  var anchorGrouping = data.m.g;\r\n  var currentSize = 0; var currentPos = 0; var currentLine = 0; var\r\n    lineWidths = [];\r\n  var lineWidth = 0;\r\n  var maxLineWidth = 0;\r\n  var j; var\r\n    jLen;\r\n  var fontData = fontManager.getFontByName(documentData.f);\r\n  var charData; var\r\n    cLength = 0;\r\n\r\n  var fontProps = getFontProperties(fontData);\r\n  documentData.fWeight = fontProps.weight;\r\n  documentData.fStyle = fontProps.style;\r\n  documentData.finalSize = documentData.s;\r\n  documentData.finalText = this.buildFinalText(documentData.t);\r\n  len = documentData.finalText.length;\r\n  documentData.finalLineHeight = documentData.lh;\r\n  var trackingOffset = (documentData.tr / 1000) * documentData.finalSize;\r\n  var charCode;\r\n  if (documentData.sz) {\r\n    var flag = true;\r\n    var boxWidth = documentData.sz[0];\r\n    var boxHeight = documentData.sz[1];\r\n    var currentHeight; var\r\n      finalText;\r\n    while (flag) {\r\n      finalText = this.buildFinalText(documentData.t);\r\n      currentHeight = 0;\r\n      lineWidth = 0;\r\n      len = finalText.length;\r\n      trackingOffset = (documentData.tr / 1000) * documentData.finalSize;\r\n      var lastSpaceIndex = -1;\r\n      for (i = 0; i < len; i += 1) {\r\n        charCode = finalText[i].charCodeAt(0);\r\n        newLineFlag = false;\r\n        if (finalText[i] === ' ') {\r\n          lastSpaceIndex = i;\r\n        } else if (charCode === 13 || charCode === 3) {\r\n          lineWidth = 0;\r\n          newLineFlag = true;\r\n          currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n        }\r\n        if (fontManager.chars) {\r\n          charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n          cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100;\r\n        } else {\r\n          // tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n          cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n        }\r\n        if (lineWidth + cLength > boxWidth && finalText[i] !== ' ') {\r\n          if (lastSpaceIndex === -1) {\r\n            len += 1;\r\n          } else {\r\n            i = lastSpaceIndex;\r\n          }\r\n          currentHeight += documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n          finalText.splice(i, lastSpaceIndex === i ? 1 : 0, '\\r');\r\n          // finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n          lastSpaceIndex = -1;\r\n          lineWidth = 0;\r\n        } else {\r\n          lineWidth += cLength;\r\n          lineWidth += trackingOffset;\r\n        }\r\n      }\r\n      currentHeight += (fontData.ascent * documentData.finalSize) / 100;\r\n      if (this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n        documentData.finalSize -= 1;\r\n        documentData.finalLineHeight = (documentData.finalSize * documentData.lh) / documentData.s;\r\n      } else {\r\n        documentData.finalText = finalText;\r\n        len = documentData.finalText.length;\r\n        flag = false;\r\n      }\r\n    }\r\n  }\r\n  lineWidth = -trackingOffset;\r\n  cLength = 0;\r\n  var uncollapsedSpaces = 0;\r\n  var currentChar;\r\n  for (i = 0; i < len; i += 1) {\r\n    newLineFlag = false;\r\n    currentChar = documentData.finalText[i];\r\n    charCode = currentChar.charCodeAt(0);\r\n    if (charCode === 13 || charCode === 3) {\r\n      uncollapsedSpaces = 0;\r\n      lineWidths.push(lineWidth);\r\n      maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n      lineWidth = -2 * trackingOffset;\r\n      val = '';\r\n      newLineFlag = true;\r\n      currentLine += 1;\r\n    } else {\r\n      val = currentChar;\r\n    }\r\n    if (fontManager.chars) {\r\n      charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n      cLength = newLineFlag ? 0 : (charData.w * documentData.finalSize) / 100;\r\n    } else {\r\n      // var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n      // tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n      cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n    }\r\n\r\n    //\r\n    if (currentChar === ' ') {\r\n      uncollapsedSpaces += cLength + trackingOffset;\r\n    } else {\r\n      lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n      uncollapsedSpaces = 0;\r\n    }\r\n    letters.push({\r\n      l: cLength, an: cLength, add: currentSize, n: newLineFlag, anIndexes: [], val: val, line: currentLine, animatorJustifyOffset: 0,\r\n    });\r\n    if (anchorGrouping == 2) { // eslint-disable-line eqeqeq\r\n      currentSize += cLength;\r\n      if (val === '' || val === ' ' || i === len - 1) {\r\n        if (val === '' || val === ' ') {\r\n          currentSize -= cLength;\r\n        }\r\n        while (currentPos <= i) {\r\n          letters[currentPos].an = currentSize;\r\n          letters[currentPos].ind = index;\r\n          letters[currentPos].extra = cLength;\r\n          currentPos += 1;\r\n        }\r\n        index += 1;\r\n        currentSize = 0;\r\n      }\r\n    } else if (anchorGrouping == 3) { // eslint-disable-line eqeqeq\r\n      currentSize += cLength;\r\n      if (val === '' || i === len - 1) {\r\n        if (val === '') {\r\n          currentSize -= cLength;\r\n        }\r\n        while (currentPos <= i) {\r\n          letters[currentPos].an = currentSize;\r\n          letters[currentPos].ind = index;\r\n          letters[currentPos].extra = cLength;\r\n          currentPos += 1;\r\n        }\r\n        currentSize = 0;\r\n        index += 1;\r\n      }\r\n    } else {\r\n      letters[index].ind = index;\r\n      letters[index].extra = 0;\r\n      index += 1;\r\n    }\r\n  }\r\n  documentData.l = letters;\r\n  maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n  lineWidths.push(lineWidth);\r\n  if (documentData.sz) {\r\n    documentData.boxWidth = documentData.sz[0];\r\n    documentData.justifyOffset = 0;\r\n  } else {\r\n    documentData.boxWidth = maxLineWidth;\r\n    switch (documentData.j) {\r\n      case 1:\r\n        documentData.justifyOffset = -documentData.boxWidth;\r\n        break;\r\n      case 2:\r\n        documentData.justifyOffset = -documentData.boxWidth / 2;\r\n        break;\r\n      default:\r\n        documentData.justifyOffset = 0;\r\n    }\r\n  }\r\n  documentData.lineWidths = lineWidths;\r\n\r\n  var animators = data.a; var animatorData; var\r\n    letterData;\r\n  jLen = animators.length;\r\n  var based; var ind; var\r\n    indexes = [];\r\n  for (j = 0; j < jLen; j += 1) {\r\n    animatorData = animators[j];\r\n    if (animatorData.a.sc) {\r\n      documentData.strokeColorAnim = true;\r\n    }\r\n    if (animatorData.a.sw) {\r\n      documentData.strokeWidthAnim = true;\r\n    }\r\n    if (animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb) {\r\n      documentData.fillColorAnim = true;\r\n    }\r\n    ind = 0;\r\n    based = animatorData.s.b;\r\n    for (i = 0; i < len; i += 1) {\r\n      letterData = letters[i];\r\n      letterData.anIndexes[j] = ind;\r\n      if ((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== ' ') || (based == 3 && (letterData.n || letterData.val == ' ' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))) { // eslint-disable-line eqeqeq\r\n        if (animatorData.s.rn === 1) {\r\n          indexes.push(ind);\r\n        }\r\n        ind += 1;\r\n      }\r\n    }\r\n    data.a[j].s.totalChars = ind;\r\n    var currentInd = -1; var\r\n      newInd;\r\n    if (animatorData.s.rn === 1) {\r\n      for (i = 0; i < len; i += 1) {\r\n        letterData = letters[i];\r\n        if (currentInd != letterData.anIndexes[j]) { // eslint-disable-line eqeqeq\r\n          currentInd = letterData.anIndexes[j];\r\n          newInd = indexes.splice(Math.floor(Math.random() * indexes.length), 1)[0];\r\n        }\r\n        letterData.anIndexes[j] = newInd;\r\n      }\r\n    }\r\n  }\r\n  documentData.yOffset = documentData.finalLineHeight || documentData.finalSize * 1.2;\r\n  documentData.ls = documentData.ls || 0;\r\n  documentData.ascent = (fontData.ascent * documentData.finalSize) / 100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function (newData, index) {\r\n  index = index === undefined ? this.keysIndex : index;\r\n  var dData = this.copyData({}, this.data.d.k[index].s);\r\n  dData = this.copyData(dData, newData);\r\n  this.data.d.k[index].s = dData;\r\n  this.recalculate(index);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function (index) {\r\n  var dData = this.data.d.k[index].s;\r\n  dData.__complete = false;\r\n  this.keysIndex = 0;\r\n  this._isFirstFrame = true;\r\n  this.getValue(dData);\r\n};\r\n\r\nTextProperty.prototype.canResizeFont = function (_canResize) {\r\n  this.canResize = _canResize;\r\n  this.recalculate(this.keysIndex);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function (_fontValue) {\r\n  this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n  this.recalculate(this.keysIndex);\r\n  this.elem.addDynamicProperty(this);\r\n};\r\n\r\n/* global extendPrototype, BezierFactory, PropertyFactory, DynamicPropertyContainer */\r\n/* exported TextSelectorProp */\r\n\r\nvar TextSelectorProp = (function () {\r\n  var max = Math.max;\r\n  var min = Math.min;\r\n  var floor = Math.floor;\r\n\r\n  function TextSelectorPropFactory(elem, data) {\r\n    this._currentTextLength = -1;\r\n    this.k = false;\r\n    this.data = data;\r\n    this.elem = elem;\r\n    this.comp = elem.comp;\r\n    this.finalS = 0;\r\n    this.finalE = 0;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.s = PropertyFactory.getProp(elem, data.s || { k: 0 }, 0, 0, this);\r\n    if ('e' in data) {\r\n      this.e = PropertyFactory.getProp(elem, data.e, 0, 0, this);\r\n    } else {\r\n      this.e = { v: 100 };\r\n    }\r\n    this.o = PropertyFactory.getProp(elem, data.o || { k: 0 }, 0, 0, this);\r\n    this.xe = PropertyFactory.getProp(elem, data.xe || { k: 0 }, 0, 0, this);\r\n    this.ne = PropertyFactory.getProp(elem, data.ne || { k: 0 }, 0, 0, this);\r\n    this.a = PropertyFactory.getProp(elem, data.a, 0, 0.01, this);\r\n    if (!this.dynamicProperties.length) {\r\n      this.getValue();\r\n    }\r\n  }\r\n\r\n  TextSelectorPropFactory.prototype = {\r\n    getMult: function (ind) {\r\n      if (this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n        this.getValue();\r\n      }\r\n      // var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n      var x1 = 0;\r\n      var y1 = 0;\r\n      var x2 = 1;\r\n      var y2 = 1;\r\n      if (this.ne.v > 0) {\r\n        x1 = this.ne.v / 100.0;\r\n      } else {\r\n        y1 = -this.ne.v / 100.0;\r\n      }\r\n      if (this.xe.v > 0) {\r\n        x2 = 1.0 - this.xe.v / 100.0;\r\n      } else {\r\n        y2 = 1.0 + this.xe.v / 100.0;\r\n      }\r\n      var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\r\n\r\n      var mult = 0;\r\n      var s = this.finalS;\r\n      var e = this.finalE;\r\n      var type = this.data.sh;\r\n      if (type === 2) {\r\n        if (e === s) {\r\n          mult = ind >= e ? 1 : 0;\r\n        } else {\r\n          mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 3) {\r\n        if (e === s) {\r\n          mult = ind >= e ? 0 : 1;\r\n        } else {\r\n          mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n        }\r\n\r\n        mult = easer(mult);\r\n      } else if (type === 4) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n          if (mult < 0.5) {\r\n            mult *= 2;\r\n          } else {\r\n            mult = 1 - 2 * (mult - 0.5);\r\n          }\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 5) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          var tot = e - s;\r\n          /* ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind; */\r\n          ind = min(max(0, ind + 0.5 - s), e - s);\r\n          var x = -tot / 2 + ind;\r\n          var a = tot / 2;\r\n          mult = Math.sqrt(1 - (x * x) / (a * a));\r\n        }\r\n        mult = easer(mult);\r\n      } else if (type === 6) {\r\n        if (e === s) {\r\n          mult = 0;\r\n        } else {\r\n          ind = min(max(0, ind + 0.5 - s), e - s);\r\n          mult = (1 + (Math.cos((Math.PI + Math.PI * 2 * (ind) / (e - s))))) / 2; // eslint-disable-line\r\n        }\r\n        mult = easer(mult);\r\n      } else {\r\n        if (ind >= floor(s)) {\r\n          if (ind - s < 0) {\r\n            mult = max(0, min(min(e, 1) - (s - ind), 1));\r\n          } else {\r\n            mult = max(0, min(e - ind, 1));\r\n          }\r\n        }\r\n        mult = easer(mult);\r\n      }\r\n      return mult * this.a.v;\r\n    },\r\n    getValue: function (newCharsFlag) {\r\n      this.iterateDynamicProperties();\r\n      this._mdf = newCharsFlag || this._mdf;\r\n      this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n      if (newCharsFlag && this.data.r === 2) {\r\n        this.e.v = this._currentTextLength;\r\n      }\r\n      var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n      var o = this.o.v / divisor;\r\n      var s = this.s.v / divisor + o;\r\n      var e = (this.e.v / divisor) + o;\r\n      if (s > e) {\r\n        var _s = s;\r\n        s = e;\r\n        e = _s;\r\n      }\r\n      this.finalS = s;\r\n      this.finalE = e;\r\n    },\r\n  };\r\n  extendPrototype([DynamicPropertyContainer], TextSelectorPropFactory);\r\n\r\n  function getTextSelectorProp(elem, data, arr) {\r\n    return new TextSelectorPropFactory(elem, data, arr);\r\n  }\r\n\r\n  return {\r\n    getTextSelectorProp: getTextSelectorProp,\r\n  };\r\n}());\r\n\r\n/* global createSizedArray, pooling */\r\n/* exported poolFactory */\r\n\r\nvar poolFactory = (function () {\r\n  return function (initialLength, _create, _release) {\r\n    var _length = 0;\r\n    var _maxLength = initialLength;\r\n    var pool = createSizedArray(_maxLength);\r\n\r\n    var ob = {\r\n      newElement: newElement,\r\n      release: release,\r\n    };\r\n\r\n    function newElement() {\r\n      var element;\r\n      if (_length) {\r\n        _length -= 1;\r\n        element = pool[_length];\r\n      } else {\r\n        element = _create();\r\n      }\r\n      return element;\r\n    }\r\n\r\n    function release(element) {\r\n      if (_length === _maxLength) {\r\n        pool = pooling.double(pool);\r\n        _maxLength *= 2;\r\n      }\r\n      if (_release) {\r\n        _release(element);\r\n      }\r\n      pool[_length] = element;\r\n      _length += 1;\r\n    }\r\n\r\n    return ob;\r\n  };\r\n}());\r\n\r\n/* global createSizedArray */\r\n/* exported pooling */\r\n\r\nvar pooling = (function () {\r\n  function double(arr) {\r\n    return arr.concat(createSizedArray(arr.length));\r\n  }\r\n\r\n  return {\r\n    double: double,\r\n  };\r\n}());\r\n\r\n/* global createTypedArray, poolFactory */\r\n/* exported pointPool */\r\n\r\nvar pointPool = (function () {\r\n  function create() {\r\n    return createTypedArray('float32', 2);\r\n  }\r\n  return poolFactory(8, create);\r\n}());\r\n\r\n/* global ShapePath, pointPool, poolFactory */\r\n/* exported shapePool */\r\n\r\nvar shapePool = (function () {\r\n  function create() {\r\n    return new ShapePath();\r\n  }\r\n\r\n  function release(shapePath) {\r\n    var len = shapePath._length;\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      pointPool.release(shapePath.v[i]);\r\n      pointPool.release(shapePath.i[i]);\r\n      pointPool.release(shapePath.o[i]);\r\n      shapePath.v[i] = null;\r\n      shapePath.i[i] = null;\r\n      shapePath.o[i] = null;\r\n    }\r\n    shapePath._length = 0;\r\n    shapePath.c = false;\r\n  }\r\n\r\n  function clone(shape) {\r\n    var cloned = factory.newElement();\r\n    var i;\r\n    var len = shape._length === undefined ? shape.v.length : shape._length;\r\n    cloned.setLength(len);\r\n    cloned.c = shape.c;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      cloned.setTripleAt(shape.v[i][0], shape.v[i][1], shape.o[i][0], shape.o[i][1], shape.i[i][0], shape.i[i][1], i);\r\n    }\r\n    return cloned;\r\n  }\r\n\r\n  var factory = poolFactory(4, create, release);\r\n  factory.clone = clone;\r\n\r\n  return factory;\r\n}());\r\n\r\n/* global createSizedArray, ShapeCollection, shapePool, pooling */\r\n/* exported shapeCollectionPool */\r\n\r\nvar shapeCollectionPool = (function () {\r\n  var ob = {\r\n    newShapeCollection: newShapeCollection,\r\n    release: release,\r\n  };\r\n\r\n  var _length = 0;\r\n  var _maxLength = 4;\r\n  var pool = createSizedArray(_maxLength);\r\n\r\n  function newShapeCollection() {\r\n    var shapeCollection;\r\n    if (_length) {\r\n      _length -= 1;\r\n      shapeCollection = pool[_length];\r\n    } else {\r\n      shapeCollection = new ShapeCollection();\r\n    }\r\n    return shapeCollection;\r\n  }\r\n\r\n  function release(shapeCollection) {\r\n    var i;\r\n    var len = shapeCollection._length;\r\n    for (i = 0; i < len; i += 1) {\r\n      shapePool.release(shapeCollection.shapes[i]);\r\n    }\r\n    shapeCollection._length = 0;\r\n\r\n    if (_length === _maxLength) {\r\n      pool = pooling.double(pool);\r\n      _maxLength *= 2;\r\n    }\r\n    pool[_length] = shapeCollection;\r\n    _length += 1;\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global poolFactory, bezierLengthPool */\r\n/* exported segmentsLengthPool */\r\n\r\nvar segmentsLengthPool = (function () {\r\n  function create() {\r\n    return {\r\n      lengths: [],\r\n      totalLength: 0,\r\n    };\r\n  }\r\n\r\n  function release(element) {\r\n    var i;\r\n    var len = element.lengths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      bezierLengthPool.release(element.lengths[i]);\r\n    }\r\n    element.lengths.length = 0;\r\n  }\r\n\r\n  return poolFactory(8, create, release);\r\n}());\r\n\r\n/* global createTypedArray, defaultCurveSegments, poolFactory */\r\n/* exported bezierLengthPool */\r\n\r\nvar bezierLengthPool = (function () {\r\n  function create() {\r\n    return {\r\n      addedLength: 0,\r\n      percents: createTypedArray('float32', defaultCurveSegments),\r\n      lengths: createTypedArray('float32', defaultCurveSegments),\r\n    };\r\n  }\r\n  return poolFactory(8, create);\r\n}());\r\n\r\n/* exported markerParser */\r\n\r\nvar markerParser = (\r\n\r\n  function () {\r\n    function parsePayloadLines(payload) {\r\n      var lines = payload.split('\\r\\n');\r\n      var keys = {};\r\n      var line;\r\n      var keysCount = 0;\r\n      for (var i = 0; i < lines.length; i += 1) {\r\n        line = lines[i].split(':');\r\n        if (line.length === 2) {\r\n          keys[line[0]] = line[1].trim();\r\n          keysCount += 1;\r\n        }\r\n      }\r\n      if (keysCount === 0) {\r\n        throw new Error();\r\n      }\r\n      return keys;\r\n    }\r\n\r\n    return function (_markers) {\r\n      var markers = [];\r\n      for (var i = 0; i < _markers.length; i += 1) {\r\n        var _marker = _markers[i];\r\n        var markerData = {\r\n          time: _marker.tm,\r\n          duration: _marker.dr,\r\n        };\r\n        try {\r\n          markerData.payload = JSON.parse(_markers[i].cm);\r\n        } catch (_) {\r\n          try {\r\n            markerData.payload = parsePayloadLines(_markers[i].cm);\r\n          } catch (__) {\r\n            markerData.payload = {\r\n              name: _markers[i],\r\n            };\r\n          }\r\n        }\r\n        markers.push(markerData);\r\n      }\r\n      return markers;\r\n    };\r\n  }());\r\n\r\n/* global AudioElement, FootageElement, FontManager */\r\n\r\nfunction BaseRenderer() {}\r\nBaseRenderer.prototype.checkLayers = function (num) {\r\n  var i;\r\n  var len = this.layers.length;\r\n  var data;\r\n  this.completeLayers = true;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (!this.elements[i]) {\r\n      data = this.layers[i];\r\n      if (data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st)) {\r\n        this.buildItem(i);\r\n      }\r\n    }\r\n    this.completeLayers = this.elements[i] ? this.completeLayers : false;\r\n  }\r\n  this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function (layer) {\r\n  switch (layer.ty) {\r\n    case 2:\r\n      return this.createImage(layer);\r\n    case 0:\r\n      return this.createComp(layer);\r\n    case 1:\r\n      return this.createSolid(layer);\r\n    case 3:\r\n      return this.createNull(layer);\r\n    case 4:\r\n      return this.createShape(layer);\r\n    case 5:\r\n      return this.createText(layer);\r\n    case 6:\r\n      return this.createAudio(layer);\r\n    case 13:\r\n      return this.createCamera(layer);\r\n    case 15:\r\n      return this.createFootage(layer);\r\n    default:\r\n      return this.createNull(layer);\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function () {\r\n  throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.createAudio = function (data) {\r\n  return new AudioElement(data, this.globalData, this);\r\n};\r\n\r\nBaseRenderer.prototype.createFootage = function (data) {\r\n  return new FootageElement(data, this.globalData, this);\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.buildItem(i);\r\n  }\r\n  this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function (newLayers) {\r\n  this.completeLayers = false;\r\n  var i;\r\n  var len = newLayers.length;\r\n  var j;\r\n  var jLen = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    j = 0;\r\n    while (j < jLen) {\r\n      if (this.layers[j].id === newLayers[i].id) {\r\n        this.layers[j] = newLayers[i];\r\n        break;\r\n      }\r\n      j += 1;\r\n    }\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function (pInterface) {\r\n  this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function () {\r\n  if (!this.globalData.progressiveLoad) {\r\n    this.buildAllItems();\r\n  }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function (element, parentName, hierarchy) {\r\n  var elements = this.elements;\r\n  var layers = this.layers;\r\n  var i = 0;\r\n  var len = layers.length;\r\n  while (i < len) {\r\n    if (layers[i].ind == parentName) { // eslint-disable-line eqeqeq\r\n      if (!elements[i] || elements[i] === true) {\r\n        this.buildItem(i);\r\n        this.addPendingElement(element);\r\n      } else {\r\n        hierarchy.push(elements[i]);\r\n        elements[i].setAsParent();\r\n        if (layers[i].parent !== undefined) {\r\n          this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n        } else {\r\n          element.setHierarchy(hierarchy);\r\n        }\r\n      }\r\n    }\r\n    i += 1;\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function (element) {\r\n  this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function (assets) {\r\n  var i;\r\n  var len = assets.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (assets[i].xt) {\r\n      var comp = this.createComp(assets[i]);\r\n      comp.initExpressions();\r\n      this.globalData.projectInterface.registerComposition(comp);\r\n    }\r\n  }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function (animData, fontsContainer) {\r\n  this.globalData.fontManager = new FontManager();\r\n  this.globalData.fontManager.addChars(animData.chars);\r\n  this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n  this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n  this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n  this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n  this.globalData.audioController = this.animationItem.audioController;\r\n  this.globalData.frameId = 0;\r\n  this.globalData.frameRate = animData.fr;\r\n  this.globalData.nm = animData.nm;\r\n  this.globalData.compSize = {\r\n    w: animData.w,\r\n    h: animData.h,\r\n  };\r\n};\r\n\r\n/* global createElementID, extendPrototype, BaseRenderer, NullElement, SVGShapeElement, SVGTextLottieElement,\r\nIImageElement, SVGCompElement, ISolidElement, createNS, locationHref, createSizedArray, expressionsPlugin */\r\n\r\nfunction SVGRenderer(animationItem, config) {\r\n  this.animationItem = animationItem;\r\n  this.layers = null;\r\n  this.renderedFrame = -1;\r\n  this.svgElement = createNS('svg');\r\n  var ariaLabel = '';\r\n  if (config && config.title) {\r\n    var titleElement = createNS('title');\r\n    var titleId = createElementID();\r\n    titleElement.setAttribute('id', titleId);\r\n    titleElement.textContent = config.title;\r\n    this.svgElement.appendChild(titleElement);\r\n    ariaLabel += titleId;\r\n  }\r\n  if (config && config.description) {\r\n    var descElement = createNS('desc');\r\n    var descId = createElementID();\r\n    descElement.setAttribute('id', descId);\r\n    descElement.textContent = config.description;\r\n    this.svgElement.appendChild(descElement);\r\n    ariaLabel += ' ' + descId;\r\n  }\r\n  if (ariaLabel) {\r\n    this.svgElement.setAttribute('aria-labelledby', ariaLabel);\r\n  }\r\n  var defs = createNS('defs');\r\n  this.svgElement.appendChild(defs);\r\n  var maskElement = createNS('g');\r\n  this.svgElement.appendChild(maskElement);\r\n  this.layerElement = maskElement;\r\n  this.renderConfig = {\r\n    preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n    imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n    progressiveLoad: (config && config.progressiveLoad) || false,\r\n    hideOnTransparent: !((config && config.hideOnTransparent === false)),\r\n    viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n    viewBoxSize: (config && config.viewBoxSize) || false,\r\n    className: (config && config.className) || '',\r\n    id: (config && config.id) || '',\r\n    focusable: config && config.focusable,\r\n    filterSize: {\r\n      width: (config && config.filterSize && config.filterSize.width) || '100%',\r\n      height: (config && config.filterSize && config.filterSize.height) || '100%',\r\n      x: (config && config.filterSize && config.filterSize.x) || '0%',\r\n      y: (config && config.filterSize && config.filterSize.y) || '0%',\r\n    },\r\n  };\r\n\r\n  this.globalData = {\r\n    _mdf: false,\r\n    frameNum: -1,\r\n    defs: defs,\r\n    renderConfig: this.renderConfig,\r\n  };\r\n  this.elements = [];\r\n  this.pendingElements = [];\r\n  this.destroyed = false;\r\n  this.rendererType = 'svg';\r\n}\r\n\r\nextendPrototype([BaseRenderer], SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n  return new NullElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n  return new SVGShapeElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n  return new SVGTextLottieElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n  return new IImageElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n  return new SVGCompElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n  return new ISolidElement(data, this.globalData, this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function (animData) {\r\n  this.svgElement.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\r\n  if (this.renderConfig.viewBoxSize) {\r\n    this.svgElement.setAttribute('viewBox', this.renderConfig.viewBoxSize);\r\n  } else {\r\n    this.svgElement.setAttribute('viewBox', '0 0 ' + animData.w + ' ' + animData.h);\r\n  }\r\n\r\n  if (!this.renderConfig.viewBoxOnly) {\r\n    this.svgElement.setAttribute('width', animData.w);\r\n    this.svgElement.setAttribute('height', animData.h);\r\n    this.svgElement.style.width = '100%';\r\n    this.svgElement.style.height = '100%';\r\n    this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n  }\r\n  if (this.renderConfig.className) {\r\n    this.svgElement.setAttribute('class', this.renderConfig.className);\r\n  }\r\n  if (this.renderConfig.id) {\r\n    this.svgElement.setAttribute('id', this.renderConfig.id);\r\n  }\r\n  if (this.renderConfig.focusable !== undefined) {\r\n    this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\r\n  }\r\n  this.svgElement.setAttribute('preserveAspectRatio', this.renderConfig.preserveAspectRatio);\r\n  // this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n  // this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n  this.animationItem.wrapper.appendChild(this.svgElement);\r\n  // Mask animation\r\n  var defs = this.globalData.defs;\r\n\r\n  this.setupGlobalData(animData, defs);\r\n  this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n  this.data = animData;\r\n\r\n  var maskElement = createNS('clipPath');\r\n  var rect = createNS('rect');\r\n  rect.setAttribute('width', animData.w);\r\n  rect.setAttribute('height', animData.h);\r\n  rect.setAttribute('x', 0);\r\n  rect.setAttribute('y', 0);\r\n  var maskId = createElementID();\r\n  maskElement.setAttribute('id', maskId);\r\n  maskElement.appendChild(rect);\r\n  this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + maskId + ')');\r\n\r\n  defs.appendChild(maskElement);\r\n  this.layers = animData.layers;\r\n  this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n  if (this.animationItem.wrapper) {\r\n    this.animationItem.wrapper.innerText = '';\r\n  }\r\n  this.layerElement = null;\r\n  this.globalData.defs = null;\r\n  var i;\r\n  var len = this.layers ? this.layers.length : 0;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n  this.elements.length = 0;\r\n  this.destroyed = true;\r\n  this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem = function (pos) {\r\n  var elements = this.elements;\r\n  if (elements[pos] || this.layers[pos].ty === 99) {\r\n    return;\r\n  }\r\n  elements[pos] = true;\r\n  var element = this.createItem(this.layers[pos]);\r\n\r\n  elements[pos] = element;\r\n  if (expressionsPlugin) {\r\n    if (this.layers[pos].ty === 0) {\r\n      this.globalData.projectInterface.registerComposition(element);\r\n    }\r\n    element.initExpressions();\r\n  }\r\n  this.appendElementInPos(element, pos);\r\n  if (this.layers[pos].tt) {\r\n    if (!this.elements[pos - 1] || this.elements[pos - 1] === true) {\r\n      this.buildItem(pos - 1);\r\n      this.addPendingElement(element);\r\n    } else {\r\n      element.setMatte(elements[pos - 1].layerId);\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements = function () {\r\n  while (this.pendingElements.length) {\r\n    var element = this.pendingElements.pop();\r\n    element.checkParenting();\r\n    if (element.data.tt) {\r\n      var i = 0;\r\n      var len = this.elements.length;\r\n      while (i < len) {\r\n        if (this.elements[i] === element) {\r\n          element.setMatte(this.elements[i - 1].layerId);\r\n          break;\r\n        }\r\n        i += 1;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function (num) {\r\n  if (this.renderedFrame === num || this.destroyed) {\r\n    return;\r\n  }\r\n  if (num === null) {\r\n    num = this.renderedFrame;\r\n  } else {\r\n    this.renderedFrame = num;\r\n  }\r\n  // console.log('-------');\r\n  // console.log('FRAME ',num);\r\n  this.globalData.frameNum = num;\r\n  this.globalData.frameId += 1;\r\n  this.globalData.projectInterface.currentFrame = num;\r\n  this.globalData._mdf = false;\r\n  var i;\r\n  var len = this.layers.length;\r\n  if (!this.completeLayers) {\r\n    this.checkLayers(num);\r\n  }\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].prepareFrame(num - this.layers[i].st);\r\n    }\r\n  }\r\n  if (this.globalData._mdf) {\r\n    for (i = 0; i < len; i += 1) {\r\n      if (this.completeLayers || this.elements[i]) {\r\n        this.elements[i].renderFrame();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function (element, pos) {\r\n  var newElement = element.getBaseElement();\r\n  if (!newElement) {\r\n    return;\r\n  }\r\n  var i = 0;\r\n  var nextElement;\r\n  while (i < pos) {\r\n    if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement()) {\r\n      nextElement = this.elements[i].getBaseElement();\r\n    }\r\n    i += 1;\r\n  }\r\n  if (nextElement) {\r\n    this.layerElement.insertBefore(newElement, nextElement);\r\n  } else {\r\n    this.layerElement.appendChild(newElement);\r\n  }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function () {\r\n  this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function () {\r\n  this.layerElement.style.display = 'block';\r\n};\r\n\r\n/* global CVContextData, Matrix, extendPrototype, BaseRenderer, CVShapeElement, CVTextElement,\r\nCVImageElement, CVCompElement, CVSolidElement, SVGRenderer, createTag, createSizedArray */\r\n\r\nfunction CanvasRenderer(animationItem, config) {\r\n  this.animationItem = animationItem;\r\n  this.renderConfig = {\r\n    clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n    context: (config && config.context) || null,\r\n    progressiveLoad: (config && config.progressiveLoad) || false,\r\n    preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n    imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n    className: (config && config.className) || '',\r\n    id: (config && config.id) || '',\r\n  };\r\n  this.renderConfig.dpr = (config && config.dpr) || 1;\r\n  if (this.animationItem.wrapper) {\r\n    this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n  }\r\n  this.renderedFrame = -1;\r\n  this.globalData = {\r\n    frameNum: -1,\r\n    _mdf: false,\r\n    renderConfig: this.renderConfig,\r\n    currentGlobalAlpha: -1,\r\n  };\r\n  this.contextData = new CVContextData();\r\n  this.elements = [];\r\n  this.pendingElements = [];\r\n  this.transformMat = new Matrix();\r\n  this.completeLayers = false;\r\n  this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer], CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n  return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n  return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n  return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n  return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n  return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function (props) {\r\n  if (props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0) {\r\n    return;\r\n  }\r\n  if (!this.renderConfig.clearCanvas) {\r\n    this.canvasContext.transform(props[0], props[1], props[4], props[5], props[12], props[13]);\r\n    return;\r\n  }\r\n  this.transformMat.cloneFromProps(props);\r\n  var cProps = this.contextData.cTr.props;\r\n  this.transformMat.transform(cProps[0], cProps[1], cProps[2], cProps[3], cProps[4], cProps[5], cProps[6], cProps[7], cProps[8], cProps[9], cProps[10], cProps[11], cProps[12], cProps[13], cProps[14], cProps[15]);\r\n  // this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n  this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n  var trProps = this.contextData.cTr.props;\r\n  this.canvasContext.setTransform(trProps[0], trProps[1], trProps[4], trProps[5], trProps[12], trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function (op) {\r\n  /* if(op === 1){\r\n        return;\r\n    } */\r\n  if (!this.renderConfig.clearCanvas) {\r\n    this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n    this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    return;\r\n  }\r\n  this.contextData.cO *= op < 0 ? 0 : op;\r\n  if (this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n    this.canvasContext.globalAlpha = this.contextData.cO;\r\n    this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n  }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function () {\r\n  if (!this.renderConfig.clearCanvas) {\r\n    this.canvasContext.restore();\r\n    return;\r\n  }\r\n  this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function (actionFlag) {\r\n  if (!this.renderConfig.clearCanvas) {\r\n    this.canvasContext.save();\r\n    return;\r\n  }\r\n  if (actionFlag) {\r\n    this.canvasContext.save();\r\n  }\r\n  var props = this.contextData.cTr.props;\r\n  if (this.contextData._length <= this.contextData.cArrPos) {\r\n    this.contextData.duplicate();\r\n  }\r\n  var i;\r\n  var arr = this.contextData.saved[this.contextData.cArrPos];\r\n  for (i = 0; i < 16; i += 1) {\r\n    arr[i] = props[i];\r\n  }\r\n  this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n  this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function (actionFlag) {\r\n  if (!this.renderConfig.clearCanvas) {\r\n    this.canvasContext.restore();\r\n    return;\r\n  }\r\n  if (actionFlag) {\r\n    this.canvasContext.restore();\r\n    this.globalData.blendMode = 'source-over';\r\n  }\r\n  this.contextData.cArrPos -= 1;\r\n  var popped = this.contextData.saved[this.contextData.cArrPos];\r\n  var i;\r\n  var arr = this.contextData.cTr.props;\r\n  for (i = 0; i < 16; i += 1) {\r\n    arr[i] = popped[i];\r\n  }\r\n  this.canvasContext.setTransform(popped[0], popped[1], popped[4], popped[5], popped[12], popped[13]);\r\n  popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n  this.contextData.cO = popped;\r\n  if (this.globalData.currentGlobalAlpha !== popped) {\r\n    this.canvasContext.globalAlpha = popped;\r\n    this.globalData.currentGlobalAlpha = popped;\r\n  }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function (animData) {\r\n  if (this.animationItem.wrapper) {\r\n    this.animationItem.container = createTag('canvas');\r\n    var containerStyle = this.animationItem.container.style;\r\n    containerStyle.width = '100%';\r\n    containerStyle.height = '100%';\r\n    var origin = '0px 0px 0px';\r\n    containerStyle.transformOrigin = origin;\r\n    containerStyle.mozTransformOrigin = origin;\r\n    containerStyle.webkitTransformOrigin = origin;\r\n    containerStyle['-webkit-transform'] = origin;\r\n    this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n    this.canvasContext = this.animationItem.container.getContext('2d');\r\n    if (this.renderConfig.className) {\r\n      this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    if (this.renderConfig.id) {\r\n      this.animationItem.container.setAttribute('id', this.renderConfig.id);\r\n    }\r\n  } else {\r\n    this.canvasContext = this.renderConfig.context;\r\n  }\r\n  this.data = animData;\r\n  this.layers = animData.layers;\r\n  this.transformCanvas = {\r\n    w: animData.w,\r\n    h: animData.h,\r\n    sx: 0,\r\n    sy: 0,\r\n    tx: 0,\r\n    ty: 0,\r\n  };\r\n  this.setupGlobalData(animData, document.body);\r\n  this.globalData.canvasContext = this.canvasContext;\r\n  this.globalData.renderer = this;\r\n  this.globalData.isDashed = false;\r\n  this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n  this.globalData.transformCanvas = this.transformCanvas;\r\n  this.elements = createSizedArray(animData.layers.length);\r\n\r\n  this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n  this.reset();\r\n  var elementWidth;\r\n  var elementHeight;\r\n  if (this.animationItem.wrapper && this.animationItem.container) {\r\n    elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    this.animationItem.container.setAttribute('width', elementWidth * this.renderConfig.dpr);\r\n    this.animationItem.container.setAttribute('height', elementHeight * this.renderConfig.dpr);\r\n  } else {\r\n    elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n    elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n  }\r\n  var elementRel;\r\n  var animationRel;\r\n  if (this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1) {\r\n    var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n    var fillType = par[1] || 'meet';\r\n    var pos = par[0] || 'xMidYMid';\r\n    var xPos = pos.substr(0, 4);\r\n    var yPos = pos.substr(4);\r\n    elementRel = elementWidth / elementHeight;\r\n    animationRel = this.transformCanvas.w / this.transformCanvas.h;\r\n    if ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice')) {\r\n      this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\r\n      this.transformCanvas.sy = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\r\n    } else {\r\n      this.transformCanvas.sx = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\r\n      this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\r\n    }\r\n\r\n    if (xPos === 'xMid' && ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))) {\r\n      this.transformCanvas.tx = ((elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) / 2) * this.renderConfig.dpr;\r\n    } else if (xPos === 'xMax' && ((animationRel < elementRel && fillType === 'meet') || (animationRel > elementRel && fillType === 'slice'))) {\r\n      this.transformCanvas.tx = (elementWidth - this.transformCanvas.w * (elementHeight / this.transformCanvas.h)) * this.renderConfig.dpr;\r\n    } else {\r\n      this.transformCanvas.tx = 0;\r\n    }\r\n    if (yPos === 'YMid' && ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))) {\r\n      this.transformCanvas.ty = ((elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w)) / 2) * this.renderConfig.dpr;\r\n    } else if (yPos === 'YMax' && ((animationRel > elementRel && fillType === 'meet') || (animationRel < elementRel && fillType === 'slice'))) {\r\n      this.transformCanvas.ty = ((elementHeight - this.transformCanvas.h * (elementWidth / this.transformCanvas.w))) * this.renderConfig.dpr;\r\n    } else {\r\n      this.transformCanvas.ty = 0;\r\n    }\r\n  } else if (this.renderConfig.preserveAspectRatio === 'none') {\r\n    this.transformCanvas.sx = elementWidth / (this.transformCanvas.w / this.renderConfig.dpr);\r\n    this.transformCanvas.sy = elementHeight / (this.transformCanvas.h / this.renderConfig.dpr);\r\n    this.transformCanvas.tx = 0;\r\n    this.transformCanvas.ty = 0;\r\n  } else {\r\n    this.transformCanvas.sx = this.renderConfig.dpr;\r\n    this.transformCanvas.sy = this.renderConfig.dpr;\r\n    this.transformCanvas.tx = 0;\r\n    this.transformCanvas.ty = 0;\r\n  }\r\n  this.transformCanvas.props = [this.transformCanvas.sx, 0, 0, 0, 0, this.transformCanvas.sy, 0, 0, 0, 0, 1, 0, this.transformCanvas.tx, this.transformCanvas.ty, 0, 1];\r\n  /* var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    } */\r\n  this.ctxTransform(this.transformCanvas.props);\r\n  this.canvasContext.beginPath();\r\n  this.canvasContext.rect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n  this.canvasContext.closePath();\r\n  this.canvasContext.clip();\r\n\r\n  this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n  if (this.renderConfig.clearCanvas && this.animationItem.wrapper) {\r\n    this.animationItem.wrapper.innerText = '';\r\n  }\r\n  var i;\r\n  var len = this.layers ? this.layers.length : 0;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n  this.elements.length = 0;\r\n  this.globalData.canvasContext = null;\r\n  this.animationItem.container = null;\r\n  this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function (num, forceRender) {\r\n  if ((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1) {\r\n    return;\r\n  }\r\n  this.renderedFrame = num;\r\n  this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n  this.globalData.frameId += 1;\r\n  this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n  this.globalData.projectInterface.currentFrame = num;\r\n\r\n  // console.log('--------');\r\n  // console.log('NEW: ',num);\r\n  var i;\r\n  var len = this.layers.length;\r\n  if (!this.completeLayers) {\r\n    this.checkLayers(num);\r\n  }\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].prepareFrame(num - this.layers[i].st);\r\n    }\r\n  }\r\n  if (this.globalData._mdf) {\r\n    if (this.renderConfig.clearCanvas === true) {\r\n      this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n    } else {\r\n      this.save();\r\n    }\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      if (this.completeLayers || this.elements[i]) {\r\n        this.elements[i].renderFrame();\r\n      }\r\n    }\r\n    if (this.renderConfig.clearCanvas !== true) {\r\n      this.restore();\r\n    }\r\n  }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function (pos) {\r\n  var elements = this.elements;\r\n  if (elements[pos] || this.layers[pos].ty === 99) {\r\n    return;\r\n  }\r\n  var element = this.createItem(this.layers[pos], this, this.globalData);\r\n  elements[pos] = element;\r\n  element.initExpressions();\r\n  /* if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    } */\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements = function () {\r\n  while (this.pendingElements.length) {\r\n    var element = this.pendingElements.pop();\r\n    element.checkParenting();\r\n  }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function () {\r\n  this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function () {\r\n  this.animationItem.container.style.display = 'block';\r\n};\r\n\r\n/* global extendPrototype, BaseRenderer, SVGRenderer, SVGShapeElement, HShapeElement, SVGTextLottieElement,\r\nHTextElement, HCameraElement, IImageElement, HImageElement, SVGCompElement, HCompElement, ISolidElement,\r\nHSolidElement, styleDiv, createTag, createNS */\r\n\r\nfunction HybridRenderer(animationItem, config) {\r\n  this.animationItem = animationItem;\r\n  this.layers = null;\r\n  this.renderedFrame = -1;\r\n  this.renderConfig = {\r\n    className: (config && config.className) || '',\r\n    imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n    hideOnTransparent: !(config && config.hideOnTransparent === false),\r\n    filterSize: {\r\n      width: (config && config.filterSize && config.filterSize.width) || '400%',\r\n      height: (config && config.filterSize && config.filterSize.height) || '400%',\r\n      x: (config && config.filterSize && config.filterSize.x) || '-100%',\r\n      y: (config && config.filterSize && config.filterSize.y) || '-100%',\r\n    },\r\n  };\r\n  this.globalData = {\r\n    _mdf: false,\r\n    frameNum: -1,\r\n    renderConfig: this.renderConfig,\r\n  };\r\n  this.pendingElements = [];\r\n  this.elements = [];\r\n  this.threeDElements = [];\r\n  this.destroyed = false;\r\n  this.camera = null;\r\n  this.supports3d = true;\r\n  this.rendererType = 'html';\r\n}\r\n\r\nextendPrototype([BaseRenderer], HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements = function () {\r\n  while (this.pendingElements.length) {\r\n    var element = this.pendingElements.pop();\r\n    element.checkParenting();\r\n  }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function (element, pos) {\r\n  var newDOMElement = element.getBaseElement();\r\n  if (!newDOMElement) {\r\n    return;\r\n  }\r\n  var layer = this.layers[pos];\r\n  if (!layer.ddd || !this.supports3d) {\r\n    if (this.threeDElements) {\r\n      this.addTo3dContainer(newDOMElement, pos);\r\n    } else {\r\n      var i = 0;\r\n      var nextDOMElement;\r\n      var nextLayer;\r\n      var tmpDOMElement;\r\n      while (i < pos) {\r\n        if (this.elements[i] && this.elements[i] !== true && this.elements[i].getBaseElement) {\r\n          nextLayer = this.elements[i];\r\n          tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n          nextDOMElement = tmpDOMElement || nextDOMElement;\r\n        }\r\n        i += 1;\r\n      }\r\n      if (nextDOMElement) {\r\n        if (!layer.ddd || !this.supports3d) {\r\n          this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n        }\r\n      } else if (!layer.ddd || !this.supports3d) {\r\n        this.layerElement.appendChild(newDOMElement);\r\n      }\r\n    }\r\n  } else {\r\n    this.addTo3dContainer(newDOMElement, pos);\r\n  }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n  if (!this.supports3d) {\r\n    return new SVGShapeElement(data, this.globalData, this);\r\n  }\r\n  return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n  if (!this.supports3d) {\r\n    return new SVGTextLottieElement(data, this.globalData, this);\r\n  }\r\n  return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n  this.camera = new HCameraElement(data, this.globalData, this);\r\n  return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n  if (!this.supports3d) {\r\n    return new IImageElement(data, this.globalData, this);\r\n  }\r\n  return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n  if (!this.supports3d) {\r\n    return new SVGCompElement(data, this.globalData, this);\r\n  }\r\n  return new HCompElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n  if (!this.supports3d) {\r\n    return new ISolidElement(data, this.globalData, this);\r\n  }\r\n  return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function (pos) {\r\n  var i = 0;\r\n  var len = this.threeDElements.length;\r\n  while (i < len) {\r\n    if (this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n      return this.threeDElements[i].perspectiveElem;\r\n    }\r\n    i += 1;\r\n  }\r\n  return null;\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function (pos, type) {\r\n  var perspectiveElem = createTag('div');\r\n  var style;\r\n  var containerStyle;\r\n  styleDiv(perspectiveElem);\r\n  var container = createTag('div');\r\n  styleDiv(container);\r\n  if (type === '3d') {\r\n    style = perspectiveElem.style;\r\n    style.width = this.globalData.compSize.w + 'px';\r\n    style.height = this.globalData.compSize.h + 'px';\r\n    var center = '50% 50%';\r\n    style.webkitTransformOrigin = center;\r\n    style.mozTransformOrigin = center;\r\n    style.transformOrigin = center;\r\n    containerStyle = container.style;\r\n    var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    containerStyle.transform = matrix;\r\n    containerStyle.webkitTransform = matrix;\r\n  }\r\n\r\n  perspectiveElem.appendChild(container);\r\n  // this.resizerElem.appendChild(perspectiveElem);\r\n  var threeDContainerData = {\r\n    container: container,\r\n    perspectiveElem: perspectiveElem,\r\n    startPos: pos,\r\n    endPos: pos,\r\n    type: type,\r\n  };\r\n  this.threeDElements.push(threeDContainerData);\r\n  return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  var lastThreeDContainerData;\r\n  var currentContainer = '';\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.layers[i].ddd && this.layers[i].ty !== 3) {\r\n      if (currentContainer !== '3d') {\r\n        currentContainer = '3d';\r\n        lastThreeDContainerData = this.createThreeDContainer(i, '3d');\r\n      }\r\n      lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\r\n    } else {\r\n      if (currentContainer !== '2d') {\r\n        currentContainer = '2d';\r\n        lastThreeDContainerData = this.createThreeDContainer(i, '2d');\r\n      }\r\n      lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos, i);\r\n    }\r\n  }\r\n  len = this.threeDElements.length;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n  }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function (elem, pos) {\r\n  var i = 0;\r\n  var len = this.threeDElements.length;\r\n  while (i < len) {\r\n    if (pos <= this.threeDElements[i].endPos) {\r\n      var j = this.threeDElements[i].startPos;\r\n      var nextElement;\r\n      while (j < pos) {\r\n        if (this.elements[j] && this.elements[j].getBaseElement) {\r\n          nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n      }\r\n      if (nextElement) {\r\n        this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n      } else {\r\n        this.threeDElements[i].container.appendChild(elem);\r\n      }\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function (animData) {\r\n  var resizerElem = createTag('div');\r\n  var wrapper = this.animationItem.wrapper;\r\n  var style = resizerElem.style;\r\n  style.width = animData.w + 'px';\r\n  style.height = animData.h + 'px';\r\n  this.resizerElem = resizerElem;\r\n  styleDiv(resizerElem);\r\n  style.transformStyle = 'flat';\r\n  style.mozTransformStyle = 'flat';\r\n  style.webkitTransformStyle = 'flat';\r\n  if (this.renderConfig.className) {\r\n    resizerElem.setAttribute('class', this.renderConfig.className);\r\n  }\r\n  wrapper.appendChild(resizerElem);\r\n\r\n  style.overflow = 'hidden';\r\n  var svg = createNS('svg');\r\n  svg.setAttribute('width', '1');\r\n  svg.setAttribute('height', '1');\r\n  styleDiv(svg);\r\n  this.resizerElem.appendChild(svg);\r\n  var defs = createNS('defs');\r\n  svg.appendChild(defs);\r\n  this.data = animData;\r\n  // Mask animation\r\n  this.setupGlobalData(animData, svg);\r\n  this.globalData.defs = defs;\r\n  this.layers = animData.layers;\r\n  this.layerElement = this.resizerElem;\r\n  this.build3dContainers();\r\n  this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n  if (this.animationItem.wrapper) {\r\n    this.animationItem.wrapper.innerText = '';\r\n  }\r\n  this.animationItem.container = null;\r\n  this.globalData.defs = null;\r\n  var i;\r\n  var len = this.layers ? this.layers.length : 0;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.elements[i].destroy();\r\n  }\r\n  this.elements.length = 0;\r\n  this.destroyed = true;\r\n  this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n  var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n  var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n  var elementRel = elementWidth / elementHeight;\r\n  var animationRel = this.globalData.compSize.w / this.globalData.compSize.h;\r\n  var sx;\r\n  var sy;\r\n  var tx;\r\n  var ty;\r\n  if (animationRel > elementRel) {\r\n    sx = elementWidth / (this.globalData.compSize.w);\r\n    sy = elementWidth / (this.globalData.compSize.w);\r\n    tx = 0;\r\n    ty = ((elementHeight - this.globalData.compSize.h * (elementWidth / this.globalData.compSize.w)) / 2);\r\n  } else {\r\n    sx = elementHeight / (this.globalData.compSize.h);\r\n    sy = elementHeight / (this.globalData.compSize.h);\r\n    tx = (elementWidth - this.globalData.compSize.w * (elementHeight / this.globalData.compSize.h)) / 2;\r\n    ty = 0;\r\n  }\r\n  var style = this.resizerElem.style;\r\n  style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,' + sy + ',0,0,0,0,1,0,' + tx + ',' + ty + ',0,1)';\r\n  style.transform = style.webkitTransform;\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function () {\r\n  this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function () {\r\n  this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function () {\r\n  this.buildAllItems();\r\n  if (this.camera) {\r\n    this.camera.setup();\r\n  } else {\r\n    var cWidth = this.globalData.compSize.w;\r\n    var cHeight = this.globalData.compSize.h;\r\n    var i;\r\n    var len = this.threeDElements.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      var style = this.threeDElements[i].perspectiveElem.style;\r\n      style.webkitPerspective = Math.sqrt(Math.pow(cWidth, 2) + Math.pow(cHeight, 2)) + 'px';\r\n      style.perspective = style.webkitPerspective;\r\n    }\r\n  }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function (assets) {\r\n  var i;\r\n  var len = assets.length;\r\n  var floatingContainer = createTag('div');\r\n  for (i = 0; i < len; i += 1) {\r\n    if (assets[i].xt) {\r\n      var comp = this.createComp(assets[i], floatingContainer, this.globalData.comp, null);\r\n      comp.initExpressions();\r\n      this.globalData.projectInterface.registerComposition(comp);\r\n    }\r\n  }\r\n};\r\n\r\n/* global createSizedArray, createElementID, PropertyFactory, ShapePropertyFactory, createNS, locationHref */\r\n\r\nfunction MaskElement(data, element, globalData) {\r\n  this.data = data;\r\n  this.element = element;\r\n  this.globalData = globalData;\r\n  this.storedData = [];\r\n  this.masksProperties = this.data.masksProperties || [];\r\n  this.maskElement = null;\r\n  var defs = this.globalData.defs;\r\n  var i;\r\n  var len = this.masksProperties ? this.masksProperties.length : 0;\r\n  this.viewData = createSizedArray(len);\r\n  this.solidPath = '';\r\n\r\n  var path;\r\n  var properties = this.masksProperties;\r\n  var count = 0;\r\n  var currentMasks = [];\r\n  var j;\r\n  var jLen;\r\n  var layerId = createElementID();\r\n  var rect;\r\n  var expansor;\r\n  var feMorph;\r\n  var x;\r\n  var maskType = 'clipPath';\r\n  var maskRef = 'clip-path';\r\n  for (i = 0; i < len; i += 1) {\r\n    if ((properties[i].mode !== 'a' && properties[i].mode !== 'n') || properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x) {\r\n      maskType = 'mask';\r\n      maskRef = 'mask';\r\n    }\r\n\r\n    if ((properties[i].mode === 's' || properties[i].mode === 'i') && count === 0) {\r\n      rect = createNS('rect');\r\n      rect.setAttribute('fill', '#ffffff');\r\n      rect.setAttribute('width', this.element.comp.data.w || 0);\r\n      rect.setAttribute('height', this.element.comp.data.h || 0);\r\n      currentMasks.push(rect);\r\n    } else {\r\n      rect = null;\r\n    }\r\n\r\n    path = createNS('path');\r\n    if (properties[i].mode === 'n') {\r\n      // TODO move this to a factory or to a constructor\r\n      this.viewData[i] = {\r\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\r\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\r\n        elem: path,\r\n        lastPath: '',\r\n      };\r\n      defs.appendChild(path);\r\n    } else {\r\n      count += 1;\r\n\r\n      path.setAttribute('fill', properties[i].mode === 's' ? '#000000' : '#ffffff');\r\n      path.setAttribute('clip-rule', 'nonzero');\r\n      var filterID;\r\n\r\n      if (properties[i].x.k !== 0) {\r\n        maskType = 'mask';\r\n        maskRef = 'mask';\r\n        x = PropertyFactory.getProp(this.element, properties[i].x, 0, null, this.element);\r\n        filterID = createElementID();\r\n        expansor = createNS('filter');\r\n        expansor.setAttribute('id', filterID);\r\n        feMorph = createNS('feMorphology');\r\n        feMorph.setAttribute('operator', 'erode');\r\n        feMorph.setAttribute('in', 'SourceGraphic');\r\n        feMorph.setAttribute('radius', '0');\r\n        expansor.appendChild(feMorph);\r\n        defs.appendChild(expansor);\r\n        path.setAttribute('stroke', properties[i].mode === 's' ? '#000000' : '#ffffff');\r\n      } else {\r\n        feMorph = null;\r\n        x = null;\r\n      }\r\n\r\n      // TODO move this to a factory or to a constructor\r\n      this.storedData[i] = {\r\n        elem: path,\r\n        x: x,\r\n        expan: feMorph,\r\n        lastPath: '',\r\n        lastOperator: '',\r\n        filterId: filterID,\r\n        lastRadius: 0,\r\n      };\r\n      if (properties[i].mode === 'i') {\r\n        jLen = currentMasks.length;\r\n        var g = createNS('g');\r\n        for (j = 0; j < jLen; j += 1) {\r\n          g.appendChild(currentMasks[j]);\r\n        }\r\n        var mask = createNS('mask');\r\n        mask.setAttribute('mask-type', 'alpha');\r\n        mask.setAttribute('id', layerId + '_' + count);\r\n        mask.appendChild(path);\r\n        defs.appendChild(mask);\r\n        g.setAttribute('mask', 'url(' + locationHref + '#' + layerId + '_' + count + ')');\r\n\r\n        currentMasks.length = 0;\r\n        currentMasks.push(g);\r\n      } else {\r\n        currentMasks.push(path);\r\n      }\r\n      if (properties[i].inv && !this.solidPath) {\r\n        this.solidPath = this.createLayerSolidPath();\r\n      }\r\n      // TODO move this to a factory or to a constructor\r\n      this.viewData[i] = {\r\n        elem: path,\r\n        lastPath: '',\r\n        op: PropertyFactory.getProp(this.element, properties[i].o, 0, 0.01, this.element),\r\n        prop: ShapePropertyFactory.getShapeProp(this.element, properties[i], 3),\r\n        invRect: rect,\r\n      };\r\n      if (!this.viewData[i].prop.k) {\r\n        this.drawPath(properties[i], this.viewData[i].prop.v, this.viewData[i]);\r\n      }\r\n    }\r\n  }\r\n\r\n  this.maskElement = createNS(maskType);\r\n\r\n  len = currentMasks.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.maskElement.appendChild(currentMasks[i]);\r\n  }\r\n\r\n  if (count > 0) {\r\n    this.maskElement.setAttribute('id', layerId);\r\n    this.element.maskedElement.setAttribute(maskRef, 'url(' + locationHref + '#' + layerId + ')');\r\n    defs.appendChild(this.maskElement);\r\n  }\r\n  if (this.viewData.length) {\r\n    this.element.addRenderableComponent(this);\r\n  }\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function (pos) {\r\n  return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n  var finalMat = this.element.finalTransform.mat;\r\n  var i;\r\n  var len = this.masksProperties.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.viewData[i].prop._mdf || isFirstFrame) {\r\n      this.drawPath(this.masksProperties[i], this.viewData[i].prop.v, this.viewData[i]);\r\n    }\r\n    if (this.viewData[i].op._mdf || isFirstFrame) {\r\n      this.viewData[i].elem.setAttribute('fill-opacity', this.viewData[i].op.v);\r\n    }\r\n    if (this.masksProperties[i].mode !== 'n') {\r\n      if (this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)) {\r\n        this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS());\r\n      }\r\n      if (this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)) {\r\n        var feMorph = this.storedData[i].expan;\r\n        if (this.storedData[i].x.v < 0) {\r\n          if (this.storedData[i].lastOperator !== 'erode') {\r\n            this.storedData[i].lastOperator = 'erode';\r\n            this.storedData[i].elem.setAttribute('filter', 'url(' + locationHref + '#' + this.storedData[i].filterId + ')');\r\n          }\r\n          feMorph.setAttribute('radius', -this.storedData[i].x.v);\r\n        } else {\r\n          if (this.storedData[i].lastOperator !== 'dilate') {\r\n            this.storedData[i].lastOperator = 'dilate';\r\n            this.storedData[i].elem.setAttribute('filter', null);\r\n          }\r\n          this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v * 2);\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n  return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function () {\r\n  var path = 'M0,0 ';\r\n  path += ' h' + this.globalData.compSize.w;\r\n  path += ' v' + this.globalData.compSize.h;\r\n  path += ' h-' + this.globalData.compSize.w;\r\n  path += ' v-' + this.globalData.compSize.h + ' ';\r\n  return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function (pathData, pathNodes, viewData) {\r\n  var pathString = ' M' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\r\n  var i;\r\n  var len;\r\n  len = pathNodes._length;\r\n  for (i = 1; i < len; i += 1) {\r\n    // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[i][0] + ',' + pathNodes.i[i][1] + ' ' + pathNodes.v[i][0] + ',' + pathNodes.v[i][1];\r\n  }\r\n  // pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n  if (pathNodes.c && len > 1) {\r\n    pathString += ' C' + pathNodes.o[i - 1][0] + ',' + pathNodes.o[i - 1][1] + ' ' + pathNodes.i[0][0] + ',' + pathNodes.i[0][1] + ' ' + pathNodes.v[0][0] + ',' + pathNodes.v[0][1];\r\n  }\r\n  // pathNodes.__renderedString = pathString;\r\n\r\n  if (viewData.lastPath !== pathString) {\r\n    var pathShapeValue = '';\r\n    if (viewData.elem) {\r\n      if (pathNodes.c) {\r\n        pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n      }\r\n      viewData.elem.setAttribute('d', pathShapeValue);\r\n    }\r\n    viewData.lastPath = pathString;\r\n  }\r\n};\r\n\r\nMaskElement.prototype.destroy = function () {\r\n  this.element = null;\r\n  this.globalData = null;\r\n  this.maskElement = null;\r\n  this.data = null;\r\n  this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file\r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement() {}\r\n\r\nHierarchyElement.prototype = {\r\n  /**\r\n     * @function\r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n  initHierarchy: function () {\r\n    // element's parent list\r\n    this.hierarchy = [];\r\n    // if element is parent of another layer _isParent will be true\r\n    this._isParent = false;\r\n    this.checkParenting();\r\n  },\r\n  /**\r\n     * @function\r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */\r\n  setHierarchy: function (hierarchy) {\r\n    this.hierarchy = hierarchy;\r\n  },\r\n  /**\r\n     * @function\r\n     * Sets layer as parent.\r\n     *\r\n     */\r\n  setAsParent: function () {\r\n    this._isParent = true;\r\n  },\r\n  /**\r\n     * @function\r\n     * Searches layer's parenting chain\r\n     *\r\n     */\r\n  checkParenting: function () {\r\n    if (this.data.parent !== undefined) {\r\n      this.comp.buildElementParenting(this, this.data.parent, []);\r\n    }\r\n  },\r\n};\r\n\r\n/**\r\n * @file\r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement() {}\r\n\r\nFrameElement.prototype = {\r\n  /**\r\n     * @function\r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n  initFrame: function () {\r\n    // set to true when inpoint is rendered\r\n    this._isFirstFrame = false;\r\n    // list of animated properties\r\n    this.dynamicProperties = [];\r\n    // If layer has been modified in current tick this will be true\r\n    this._mdf = false;\r\n  },\r\n  /**\r\n     * @function\r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     *\r\n     */\r\n  prepareProperties: function (num, isVisible) {\r\n    var i;\r\n    var len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n        this.dynamicProperties[i].getValue();\r\n        if (this.dynamicProperties[i]._mdf) {\r\n          this.globalData._mdf = true;\r\n          this._mdf = true;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  addDynamicProperty: function (prop) {\r\n    if (this.dynamicProperties.indexOf(prop) === -1) {\r\n      this.dynamicProperties.push(prop);\r\n    }\r\n  },\r\n};\r\n\r\n/* global TransformPropertyFactory, Matrix */\r\n\r\nfunction TransformElement() {}\r\n\r\nTransformElement.prototype = {\r\n  initTransform: function () {\r\n    this.finalTransform = {\r\n      mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : { o: 0 },\r\n      _matMdf: false,\r\n      _opMdf: false,\r\n      mat: new Matrix(),\r\n    };\r\n    if (this.data.ao) {\r\n      this.finalTransform.mProp.autoOriented = true;\r\n    }\r\n\r\n    // TODO: check TYPE 11: Guided elements\r\n    if (this.data.ty !== 11) {\r\n      // this.createElements();\r\n    }\r\n  },\r\n  renderTransform: function () {\r\n    this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n    this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n    if (this.hierarchy) {\r\n      var mat;\r\n      var finalMat = this.finalTransform.mat;\r\n      var i = 0;\r\n      var len = this.hierarchy.length;\r\n      // Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n      if (!this.finalTransform._matMdf) {\r\n        while (i < len) {\r\n          if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n            this.finalTransform._matMdf = true;\r\n            break;\r\n          }\r\n          i += 1;\r\n        }\r\n      }\r\n\r\n      if (this.finalTransform._matMdf) {\r\n        mat = this.finalTransform.mProp.v.props;\r\n        finalMat.cloneFromProps(mat);\r\n        for (i = 0; i < len; i += 1) {\r\n          mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n          finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n        }\r\n      }\r\n    }\r\n  },\r\n  globalToLocal: function (pt) {\r\n    var transforms = [];\r\n    transforms.push(this.finalTransform);\r\n    var flag = true;\r\n    var comp = this.comp;\r\n    while (flag) {\r\n      if (comp.finalTransform) {\r\n        if (comp.data.hasMask) {\r\n          transforms.splice(0, 0, comp.finalTransform);\r\n        }\r\n        comp = comp.comp;\r\n      } else {\r\n        flag = false;\r\n      }\r\n    }\r\n    var i;\r\n    var len = transforms.length;\r\n    var ptNew;\r\n    for (i = 0; i < len; i += 1) {\r\n      ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n      // ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n      pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n    }\r\n    return pt;\r\n  },\r\n  mHelper: new Matrix(),\r\n};\r\n\r\nfunction RenderableElement() {\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n  initRenderable: function () {\r\n    // layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n    this.isInRange = false;\r\n    // layer's display state\r\n    this.hidden = false;\r\n    // If layer's transparency equals 0, it can be hidden\r\n    this.isTransparent = false;\r\n    // list of animated components\r\n    this.renderableComponents = [];\r\n  },\r\n  addRenderableComponent: function (component) {\r\n    if (this.renderableComponents.indexOf(component) === -1) {\r\n      this.renderableComponents.push(component);\r\n    }\r\n  },\r\n  removeRenderableComponent: function (component) {\r\n    if (this.renderableComponents.indexOf(component) !== -1) {\r\n      this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n    }\r\n  },\r\n  prepareRenderableFrame: function (num) {\r\n    this.checkLayerLimits(num);\r\n  },\r\n  checkTransparency: function () {\r\n    if (this.finalTransform.mProp.o.v <= 0) {\r\n      if (!this.isTransparent && this.globalData.renderConfig.hideOnTransparent) {\r\n        this.isTransparent = true;\r\n        this.hide();\r\n      }\r\n    } else if (this.isTransparent) {\r\n      this.isTransparent = false;\r\n      this.show();\r\n    }\r\n  },\r\n  /**\r\n     * @function\r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     *\r\n     */\r\n  checkLayerLimits: function (num) {\r\n    if (this.data.ip - this.data.st <= num && this.data.op - this.data.st > num) {\r\n      if (this.isInRange !== true) {\r\n        this.globalData._mdf = true;\r\n        this._mdf = true;\r\n        this.isInRange = true;\r\n        this.show();\r\n      }\r\n    } else if (this.isInRange !== false) {\r\n      this.globalData._mdf = true;\r\n      this.isInRange = false;\r\n      this.hide();\r\n    }\r\n  },\r\n  renderRenderable: function () {\r\n    var i;\r\n    var len = this.renderableComponents.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n    }\r\n    /* this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame); */\r\n  },\r\n  sourceRectAtTime: function () {\r\n    return {\r\n      top: 0,\r\n      left: 0,\r\n      width: 100,\r\n      height: 100,\r\n    };\r\n  },\r\n  getLayerSize: function () {\r\n    if (this.data.ty === 5) {\r\n      return { w: this.data.textData.width, h: this.data.textData.height };\r\n    }\r\n    return { w: this.data.width, h: this.data.height };\r\n  },\r\n};\r\n\r\n/* global extendPrototype, RenderableElement, createProxyFunction */\r\n\r\nfunction RenderableDOMElement() {}\r\n\r\n(function () {\r\n  var _prototype = {\r\n    initElement: function (data, globalData, comp) {\r\n      this.initFrame();\r\n      this.initBaseData(data, globalData, comp);\r\n      this.initTransform(data, globalData, comp);\r\n      this.initHierarchy();\r\n      this.initRenderable();\r\n      this.initRendererElement();\r\n      this.createContainerElements();\r\n      this.createRenderableComponents();\r\n      this.createContent();\r\n      this.hide();\r\n    },\r\n    hide: function () {\r\n      if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n        var elem = this.baseElement || this.layerElement;\r\n        elem.style.display = 'none';\r\n        this.hidden = true;\r\n      }\r\n    },\r\n    show: function () {\r\n      if (this.isInRange && !this.isTransparent) {\r\n        if (!this.data.hd) {\r\n          var elem = this.baseElement || this.layerElement;\r\n          elem.style.display = 'block';\r\n        }\r\n        this.hidden = false;\r\n        this._isFirstFrame = true;\r\n      }\r\n    },\r\n    renderFrame: function () {\r\n      // If it is exported as hidden (data.hd === true) no need to render\r\n      // If it is not visible no need to render\r\n      if (this.data.hd || this.hidden) {\r\n        return;\r\n      }\r\n      this.renderTransform();\r\n      this.renderRenderable();\r\n      this.renderElement();\r\n      this.renderInnerContent();\r\n      if (this._isFirstFrame) {\r\n        this._isFirstFrame = false;\r\n      }\r\n    },\r\n    renderInnerContent: function () {},\r\n    prepareFrame: function (num) {\r\n      this._mdf = false;\r\n      this.prepareRenderableFrame(num);\r\n      this.prepareProperties(num, this.isInRange);\r\n      this.checkTransparency();\r\n    },\r\n    destroy: function () {\r\n      this.innerElem = null;\r\n      this.destroyBaseElement();\r\n    },\r\n  };\r\n  extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\n\r\n/* exported ProcessedElement */\r\n\r\nfunction ProcessedElement(element, position) {\r\n  this.elem = element;\r\n  this.pos = position;\r\n}\r\n\r\n/* global createNS */\r\n\r\nfunction SVGStyleData(data, level) {\r\n  this.data = data;\r\n  this.type = data.ty;\r\n  this.d = '';\r\n  this.lvl = level;\r\n  this._mdf = false;\r\n  this.closed = data.hd === true;\r\n  this.pElem = createNS('path');\r\n  this.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function () {\r\n  this.d = '';\r\n  this._mdf = false;\r\n};\r\n\r\nfunction SVGShapeData(transformers, level, shape) {\r\n  this.caches = [];\r\n  this.styles = [];\r\n  this.transformers = transformers;\r\n  this.lStr = '';\r\n  this.sh = shape;\r\n  this.lvl = level;\r\n  // TODO find if there are some cases where _isAnimated can be false.\r\n  // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n  // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n  this._isAnimated = !!shape.k;\r\n  // TODO: commenting this for now since all shapes are animated\r\n  var i = 0;\r\n  var len = transformers.length;\r\n  while (i < len) {\r\n    if (transformers[i].mProps.dynamicProperties.length) {\r\n      this._isAnimated = true;\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function () {\r\n  this._isAnimated = true;\r\n};\r\n\r\n/* exported SVGTransformData */\r\n\r\nfunction SVGTransformData(mProps, op, container) {\r\n  this.transform = {\r\n    mProps: mProps,\r\n    op: op,\r\n    container: container,\r\n  };\r\n  this.elements = [];\r\n  this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\n\r\n/* global DashProperty, PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction SVGStrokeStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\r\n  this.d = new DashProperty(elem, data.d || {}, 'svg', this);\r\n  this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\r\n  this.style = styleOb;\r\n  this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\n\r\n/* global PropertyFactory, extendPrototype, DynamicPropertyContainer */\r\n\r\nfunction SVGFillStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.c = PropertyFactory.getProp(elem, data.c, 1, 255, this);\r\n  this.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\n\r\n/* global PropertyFactory, degToRads, GradientProperty, createElementID, createNS, locationHref,\r\nextendPrototype, DynamicPropertyContainer */\r\n\r\nfunction SVGGradientFillStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function (elem, data, styleOb) {\r\n  this.o = PropertyFactory.getProp(elem, data.o, 0, 0.01, this);\r\n  this.s = PropertyFactory.getProp(elem, data.s, 1, null, this);\r\n  this.e = PropertyFactory.getProp(elem, data.e, 1, null, this);\r\n  this.h = PropertyFactory.getProp(elem, data.h || { k: 0 }, 0, 0.01, this);\r\n  this.a = PropertyFactory.getProp(elem, data.a || { k: 0 }, 0, degToRads, this);\r\n  this.g = new GradientProperty(elem, data.g, this);\r\n  this.style = styleOb;\r\n  this.stops = [];\r\n  this.setGradientData(styleOb.pElem, data);\r\n  this.setGradientOpacity(data, styleOb);\r\n  this._isAnimated = !!this._isAnimated;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function (pathElement, data) {\r\n  var gradientId = createElementID();\r\n  var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n  gfill.setAttribute('id', gradientId);\r\n  gfill.setAttribute('spreadMethod', 'pad');\r\n  gfill.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n  var stops = [];\r\n  var stop;\r\n  var j;\r\n  var jLen;\r\n  jLen = data.g.p * 4;\r\n  for (j = 0; j < jLen; j += 4) {\r\n    stop = createNS('stop');\r\n    gfill.appendChild(stop);\r\n    stops.push(stop);\r\n  }\r\n  pathElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + gradientId + ')');\r\n\r\n  this.gf = gfill;\r\n  this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function (data, styleOb) {\r\n  if (this.g._hasOpacity && !this.g._collapsable) {\r\n    var stop;\r\n    var j;\r\n    var jLen;\r\n    var mask = createNS('mask');\r\n    var maskElement = createNS('path');\r\n    mask.appendChild(maskElement);\r\n    var opacityId = createElementID();\r\n    var maskId = createElementID();\r\n    mask.setAttribute('id', maskId);\r\n    var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    opFill.setAttribute('id', opacityId);\r\n    opFill.setAttribute('spreadMethod', 'pad');\r\n    opFill.setAttribute('gradientUnits', 'userSpaceOnUse');\r\n    jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n    var stops = this.stops;\r\n    for (j = data.g.p * 4; j < jLen; j += 2) {\r\n      stop = createNS('stop');\r\n      stop.setAttribute('stop-color', 'rgb(255,255,255)');\r\n      opFill.appendChild(stop);\r\n      stops.push(stop);\r\n    }\r\n    maskElement.setAttribute(data.ty === 'gf' ? 'fill' : 'stroke', 'url(' + locationHref + '#' + opacityId + ')');\r\n    this.of = opFill;\r\n    this.ms = mask;\r\n    this.ost = stops;\r\n    this.maskId = maskId;\r\n    styleOb.msElem = maskElement;\r\n  }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\n\r\n/* global PropertyFactory, DashProperty, extendPrototype, SVGGradientFillStyleData, DynamicPropertyContainer */\r\n\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb) {\r\n  this.initDynamicPropertyContainer(elem);\r\n  this.getValue = this.iterateDynamicProperties;\r\n  this.w = PropertyFactory.getProp(elem, data.w, 0, null, this);\r\n  this.d = new DashProperty(elem, data.d || {}, 'svg', this);\r\n  this.initGradientData(elem, data, styleOb);\r\n  this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\n\r\n/* global createNS */\r\n/* exported ShapeGroupData */\r\n\r\nfunction ShapeGroupData() {\r\n  this.it = [];\r\n  this.prevViewData = [];\r\n  this.gr = createNS('g');\r\n}\r\n\r\n/* global Matrix, buildShapeString, bmFloor */\r\n/* exported SVGElementsRenderer */\r\n\r\nvar SVGElementsRenderer = (function () {\r\n  var _identityMatrix = new Matrix();\r\n  var _matrixHelper = new Matrix();\r\n\r\n  var ob = {\r\n    createRenderFunction: createRenderFunction,\r\n  };\r\n\r\n  function createRenderFunction(data) {\r\n    switch (data.ty) {\r\n      case 'fl':\r\n        return renderFill;\r\n      case 'gf':\r\n        return renderGradient;\r\n      case 'gs':\r\n        return renderGradientStroke;\r\n      case 'st':\r\n        return renderStroke;\r\n      case 'sh':\r\n      case 'el':\r\n      case 'rc':\r\n      case 'sr':\r\n        return renderPath;\r\n      case 'tr':\r\n        return renderContentTransform;\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n\r\n  function renderContentTransform(styleData, itemData, isFirstFrame) {\r\n    if (isFirstFrame || itemData.transform.op._mdf) {\r\n      itemData.transform.container.setAttribute('opacity', itemData.transform.op.v);\r\n    }\r\n    if (isFirstFrame || itemData.transform.mProps._mdf) {\r\n      itemData.transform.container.setAttribute('transform', itemData.transform.mProps.v.to2dCSS());\r\n    }\r\n  }\r\n\r\n  function renderPath(styleData, itemData, isFirstFrame) {\r\n    var j;\r\n    var jLen;\r\n    var pathStringTransformed;\r\n    var redraw;\r\n    var pathNodes;\r\n    var l;\r\n    var lLen = itemData.styles.length;\r\n    var lvl = itemData.lvl;\r\n    var paths;\r\n    var mat;\r\n    var props;\r\n    var iterations;\r\n    var k;\r\n    for (l = 0; l < lLen; l += 1) {\r\n      redraw = itemData.sh._mdf || isFirstFrame;\r\n      if (itemData.styles[l].lvl < lvl) {\r\n        mat = _matrixHelper.reset();\r\n        iterations = lvl - itemData.styles[l].lvl;\r\n        k = itemData.transformers.length - 1;\r\n        while (!redraw && iterations > 0) {\r\n          redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n          iterations -= 1;\r\n          k -= 1;\r\n        }\r\n        if (redraw) {\r\n          iterations = lvl - itemData.styles[l].lvl;\r\n          k = itemData.transformers.length - 1;\r\n          while (iterations > 0) {\r\n            props = itemData.transformers[k].mProps.v.props;\r\n            mat.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\r\n            iterations -= 1;\r\n            k -= 1;\r\n          }\r\n        }\r\n      } else {\r\n        mat = _identityMatrix;\r\n      }\r\n      paths = itemData.sh.paths;\r\n      jLen = paths._length;\r\n      if (redraw) {\r\n        pathStringTransformed = '';\r\n        for (j = 0; j < jLen; j += 1) {\r\n          pathNodes = paths.shapes[j];\r\n          if (pathNodes && pathNodes._length) {\r\n            pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n          }\r\n        }\r\n        itemData.caches[l] = pathStringTransformed;\r\n      } else {\r\n        pathStringTransformed = itemData.caches[l];\r\n      }\r\n      itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n      itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n    }\r\n  }\r\n\r\n  function renderFill(styleData, itemData, isFirstFrame) {\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('fill', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\r\n    }\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('fill-opacity', itemData.o.v);\r\n    }\r\n  }\r\n\r\n  function renderGradientStroke(styleData, itemData, isFirstFrame) {\r\n    renderGradient(styleData, itemData, isFirstFrame);\r\n    renderStroke(styleData, itemData, isFirstFrame);\r\n  }\r\n\r\n  function renderGradient(styleData, itemData, isFirstFrame) {\r\n    var gfill = itemData.gf;\r\n    var hasOpacity = itemData.g._hasOpacity;\r\n    var pt1 = itemData.s.v;\r\n    var pt2 = itemData.e.v;\r\n\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n      itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n    }\r\n    if (itemData.s._mdf || isFirstFrame) {\r\n      var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n      var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n      gfill.setAttribute(attr1, pt1[0]);\r\n      gfill.setAttribute(attr2, pt1[1]);\r\n      if (hasOpacity && !itemData.g._collapsable) {\r\n        itemData.of.setAttribute(attr1, pt1[0]);\r\n        itemData.of.setAttribute(attr2, pt1[1]);\r\n      }\r\n    }\r\n    var stops;\r\n    var i;\r\n    var len;\r\n    var stop;\r\n    if (itemData.g._cmdf || isFirstFrame) {\r\n      stops = itemData.cst;\r\n      var cValues = itemData.g.c;\r\n      len = stops.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        stop = stops[i];\r\n        stop.setAttribute('offset', cValues[i * 4] + '%');\r\n        stop.setAttribute('stop-color', 'rgb(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ')');\r\n      }\r\n    }\r\n    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n      var oValues = itemData.g.o;\r\n      if (itemData.g._collapsable) {\r\n        stops = itemData.cst;\r\n      } else {\r\n        stops = itemData.ost;\r\n      }\r\n      len = stops.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        stop = stops[i];\r\n        if (!itemData.g._collapsable) {\r\n          stop.setAttribute('offset', oValues[i * 2] + '%');\r\n        }\r\n        stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n      }\r\n    }\r\n    if (styleData.t === 1) {\r\n      if (itemData.e._mdf || isFirstFrame) {\r\n        gfill.setAttribute('x2', pt2[0]);\r\n        gfill.setAttribute('y2', pt2[1]);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('x2', pt2[0]);\r\n          itemData.of.setAttribute('y2', pt2[1]);\r\n        }\r\n      }\r\n    } else {\r\n      var rad;\r\n      if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n        rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n        gfill.setAttribute('r', rad);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('r', rad);\r\n        }\r\n      }\r\n      if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n        if (!rad) {\r\n          rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n        }\r\n        var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n        var percent = itemData.h.v;\r\n        if (percent >= 1) {\r\n          percent = 0.99;\r\n        } else if (percent <= -1) {\r\n          percent = -0.99;\r\n        }\r\n        var dist = rad * percent;\r\n        var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n        var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n        gfill.setAttribute('fx', x);\r\n        gfill.setAttribute('fy', y);\r\n        if (hasOpacity && !itemData.g._collapsable) {\r\n          itemData.of.setAttribute('fx', x);\r\n          itemData.of.setAttribute('fy', y);\r\n        }\r\n      }\r\n      // gfill.setAttribute('fy','200');\r\n    }\r\n  }\r\n\r\n  function renderStroke(styleData, itemData, isFirstFrame) {\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n      styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n      styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n    }\r\n    if (itemData.c && (itemData.c._mdf || isFirstFrame)) {\r\n      styleElem.pElem.setAttribute('stroke', 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')');\r\n    }\r\n    if (itemData.o._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n    }\r\n    if (itemData.w._mdf || isFirstFrame) {\r\n      styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n      if (styleElem.msElem) {\r\n        styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n      }\r\n    }\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global Matrix */\r\n\r\nfunction ShapeTransformManager() {\r\n  this.sequences = {};\r\n  this.sequenceList = [];\r\n  this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n  addTransformSequence: function (transforms) {\r\n    var i;\r\n    var len = transforms.length;\r\n    var key = '_';\r\n    for (i = 0; i < len; i += 1) {\r\n      key += transforms[i].transform.key + '_';\r\n    }\r\n    var sequence = this.sequences[key];\r\n    if (!sequence) {\r\n      sequence = {\r\n        transforms: [].concat(transforms),\r\n        finalTransform: new Matrix(),\r\n        _mdf: false,\r\n      };\r\n      this.sequences[key] = sequence;\r\n      this.sequenceList.push(sequence);\r\n    }\r\n    return sequence;\r\n  },\r\n  processSequence: function (sequence, isFirstFrame) {\r\n    var i = 0;\r\n    var len = sequence.transforms.length;\r\n    var _mdf = isFirstFrame;\r\n    while (i < len && !isFirstFrame) {\r\n      if (sequence.transforms[i].transform.mProps._mdf) {\r\n        _mdf = true;\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n    if (_mdf) {\r\n      var props;\r\n      sequence.finalTransform.reset();\r\n      for (i = len - 1; i >= 0; i -= 1) {\r\n        props = sequence.transforms[i].transform.mProps.v.props;\r\n        sequence.finalTransform.transform(props[0], props[1], props[2], props[3], props[4], props[5], props[6], props[7], props[8], props[9], props[10], props[11], props[12], props[13], props[14], props[15]);\r\n      }\r\n    }\r\n    sequence._mdf = _mdf;\r\n  },\r\n  processSequences: function (isFirstFrame) {\r\n    var i;\r\n    var len = this.sequenceList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.processSequence(this.sequenceList[i], isFirstFrame);\r\n    }\r\n  },\r\n  getNewKey: function () {\r\n    this.transform_key_count += 1;\r\n    return '_' + this.transform_key_count;\r\n  },\r\n};\r\n\r\n/* global ShapePropertyFactory, SVGShapeData */\r\n\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n  this.styledShapes = [];\r\n  this.tr = [0, 0, 0, 0, 0, 0];\r\n  var ty = 4;\r\n  if (data.ty === 'rc') {\r\n    ty = 5;\r\n  } else if (data.ty === 'el') {\r\n    ty = 6;\r\n  } else if (data.ty === 'sr') {\r\n    ty = 7;\r\n  }\r\n  this.sh = ShapePropertyFactory.getShapeProp(element, data, ty, element);\r\n  var i;\r\n  var len = styles.length;\r\n  var styledShape;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (!styles[i].closed) {\r\n      styledShape = {\r\n        transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n        trNodes: [],\r\n      };\r\n      this.styledShapes.push(styledShape);\r\n      styles[i].elements.push(styledShape);\r\n    }\r\n  }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\n\r\n/* global LayerExpressionInterface, EffectsExpressionInterface, CompExpressionInterface, ShapeExpressionInterface,\r\nTextExpressionInterface, getBlendMode,createElementID, EffectsManager */\r\n\r\nfunction BaseElement() {\r\n}\r\n\r\nBaseElement.prototype = {\r\n  checkMasks: function () {\r\n    if (!this.data.hasMask) {\r\n      return false;\r\n    }\r\n    var i = 0;\r\n    var len = this.data.masksProperties.length;\r\n    while (i < len) {\r\n      if ((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n        return true;\r\n      }\r\n      i += 1;\r\n    }\r\n    return false;\r\n  },\r\n  initExpressions: function () {\r\n    this.layerInterface = LayerExpressionInterface(this);\r\n    if (this.data.hasMask && this.maskManager) {\r\n      this.layerInterface.registerMaskInterface(this.maskManager);\r\n    }\r\n    var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this, this.layerInterface);\r\n    this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n    if (this.data.ty === 0 || this.data.xt) {\r\n      this.compInterface = CompExpressionInterface(this);\r\n    } else if (this.data.ty === 4) {\r\n      this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData, this.itemsData, this.layerInterface);\r\n      this.layerInterface.content = this.layerInterface.shapeInterface;\r\n    } else if (this.data.ty === 5) {\r\n      this.layerInterface.textInterface = TextExpressionInterface(this);\r\n      this.layerInterface.text = this.layerInterface.textInterface;\r\n    }\r\n  },\r\n  setBlendMode: function () {\r\n    var blendModeValue = getBlendMode(this.data.bm);\r\n    var elem = this.baseElement || this.layerElement;\r\n\r\n    elem.style['mix-blend-mode'] = blendModeValue;\r\n  },\r\n  initBaseData: function (data, globalData, comp) {\r\n    this.globalData = globalData;\r\n    this.comp = comp;\r\n    this.data = data;\r\n    this.layerId = createElementID();\r\n\r\n    // Stretch factor for old animations missing this property.\r\n    if (!this.data.sr) {\r\n      this.data.sr = 1;\r\n    }\r\n    // effects manager\r\n    this.effectsManager = new EffectsManager(this.data, this, this.dynamicProperties);\r\n  },\r\n  getType: function () {\r\n    return this.type;\r\n  },\r\n  sourceRectAtTime: function () {},\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HierarchyElement, FrameElement */\r\n\r\nfunction NullElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.initFrame();\r\n  this.initTransform(data, globalData, comp);\r\n  this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function (num) {\r\n  this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function () {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function () {\r\n  return null;\r\n};\r\n\r\nNullElement.prototype.destroy = function () {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function () {\r\n};\r\n\r\nNullElement.prototype.hide = function () {\r\n};\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement], NullElement);\r\n\r\n/* global filtersFactory, featureSupport, filtersFactory, createElementID, createNS, MaskElement, SVGEffects, locationHref */\r\n\r\nfunction SVGBaseElement() {\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n  initRendererElement: function () {\r\n    this.layerElement = createNS('g');\r\n  },\r\n  createContainerElements: function () {\r\n    this.matteElement = createNS('g');\r\n    this.transformedElement = this.layerElement;\r\n    this.maskedElement = this.layerElement;\r\n    this._sizeChanged = false;\r\n    var layerElementParent = null;\r\n    // If this layer acts as a mask for the following layer\r\n    var filId;\r\n    var fil;\r\n    var gg;\r\n    if (this.data.td) {\r\n      if (this.data.td == 3 || this.data.td == 1) { // eslint-disable-line eqeqeq\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', this.layerId);\r\n        masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha'); // eslint-disable-line eqeqeq\r\n        masker.appendChild(this.layerElement);\r\n        layerElementParent = masker;\r\n        this.globalData.defs.appendChild(masker);\r\n        // This is only for IE and Edge when mask if of type alpha\r\n        if (!featureSupport.maskType && this.data.td == 1) { // eslint-disable-line eqeqeq\r\n          masker.setAttribute('mask-type', 'luminance');\r\n          filId = createElementID();\r\n          fil = filtersFactory.createFilter(filId);\r\n          this.globalData.defs.appendChild(fil);\r\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n          gg = createNS('g');\r\n          gg.appendChild(this.layerElement);\r\n          layerElementParent = gg;\r\n          masker.appendChild(gg);\r\n          gg.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\r\n        }\r\n      } else if (this.data.td == 2) { // eslint-disable-line eqeqeq\r\n        var maskGroup = createNS('mask');\r\n        maskGroup.setAttribute('id', this.layerId);\r\n        maskGroup.setAttribute('mask-type', 'alpha');\r\n        var maskGrouper = createNS('g');\r\n        maskGroup.appendChild(maskGrouper);\r\n        filId = createElementID();\r\n        fil = filtersFactory.createFilter(filId);\r\n        /// /\r\n\r\n        // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n        /* var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix); */\r\n        /// /\r\n        var feCTr = createNS('feComponentTransfer');\r\n        feCTr.setAttribute('in', 'SourceGraphic');\r\n        fil.appendChild(feCTr);\r\n        var feFunc = createNS('feFuncA');\r\n        feFunc.setAttribute('type', 'table');\r\n        feFunc.setAttribute('tableValues', '1.0 0.0');\r\n        feCTr.appendChild(feFunc);\r\n        /// /\r\n        this.globalData.defs.appendChild(fil);\r\n        var alphaRect = createNS('rect');\r\n        alphaRect.setAttribute('width', this.comp.data.w);\r\n        alphaRect.setAttribute('height', this.comp.data.h);\r\n        alphaRect.setAttribute('x', '0');\r\n        alphaRect.setAttribute('y', '0');\r\n        alphaRect.setAttribute('fill', '#ffffff');\r\n        alphaRect.setAttribute('opacity', '0');\r\n        maskGrouper.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\r\n        maskGrouper.appendChild(alphaRect);\r\n        maskGrouper.appendChild(this.layerElement);\r\n        layerElementParent = maskGrouper;\r\n        if (!featureSupport.maskType) {\r\n          maskGroup.setAttribute('mask-type', 'luminance');\r\n          fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n          gg = createNS('g');\r\n          maskGrouper.appendChild(alphaRect);\r\n          gg.appendChild(this.layerElement);\r\n          layerElementParent = gg;\r\n          maskGrouper.appendChild(gg);\r\n        }\r\n        this.globalData.defs.appendChild(maskGroup);\r\n      }\r\n    } else if (this.data.tt) {\r\n      this.matteElement.appendChild(this.layerElement);\r\n      layerElementParent = this.matteElement;\r\n      this.baseElement = this.matteElement;\r\n    } else {\r\n      this.baseElement = this.layerElement;\r\n    }\r\n    if (this.data.ln) {\r\n      this.layerElement.setAttribute('id', this.data.ln);\r\n    }\r\n    if (this.data.cl) {\r\n      this.layerElement.setAttribute('class', this.data.cl);\r\n    }\r\n    // Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n    if (this.data.ty === 0 && !this.data.hd) {\r\n      var cp = createNS('clipPath');\r\n      var pt = createNS('path');\r\n      pt.setAttribute('d', 'M0,0 L' + this.data.w + ',0 L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n      var clipId = createElementID();\r\n      cp.setAttribute('id', clipId);\r\n      cp.appendChild(pt);\r\n      this.globalData.defs.appendChild(cp);\r\n\r\n      if (this.checkMasks()) {\r\n        var cpGroup = createNS('g');\r\n        cpGroup.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\r\n        cpGroup.appendChild(this.layerElement);\r\n        this.transformedElement = cpGroup;\r\n        if (layerElementParent) {\r\n          layerElementParent.appendChild(this.transformedElement);\r\n        } else {\r\n          this.baseElement = this.transformedElement;\r\n        }\r\n      } else {\r\n        this.layerElement.setAttribute('clip-path', 'url(' + locationHref + '#' + clipId + ')');\r\n      }\r\n    }\r\n    if (this.data.bm !== 0) {\r\n      this.setBlendMode();\r\n    }\r\n  },\r\n  renderElement: function () {\r\n    if (this.finalTransform._matMdf) {\r\n      this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n    }\r\n    if (this.finalTransform._opMdf) {\r\n      this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n    }\r\n  },\r\n  destroyBaseElement: function () {\r\n    this.layerElement = null;\r\n    this.matteElement = null;\r\n    this.maskManager.destroy();\r\n  },\r\n  getBaseElement: function () {\r\n    if (this.data.hd) {\r\n      return null;\r\n    }\r\n    return this.baseElement;\r\n  },\r\n  createRenderableComponents: function () {\r\n    this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    this.renderableEffectsManager = new SVGEffects(this);\r\n  },\r\n  setMatte: function (id) {\r\n    if (!this.matteElement) {\r\n      return;\r\n    }\r\n    this.matteElement.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\r\n  },\r\n};\r\n\r\n/* global ProcessedElement */\r\n\r\nfunction IShapeElement() {\r\n}\r\n\r\nIShapeElement.prototype = {\r\n  addShapeToModifiers: function (data) {\r\n    var i;\r\n    var len = this.shapeModifiers.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapeModifiers[i].addShape(data);\r\n    }\r\n  },\r\n  isShapeInAnimatedModifiers: function (data) {\r\n    var i = 0;\r\n    var len = this.shapeModifiers.length;\r\n    while (i < len) {\r\n      if (this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n  renderModifiers: function () {\r\n    if (!this.shapeModifiers.length) {\r\n      return;\r\n    }\r\n    var i;\r\n    var len = this.shapes.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.shapes[i].sh.reset();\r\n    }\r\n\r\n    len = this.shapeModifiers.length;\r\n    var shouldBreakProcess;\r\n    for (i = len - 1; i >= 0; i -= 1) {\r\n      shouldBreakProcess = this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n      // workaround to fix cases where a repeater resets the shape so the following processes get called twice\r\n      // TODO: find a better solution for this\r\n      if (shouldBreakProcess) {\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  lcEnum: {\r\n    1: 'butt',\r\n    2: 'round',\r\n    3: 'square',\r\n  },\r\n  ljEnum: {\r\n    1: 'miter',\r\n    2: 'round',\r\n    3: 'bevel',\r\n  },\r\n  searchProcessedElement: function (elem) {\r\n    var elements = this.processedElements;\r\n    var i = 0;\r\n    var len = elements.length;\r\n    while (i < len) {\r\n      if (elements[i].elem === elem) {\r\n        return elements[i].pos;\r\n      }\r\n      i += 1;\r\n    }\r\n    return 0;\r\n  },\r\n  addProcessedElement: function (elem, pos) {\r\n    var elements = this.processedElements;\r\n    var i = elements.length;\r\n    while (i) {\r\n      i -= 1;\r\n      if (elements[i].elem === elem) {\r\n        elements[i].pos = pos;\r\n        return;\r\n      }\r\n    }\r\n    elements.push(new ProcessedElement(elem, pos));\r\n  },\r\n  prepareFrame: function (num) {\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n  },\r\n};\r\n\r\n/* global TextProperty, TextAnimatorProperty, buildShapeString, LetterProps */\r\n\r\nfunction ITextElement() {\r\n}\r\n\r\nITextElement.prototype.initElement = function (data, globalData, comp) {\r\n  this.lettersChangedFlag = true;\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n  this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n  this.initTransform(data, globalData, comp);\r\n  this.initHierarchy();\r\n  this.initRenderable();\r\n  this.initRendererElement();\r\n  this.createContainerElements();\r\n  this.createRenderableComponents();\r\n  this.createContent();\r\n  this.hide();\r\n  this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function (num) {\r\n  this._mdf = false;\r\n  this.prepareRenderableFrame(num);\r\n  this.prepareProperties(num, this.isInRange);\r\n  if (this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n    this.buildNewText();\r\n    this.textProperty._isFirstFrame = false;\r\n    this.textProperty._mdf = false;\r\n  }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function (matrixHelper, shapes) {\r\n  var j;\r\n  var jLen = shapes.length;\r\n  var pathNodes;\r\n  var shapeStr = '';\r\n  for (j = 0; j < jLen; j += 1) {\r\n    pathNodes = shapes[j].ks.k;\r\n    shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n  }\r\n  return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function (newData, index) {\r\n  this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function (_canResize) {\r\n  this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function (_fontSize) {\r\n  this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function (documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n  if (documentData.ps) {\r\n    matrixHelper.translate(documentData.ps[0], documentData.ps[1] + documentData.ascent, 0);\r\n  }\r\n  matrixHelper.translate(0, -documentData.ls, 0);\r\n  switch (documentData.j) {\r\n    case 1:\r\n      matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]), 0, 0);\r\n      break;\r\n    case 2:\r\n      matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]) / 2, 0, 0);\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\nITextElement.prototype.buildColor = function (colorData) {\r\n  return 'rgb(' + Math.round(colorData[0] * 255) + ',' + Math.round(colorData[1] * 255) + ',' + Math.round(colorData[2] * 255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function () {\r\n\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement */\r\n\r\nfunction ICompElement() {}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function (data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.initTransform(data, globalData, comp);\r\n  this.initRenderable();\r\n  this.initHierarchy();\r\n  this.initRendererElement();\r\n  this.createContainerElements();\r\n  this.createRenderableComponents();\r\n  if (this.data.xt || !globalData.progressiveLoad) {\r\n    this.buildAllItems();\r\n  }\r\n  this.hide();\r\n};\r\n\r\n/* ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n}; */\r\n\r\nICompElement.prototype.prepareFrame = function (num) {\r\n  this._mdf = false;\r\n  this.prepareRenderableFrame(num);\r\n  this.prepareProperties(num, this.isInRange);\r\n  if (!this.isInRange && !this.data.xt) {\r\n    return;\r\n  }\r\n\r\n  if (!this.tm._placeholder) {\r\n    var timeRemapped = this.tm.v;\r\n    if (timeRemapped === this.data.op) {\r\n      timeRemapped = this.data.op - 1;\r\n    }\r\n    this.renderedFrame = timeRemapped;\r\n  } else {\r\n    this.renderedFrame = num / this.data.sr;\r\n  }\r\n  var i;\r\n  var len = this.elements.length;\r\n  if (!this.completeLayers) {\r\n    this.checkLayers(this.renderedFrame);\r\n  }\r\n  // This iteration needs to be backwards because of how expressions connect between each other\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n      if (this.elements[i]._mdf) {\r\n        this._mdf = true;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].renderFrame();\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.setElements = function (elems) {\r\n  this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function () {\r\n  return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n};\r\n\r\nICompElement.prototype.destroy = function () {\r\n  this.destroyElements();\r\n  this.destroyBaseElement();\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, createNS */\r\n\r\nfunction IImageElement(data, globalData, comp) {\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.initElement(data, globalData, comp);\r\n  this.sourceRect = {\r\n    top: 0, left: 0, width: this.assetData.w, height: this.assetData.h,\r\n  };\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function () {\r\n  var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n  this.innerElem = createNS('image');\r\n  this.innerElem.setAttribute('width', this.assetData.w + 'px');\r\n  this.innerElem.setAttribute('height', this.assetData.h + 'px');\r\n  this.innerElem.setAttribute('preserveAspectRatio', this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n  this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\r\n\r\n  this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function () {\r\n  return this.sourceRect;\r\n};\r\n\r\n/* global extendPrototype, IImageElement, createNS */\r\n\r\nfunction ISolidElement(data, globalData, comp) {\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function () {\r\n  var rect = createNS('rect');\r\n  /// /rect.style.width = this.data.sw;\r\n  /// /rect.style.height = this.data.sh;\r\n  /// /rect.style.fill = this.data.sc;\r\n  rect.setAttribute('width', this.data.sw);\r\n  rect.setAttribute('height', this.data.sh);\r\n  rect.setAttribute('fill', this.data.sc);\r\n  this.layerElement.appendChild(rect);\r\n};\r\n\r\n/* global PropertyFactory, extendPrototype, RenderableElement, BaseElement, FrameElement */\r\n\r\nfunction AudioElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initRenderable();\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.initBaseData(data, globalData, comp);\r\n  this._isPlaying = false;\r\n  this._canPlay = false;\r\n  var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n  this.audio = this.globalData.audioController.createAudio(assetPath);\r\n  this._currentTime = 0;\r\n  this.globalData.audioController.addAudio(this);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nAudioElement.prototype.prepareFrame = function (num) {\r\n  this.prepareRenderableFrame(num, true);\r\n  this.prepareProperties(num, true);\r\n  if (!this.tm._placeholder) {\r\n    var timeRemapped = this.tm.v;\r\n    this._currentTime = timeRemapped;\r\n  } else {\r\n    this._currentTime = num / this.data.sr;\r\n  }\r\n};\r\n\r\nextendPrototype([RenderableElement, BaseElement, FrameElement], AudioElement);\r\n\r\nAudioElement.prototype.renderFrame = function () {\r\n  if (this.isInRange && this._canPlay) {\r\n    if (!this._isPlaying) {\r\n      this.audio.play();\r\n      this.audio.seek(this._currentTime / this.globalData.frameRate);\r\n      this._isPlaying = true;\r\n    } else if (!this.audio.playing()\r\n      || Math.abs(this._currentTime / this.globalData.frameRate - this.audio.seek()) > 0.1\r\n    ) {\r\n      this.audio.seek(this._currentTime / this.globalData.frameRate);\r\n    }\r\n  }\r\n};\r\n\r\nAudioElement.prototype.show = function () {\r\n  // this.audio.play()\r\n};\r\n\r\nAudioElement.prototype.hide = function () {\r\n  this.audio.pause();\r\n  this._isPlaying = false;\r\n};\r\n\r\nAudioElement.prototype.pause = function () {\r\n  this.audio.pause();\r\n  this._isPlaying = false;\r\n  this._canPlay = false;\r\n};\r\n\r\nAudioElement.prototype.resume = function () {\r\n  this._canPlay = true;\r\n};\r\n\r\nAudioElement.prototype.setRate = function (rateValue) {\r\n  this.audio.rate(rateValue);\r\n};\r\n\r\nAudioElement.prototype.volume = function (volumeValue) {\r\n  this.audio.volume(volumeValue);\r\n};\r\n\r\nAudioElement.prototype.getBaseElement = function () {\r\n  return null;\r\n};\r\n\r\nAudioElement.prototype.destroy = function () {\r\n};\r\n\r\nAudioElement.prototype.sourceRectAtTime = function () {\r\n};\r\n\r\nAudioElement.prototype.initExpressions = function () {\r\n};\r\n\r\n/* global extendPrototype, RenderableElement, BaseElement, FrameElement, FootageInterface */\r\n\r\nfunction FootageElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initRenderable();\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.footageData = globalData.imageLoader.getAsset(this.assetData);\r\n  this.initBaseData(data, globalData, comp);\r\n}\r\n\r\nFootageElement.prototype.prepareFrame = function () {\r\n};\r\n\r\nextendPrototype([RenderableElement, BaseElement, FrameElement], FootageElement);\r\n\r\nFootageElement.prototype.getBaseElement = function () {\r\n  return null;\r\n};\r\n\r\nFootageElement.prototype.renderFrame = function () {\r\n};\r\n\r\nFootageElement.prototype.destroy = function () {\r\n};\r\n\r\nFootageElement.prototype.initExpressions = function () {\r\n  this.layerInterface = FootageInterface(this);\r\n};\r\n\r\nFootageElement.prototype.getFootageData = function () {\r\n  return this.footageData;\r\n};\r\n\r\n/* global createSizedArray, PropertyFactory, extendPrototype, SVGRenderer, ICompElement, SVGBaseElement */\r\n\r\nfunction SVGCompElement(data, globalData, comp) {\r\n  this.layers = data.layers;\r\n  this.supports3d = true;\r\n  this.completeLayers = false;\r\n  this.pendingElements = [];\r\n  this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n  // this.layerElement = createNS('g');\r\n  this.initElement(data, globalData, comp);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement,\r\nRenderableDOMElement, ITextElement, createSizedArray, createNS */\r\n\r\nfunction SVGTextLottieElement(data, globalData, comp) {\r\n  this.textSpans = [];\r\n  this.renderType = 'svg';\r\n  this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], SVGTextLottieElement);\r\n\r\nSVGTextLottieElement.prototype.createContent = function () {\r\n  if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n    this.textContainer = createNS('text');\r\n  }\r\n};\r\n\r\nSVGTextLottieElement.prototype.buildTextContents = function (textArray) {\r\n  var i = 0;\r\n  var len = textArray.length;\r\n  var textContents = [];\r\n  var currentTextContent = '';\r\n  while (i < len) {\r\n    if (textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n      textContents.push(currentTextContent);\r\n      currentTextContent = '';\r\n    } else {\r\n      currentTextContent += textArray[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  textContents.push(currentTextContent);\r\n  return textContents;\r\n};\r\n\r\nSVGTextLottieElement.prototype.buildNewText = function () {\r\n  var i;\r\n  var len;\r\n\r\n  var documentData = this.textProperty.currentData;\r\n  this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n  if (documentData.fc) {\r\n    this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n  } else {\r\n    this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n  }\r\n  if (documentData.sc) {\r\n    this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n    this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n  }\r\n  this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n  var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n  if (fontData.fClass) {\r\n    this.layerElement.setAttribute('class', fontData.fClass);\r\n  } else {\r\n    this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n    var fWeight = documentData.fWeight;\r\n    var fStyle = documentData.fStyle;\r\n    this.layerElement.setAttribute('font-style', fStyle);\r\n    this.layerElement.setAttribute('font-weight', fWeight);\r\n  }\r\n  this.layerElement.setAttribute('aria-label', documentData.t);\r\n\r\n  var letters = documentData.l || [];\r\n  var usesGlyphs = !!this.globalData.fontManager.chars;\r\n  len = letters.length;\r\n\r\n  var tSpan;\r\n  var matrixHelper = this.mHelper;\r\n  var shapes;\r\n  var shapeStr = '';\r\n  var singleShape = this.data.singleShape;\r\n  var xPos = 0;\r\n  var yPos = 0;\r\n  var firstLine = true;\r\n  var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\r\n  if (singleShape && !usesGlyphs && !documentData.sz) {\r\n    var tElement = this.textContainer;\r\n    var justify = 'start';\r\n    switch (documentData.j) {\r\n      case 1:\r\n        justify = 'end';\r\n        break;\r\n      case 2:\r\n        justify = 'middle';\r\n        break;\r\n      default:\r\n        justify = 'start';\r\n        break;\r\n    }\r\n    tElement.setAttribute('text-anchor', justify);\r\n    tElement.setAttribute('letter-spacing', trackingOffset);\r\n    var textContent = this.buildTextContents(documentData.finalText);\r\n    len = textContent.length;\r\n    yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      tSpan = this.textSpans[i] || createNS('tspan');\r\n      tSpan.textContent = textContent[i];\r\n      tSpan.setAttribute('x', 0);\r\n      tSpan.setAttribute('y', yPos);\r\n      tSpan.style.display = 'inherit';\r\n      tElement.appendChild(tSpan);\r\n      this.textSpans[i] = tSpan;\r\n      yPos += documentData.finalLineHeight;\r\n    }\r\n\r\n    this.layerElement.appendChild(tElement);\r\n  } else {\r\n    var cachedSpansLength = this.textSpans.length;\r\n    var shapeData;\r\n    var charData;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (!usesGlyphs || !singleShape || i === 0) {\r\n        tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs ? 'path' : 'text');\r\n        if (cachedSpansLength <= i) {\r\n          tSpan.setAttribute('stroke-linecap', 'butt');\r\n          tSpan.setAttribute('stroke-linejoin', 'round');\r\n          tSpan.setAttribute('stroke-miterlimit', '4');\r\n          this.textSpans[i] = tSpan;\r\n          this.layerElement.appendChild(tSpan);\r\n        }\r\n        tSpan.style.display = 'inherit';\r\n      }\r\n\r\n      matrixHelper.reset();\r\n      matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n      if (singleShape) {\r\n        if (letters[i].n) {\r\n          xPos = -trackingOffset;\r\n          yPos += documentData.yOffset;\r\n          yPos += firstLine ? 1 : 0;\r\n          firstLine = false;\r\n        }\r\n        this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        xPos += letters[i].l || 0;\r\n        // xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n        xPos += trackingOffset;\r\n      }\r\n      if (usesGlyphs) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = (charData && charData.data) || {};\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        if (!singleShape) {\r\n          tSpan.setAttribute('d', this.createPathShape(matrixHelper, shapes));\r\n        } else {\r\n          shapeStr += this.createPathShape(matrixHelper, shapes);\r\n        }\r\n      } else {\r\n        if (singleShape) {\r\n          tSpan.setAttribute('transform', 'translate(' + matrixHelper.props[12] + ',' + matrixHelper.props[13] + ')');\r\n        }\r\n        tSpan.textContent = letters[i].val;\r\n        tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\r\n      }\r\n      //\r\n    }\r\n    if (singleShape && tSpan) {\r\n      tSpan.setAttribute('d', shapeStr);\r\n    }\r\n  }\r\n  while (i < this.textSpans.length) {\r\n    this.textSpans[i].style.display = 'none';\r\n    i += 1;\r\n  }\r\n\r\n  this._sizeChanged = true;\r\n};\r\n\r\nSVGTextLottieElement.prototype.sourceRectAtTime = function () {\r\n  this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n  this.renderInnerContent();\r\n  if (this._sizeChanged) {\r\n    this._sizeChanged = false;\r\n    var textBox = this.layerElement.getBBox();\r\n    this.bbox = {\r\n      top: textBox.y,\r\n      left: textBox.x,\r\n      width: textBox.width,\r\n      height: textBox.height,\r\n    };\r\n  }\r\n  return this.bbox;\r\n};\r\n\r\nSVGTextLottieElement.prototype.renderInnerContent = function () {\r\n  if (!this.data.singleShape) {\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if (this.lettersChangedFlag || this.textAnimator.lettersChangedFlag) {\r\n      this._sizeChanged = true;\r\n      var i;\r\n      var len;\r\n      var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n      var letters = this.textProperty.currentData.l;\r\n\r\n      len = letters.length;\r\n      var renderedLetter;\r\n      var textSpan;\r\n      for (i = 0; i < len; i += 1) {\r\n        if (!letters[i].n) {\r\n          renderedLetter = renderedLetters[i];\r\n          textSpan = this.textSpans[i];\r\n          if (renderedLetter._mdf.m) {\r\n            textSpan.setAttribute('transform', renderedLetter.m);\r\n          }\r\n          if (renderedLetter._mdf.o) {\r\n            textSpan.setAttribute('opacity', renderedLetter.o);\r\n          }\r\n          if (renderedLetter._mdf.sw) {\r\n            textSpan.setAttribute('stroke-width', renderedLetter.sw);\r\n          }\r\n          if (renderedLetter._mdf.sc) {\r\n            textSpan.setAttribute('stroke', renderedLetter.sc);\r\n          }\r\n          if (renderedLetter._mdf.fc) {\r\n            textSpan.setAttribute('fill', renderedLetter.fc);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement,\r\nFrameElement, RenderableDOMElement, Matrix, SVGStyleData, SVGStrokeStyleData, SVGFillStyleData,\r\nSVGGradientFillStyleData, SVGGradientStrokeStyleData, locationHref, getBlendMode, ShapeGroupData,\r\nTransformPropertyFactory, SVGTransformData, ShapePropertyFactory, SVGShapeData, SVGElementsRenderer, ShapeModifiers */\r\n\r\nfunction SVGShapeElement(data, globalData, comp) {\r\n  // List of drawable elements\r\n  this.shapes = [];\r\n  // Full shape data\r\n  this.shapesData = data.shapes;\r\n  // List of styles that will be applied to shapes\r\n  this.stylesList = [];\r\n  // List of modifiers that will be applied to shapes\r\n  this.shapeModifiers = [];\r\n  // List of items in shape tree\r\n  this.itemsData = [];\r\n  // List of items in previous shape tree\r\n  this.processedElements = [];\r\n  // List of animated components\r\n  this.animatedContents = [];\r\n  this.initElement(data, globalData, comp);\r\n  // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n  // List of elements that have been created\r\n  this.prevViewData = [];\r\n  // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, SVGBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function () {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function () {};\r\n\r\nSVGShapeElement.prototype.createContent = function () {\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\r\n  this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function () {\r\n  var i;\r\n  var len = this.shapes.length;\r\n  var shape;\r\n  var j;\r\n  var jLen = this.stylesList.length;\r\n  var style;\r\n  var tempShapes = [];\r\n  var areAnimated = false;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    style = this.stylesList[j];\r\n    areAnimated = false;\r\n    tempShapes.length = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      shape = this.shapes[i];\r\n      if (shape.styles.indexOf(style) !== -1) {\r\n        tempShapes.push(shape);\r\n        areAnimated = shape._isAnimated || areAnimated;\r\n      }\r\n    }\r\n    if (tempShapes.length > 1 && areAnimated) {\r\n      this.setShapesAsAnimated(tempShapes);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function (shapes) {\r\n  var i;\r\n  var len = shapes.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    shapes[i].setAsAnimated();\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.createStyleElement = function (data, level) {\r\n  // TODO: prevent drawing of hidden styles\r\n  var elementData;\r\n  var styleOb = new SVGStyleData(data, level);\r\n\r\n  var pathElement = styleOb.pElem;\r\n  if (data.ty === 'st') {\r\n    elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n  } else if (data.ty === 'fl') {\r\n    elementData = new SVGFillStyleData(this, data, styleOb);\r\n  } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n    var GradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n    elementData = new GradientConstructor(this, data, styleOb);\r\n    this.globalData.defs.appendChild(elementData.gf);\r\n    if (elementData.maskId) {\r\n      this.globalData.defs.appendChild(elementData.ms);\r\n      this.globalData.defs.appendChild(elementData.of);\r\n      pathElement.setAttribute('mask', 'url(' + locationHref + '#' + elementData.maskId + ')');\r\n    }\r\n  }\r\n\r\n  if (data.ty === 'st' || data.ty === 'gs') {\r\n    pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n    pathElement.setAttribute('stroke-linejoin', this.ljEnum[data.lj] || 'round');\r\n    pathElement.setAttribute('fill-opacity', '0');\r\n    if (data.lj === 1) {\r\n      pathElement.setAttribute('stroke-miterlimit', data.ml);\r\n    }\r\n  }\r\n\r\n  if (data.r === 2) {\r\n    pathElement.setAttribute('fill-rule', 'evenodd');\r\n  }\r\n\r\n  if (data.ln) {\r\n    pathElement.setAttribute('id', data.ln);\r\n  }\r\n  if (data.cl) {\r\n    pathElement.setAttribute('class', data.cl);\r\n  }\r\n  if (data.bm) {\r\n    pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n  }\r\n  this.stylesList.push(styleOb);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function (data) {\r\n  var elementData = new ShapeGroupData();\r\n  if (data.ln) {\r\n    elementData.gr.setAttribute('id', data.ln);\r\n  }\r\n  if (data.cl) {\r\n    elementData.gr.setAttribute('class', data.cl);\r\n  }\r\n  if (data.bm) {\r\n    elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n  }\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function (data, container) {\r\n  var transformProperty = TransformPropertyFactory.getTransformProperty(this, data, this);\r\n  var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function (data, ownTransformers, level) {\r\n  var ty = 4;\r\n  if (data.ty === 'rc') {\r\n    ty = 5;\r\n  } else if (data.ty === 'el') {\r\n    ty = 6;\r\n  } else if (data.ty === 'sr') {\r\n    ty = 7;\r\n  }\r\n  var shapeProperty = ShapePropertyFactory.getShapeProp(this, data, ty, this);\r\n  var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n  this.shapes.push(elementData);\r\n  this.addShapeToModifiers(elementData);\r\n  this.addToAnimatedContents(data, elementData);\r\n  return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function (data, element) {\r\n  var i = 0;\r\n  var len = this.animatedContents.length;\r\n  while (i < len) {\r\n    if (this.animatedContents[i].element === element) {\r\n      return;\r\n    }\r\n    i += 1;\r\n  }\r\n  this.animatedContents.push({\r\n    fn: SVGElementsRenderer.createRenderFunction(data),\r\n    element: element,\r\n    data: data,\r\n  });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function (elementData) {\r\n  var arr = elementData.styles;\r\n  var j;\r\n  var jLen = this.stylesList.length;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    if (!this.stylesList[j].closed) {\r\n      arr.push(this.stylesList[j]);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function () {\r\n  this._isFirstFrame = true;\r\n  var i;\r\n  var len = this.itemsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.prevViewData[i] = this.itemsData[i];\r\n  }\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.layerElement, 0, [], true);\r\n  this.filterUniqueShapes();\r\n  len = this.dynamicProperties.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.dynamicProperties[i].getValue();\r\n  }\r\n  this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, container, level, transformers, render) {\r\n  var ownTransformers = [].concat(transformers);\r\n  var i;\r\n  var len = arr.length - 1;\r\n  var j;\r\n  var jLen;\r\n  var ownStyles = [];\r\n  var ownModifiers = [];\r\n  var currentTransform;\r\n  var modifier;\r\n  var processedPos;\r\n  for (i = len; i >= 0; i -= 1) {\r\n    processedPos = this.searchProcessedElement(arr[i]);\r\n    if (!processedPos) {\r\n      arr[i]._render = render;\r\n    } else {\r\n      itemsData[i] = prevViewData[processedPos - 1];\r\n    }\r\n    if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createStyleElement(arr[i], level);\r\n      } else {\r\n        itemsData[i].style.closed = false;\r\n      }\r\n      if (arr[i]._render) {\r\n        container.appendChild(itemsData[i].style.pElem);\r\n      }\r\n      ownStyles.push(itemsData[i].style);\r\n    } else if (arr[i].ty === 'gr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createGroupElement(arr[i]);\r\n      } else {\r\n        jLen = itemsData[i].it.length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n        }\r\n      }\r\n      this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, itemsData[i].gr, level + 1, ownTransformers, render);\r\n      if (arr[i]._render) {\r\n        container.appendChild(itemsData[i].gr);\r\n      }\r\n    } else if (arr[i].ty === 'tr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createTransformElement(arr[i], container);\r\n      }\r\n      currentTransform = itemsData[i].transform;\r\n      ownTransformers.push(currentTransform);\r\n    } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n      }\r\n      this.setElementStyles(itemsData[i]);\r\n    } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'ms' || arr[i].ty === 'pb') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        modifier.init(this, arr[i]);\r\n        itemsData[i] = modifier;\r\n        this.shapeModifiers.push(modifier);\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = false;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    } else if (arr[i].ty === 'rp') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        itemsData[i] = modifier;\r\n        modifier.init(this, arr, i, itemsData);\r\n        this.shapeModifiers.push(modifier);\r\n        render = false;\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = true;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    }\r\n    this.addProcessedElement(arr[i], i + 1);\r\n  }\r\n  len = ownStyles.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    ownStyles[i].closed = true;\r\n  }\r\n  len = ownModifiers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    ownModifiers[i].closed = true;\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function () {\r\n  this.renderModifiers();\r\n  var i;\r\n  var len = this.stylesList.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.stylesList[i].reset();\r\n  }\r\n  this.renderShape();\r\n\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n      if (this.stylesList[i].msElem) {\r\n        this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n        // Adding M0 0 fixes same mask bug on all browsers\r\n        this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n      }\r\n      this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function () {\r\n  var i;\r\n  var len = this.animatedContents.length;\r\n  var animatedContent;\r\n  for (i = 0; i < len; i += 1) {\r\n    animatedContent = this.animatedContents[i];\r\n    if ((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n      animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n    }\r\n  }\r\n};\r\n\r\nSVGShapeElement.prototype.destroy = function () {\r\n  this.destroyBaseElement();\r\n  this.shapesData = null;\r\n  this.itemsData = null;\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGTintFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\r\n  feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f1');\r\n  filter.appendChild(feColorMatrix);\r\n  feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n  feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f2');\r\n  filter.appendChild(feColorMatrix);\r\n  this.matrixFilter = feColorMatrix;\r\n  if (filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k) {\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in', 'SourceGraphic');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in', 'f2');\r\n    feMerge.appendChild(feMergeNode);\r\n  }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var colorBlack = this.filterManager.effectElements[0].p.v;\r\n    var colorWhite = this.filterManager.effectElements[1].p.v;\r\n    var opacity = this.filterManager.effectElements[2].p.v / 100;\r\n    this.matrixFilter.setAttribute('values', (colorWhite[0] - colorBlack[0]) + ' 0 0 0 ' + colorBlack[0] + ' ' + (colorWhite[1] - colorBlack[1]) + ' 0 0 0 ' + colorBlack[1] + ' ' + (colorWhite[2] - colorBlack[2]) + ' 0 0 0 ' + colorBlack[2] + ' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGFillFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n  feColorMatrix.setAttribute('values', '1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n  filter.appendChild(feColorMatrix);\r\n  this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var color = this.filterManager.effectElements[2].p.v;\r\n    var opacity = this.filterManager.effectElements[6].p.v;\r\n    this.matrixFilter.setAttribute('values', '0 0 0 0 ' + color[0] + ' 0 0 0 0 ' + color[1] + ' 0 0 0 0 ' + color[2] + ' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGGaussianBlurEffect(filter, filterManager) {\r\n  // Outset the filter region by 100% on all sides to accommodate blur expansion.\r\n  filter.setAttribute('x', '-100%');\r\n  filter.setAttribute('y', '-100%');\r\n  filter.setAttribute('width', '300%');\r\n  filter.setAttribute('height', '300%');\r\n\r\n  this.filterManager = filterManager;\r\n  var feGaussianBlur = createNS('feGaussianBlur');\r\n  filter.appendChild(feGaussianBlur);\r\n  this.feGaussianBlur = feGaussianBlur;\r\n}\r\n\r\nSVGGaussianBlurEffect.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    // Empirical value, matching AE's blur appearance.\r\n    var kBlurrinessToSigma = 0.3;\r\n    var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;\r\n\r\n    // Dimensions mapping:\r\n    //\r\n    //   1 -> horizontal & vertical\r\n    //   2 -> horizontal only\r\n    //   3 -> vertical only\r\n    //\r\n    var dimensions = this.filterManager.effectElements[1].p.v;\r\n    var sigmaX = (dimensions == 3) ? 0 : sigma; // eslint-disable-line eqeqeq\r\n    var sigmaY = (dimensions == 2) ? 0 : sigma; // eslint-disable-line eqeqeq\r\n\r\n    this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + ' ' + sigmaY);\r\n\r\n    // Repeat edges mapping:\r\n    //\r\n    //   0 -> off -> duplicate\r\n    //   1 -> on  -> wrap\r\n    var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate'; // eslint-disable-line eqeqeq\r\n    this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\r\n  }\r\n};\r\n\r\n/* global createNS, createElementID, locationHref, bmFloor */\r\n\r\nfunction SVGStrokeEffect(elem, filterManager) {\r\n  this.initialized = false;\r\n  this.filterManager = filterManager;\r\n  this.elem = elem;\r\n  this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function () {\r\n  var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n  var path;\r\n  var groupPath;\r\n  var i;\r\n  var len;\r\n  if (this.filterManager.effectElements[1].p.v === 1) {\r\n    len = this.elem.maskManager.masksProperties.length;\r\n    i = 0;\r\n  } else {\r\n    i = this.filterManager.effectElements[0].p.v - 1;\r\n    len = i + 1;\r\n  }\r\n  groupPath = createNS('g');\r\n  groupPath.setAttribute('fill', 'none');\r\n  groupPath.setAttribute('stroke-linecap', 'round');\r\n  groupPath.setAttribute('stroke-dashoffset', 1);\r\n  for (i; i < len; i += 1) {\r\n    path = createNS('path');\r\n    groupPath.appendChild(path);\r\n    this.paths.push({ p: path, m: i });\r\n  }\r\n  if (this.filterManager.effectElements[10].p.v === 3) {\r\n    var mask = createNS('mask');\r\n    var id = createElementID();\r\n    mask.setAttribute('id', id);\r\n    mask.setAttribute('mask-type', 'alpha');\r\n    mask.appendChild(groupPath);\r\n    this.elem.globalData.defs.appendChild(mask);\r\n    var g = createNS('g');\r\n    g.setAttribute('mask', 'url(' + locationHref + '#' + id + ')');\r\n    while (elemChildren[0]) {\r\n      g.appendChild(elemChildren[0]);\r\n    }\r\n    this.elem.layerElement.appendChild(g);\r\n    this.masker = mask;\r\n    groupPath.setAttribute('stroke', '#fff');\r\n  } else if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\r\n    if (this.filterManager.effectElements[10].p.v === 2) {\r\n      elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n      while (elemChildren.length) {\r\n        this.elem.layerElement.removeChild(elemChildren[0]);\r\n      }\r\n    }\r\n    this.elem.layerElement.appendChild(groupPath);\r\n    this.elem.layerElement.removeAttribute('mask');\r\n    groupPath.setAttribute('stroke', '#fff');\r\n  }\r\n  this.initialized = true;\r\n  this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function (forceRender) {\r\n  if (!this.initialized) {\r\n    this.initialize();\r\n  }\r\n  var i;\r\n  var len = this.paths.length;\r\n  var mask;\r\n  var path;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.paths[i].m !== -1) {\r\n      mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n      path = this.paths[i].p;\r\n      if (forceRender || this.filterManager._mdf || mask.prop._mdf) {\r\n        path.setAttribute('d', mask.lastPath);\r\n      }\r\n      if (forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf) {\r\n        var dasharrayValue;\r\n        if (this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100) {\r\n          var s = Math.min(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\r\n          var e = Math.max(this.filterManager.effectElements[7].p.v, this.filterManager.effectElements[8].p.v) * 0.01;\r\n          var l = path.getTotalLength();\r\n          dasharrayValue = '0 0 0 ' + l * s + ' ';\r\n          var lineLength = l * (e - s);\r\n          var segment = 1 + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\r\n          var units = Math.floor(lineLength / segment);\r\n          var j;\r\n          for (j = 0; j < units; j += 1) {\r\n            dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01 + ' ';\r\n          }\r\n          dasharrayValue += '0 ' + l * 10 + ' 0 0';\r\n        } else {\r\n          dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v * 2 * this.filterManager.effectElements[9].p.v * 0.01;\r\n        }\r\n        path.setAttribute('stroke-dasharray', dasharrayValue);\r\n      }\r\n    }\r\n  }\r\n  if (forceRender || this.filterManager.effectElements[4].p._mdf) {\r\n    this.pathMasker.setAttribute('stroke-width', this.filterManager.effectElements[4].p.v * 2);\r\n  }\r\n\r\n  if (forceRender || this.filterManager.effectElements[6].p._mdf) {\r\n    this.pathMasker.setAttribute('opacity', this.filterManager.effectElements[6].p.v);\r\n  }\r\n  if (this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2) {\r\n    if (forceRender || this.filterManager.effectElements[3].p._mdf) {\r\n      var color = this.filterManager.effectElements[3].p.v;\r\n      this.pathMasker.setAttribute('stroke', 'rgb(' + bmFloor(color[0] * 255) + ',' + bmFloor(color[1] * 255) + ',' + bmFloor(color[2] * 255) + ')');\r\n    }\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGTritoneFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var feColorMatrix = createNS('feColorMatrix');\r\n  feColorMatrix.setAttribute('type', 'matrix');\r\n  feColorMatrix.setAttribute('color-interpolation-filters', 'linearRGB');\r\n  feColorMatrix.setAttribute('values', '0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n  feColorMatrix.setAttribute('result', 'f1');\r\n  filter.appendChild(feColorMatrix);\r\n  var feComponentTransfer = createNS('feComponentTransfer');\r\n  feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n  filter.appendChild(feComponentTransfer);\r\n  this.matrixFilter = feComponentTransfer;\r\n  var feFuncR = createNS('feFuncR');\r\n  feFuncR.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncR);\r\n  this.feFuncR = feFuncR;\r\n  var feFuncG = createNS('feFuncG');\r\n  feFuncG.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncG);\r\n  this.feFuncG = feFuncG;\r\n  var feFuncB = createNS('feFuncB');\r\n  feFuncB.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFuncB);\r\n  this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var color1 = this.filterManager.effectElements[0].p.v;\r\n    var color2 = this.filterManager.effectElements[1].p.v;\r\n    var color3 = this.filterManager.effectElements[2].p.v;\r\n    var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n    var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n    var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n    this.feFuncR.setAttribute('tableValues', tableR);\r\n    this.feFuncG.setAttribute('tableValues', tableG);\r\n    this.feFuncB.setAttribute('tableValues', tableB);\r\n    // var opacity = this.filterManager.effectElements[2].p.v/100;\r\n    // this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n  }\r\n};\r\n\r\n/* global createNS */\r\n\r\nfunction SVGProLevelsFilter(filter, filterManager) {\r\n  this.filterManager = filterManager;\r\n  var effectElements = this.filterManager.effectElements;\r\n  var feComponentTransfer = createNS('feComponentTransfer');\r\n\r\n  if (effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1) {\r\n    this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n  }\r\n  if (effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1) {\r\n    this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n  }\r\n  if (effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1) {\r\n    this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n  }\r\n  if (effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1) {\r\n    this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n  }\r\n\r\n  if (this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA) {\r\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    feComponentTransfer = createNS('feComponentTransfer');\r\n  }\r\n\r\n  if (effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1) {\r\n    feComponentTransfer.setAttribute('color-interpolation-filters', 'sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n  }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function (type, feComponentTransfer) {\r\n  var feFunc = createNS(type);\r\n  feFunc.setAttribute('type', 'table');\r\n  feComponentTransfer.appendChild(feFunc);\r\n  return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function (inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n  var cnt = 0;\r\n  var segments = 256;\r\n  var perc;\r\n  var min = Math.min(inputBlack, inputWhite);\r\n  var max = Math.max(inputBlack, inputWhite);\r\n  var table = Array.call(null, { length: segments });\r\n  var colorValue;\r\n  var pos = 0;\r\n  var outputDelta = outputWhite - outputBlack;\r\n  var inputDelta = inputWhite - inputBlack;\r\n  while (cnt <= 256) {\r\n    perc = cnt / 256;\r\n    if (perc <= min) {\r\n      colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n    } else if (perc >= max) {\r\n      colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n    } else {\r\n      colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n    }\r\n    table[pos] = colorValue;\r\n    pos += 1;\r\n    cnt += 256 / (segments - 1);\r\n  }\r\n  return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    var val;\r\n    var effectElements = this.filterManager.effectElements;\r\n    if (this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)) {\r\n      val = this.getTableValue(effectElements[3].p.v, effectElements[4].p.v, effectElements[5].p.v, effectElements[6].p.v, effectElements[7].p.v);\r\n      this.feFuncRComposed.setAttribute('tableValues', val);\r\n      this.feFuncGComposed.setAttribute('tableValues', val);\r\n      this.feFuncBComposed.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)) {\r\n      val = this.getTableValue(effectElements[10].p.v, effectElements[11].p.v, effectElements[12].p.v, effectElements[13].p.v, effectElements[14].p.v);\r\n      this.feFuncR.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)) {\r\n      val = this.getTableValue(effectElements[17].p.v, effectElements[18].p.v, effectElements[19].p.v, effectElements[20].p.v, effectElements[21].p.v);\r\n      this.feFuncG.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)) {\r\n      val = this.getTableValue(effectElements[24].p.v, effectElements[25].p.v, effectElements[26].p.v, effectElements[27].p.v, effectElements[28].p.v);\r\n      this.feFuncB.setAttribute('tableValues', val);\r\n    }\r\n\r\n    if (this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)) {\r\n      val = this.getTableValue(effectElements[31].p.v, effectElements[32].p.v, effectElements[33].p.v, effectElements[34].p.v, effectElements[35].p.v);\r\n      this.feFuncA.setAttribute('tableValues', val);\r\n    }\r\n  }\r\n};\r\n\r\n/* global createNS, rgbToHex, degToRads */\r\n\r\nfunction SVGDropShadowEffect(filter, filterManager) {\r\n  var filterSize = filterManager.container.globalData.renderConfig.filterSize;\r\n  filter.setAttribute('x', filterSize.x);\r\n  filter.setAttribute('y', filterSize.y);\r\n  filter.setAttribute('width', filterSize.width);\r\n  filter.setAttribute('height', filterSize.height);\r\n  this.filterManager = filterManager;\r\n\r\n  var feGaussianBlur = createNS('feGaussianBlur');\r\n  feGaussianBlur.setAttribute('in', 'SourceAlpha');\r\n  feGaussianBlur.setAttribute('result', 'drop_shadow_1');\r\n  feGaussianBlur.setAttribute('stdDeviation', '0');\r\n  this.feGaussianBlur = feGaussianBlur;\r\n  filter.appendChild(feGaussianBlur);\r\n\r\n  var feOffset = createNS('feOffset');\r\n  feOffset.setAttribute('dx', '25');\r\n  feOffset.setAttribute('dy', '0');\r\n  feOffset.setAttribute('in', 'drop_shadow_1');\r\n  feOffset.setAttribute('result', 'drop_shadow_2');\r\n  this.feOffset = feOffset;\r\n  filter.appendChild(feOffset);\r\n  var feFlood = createNS('feFlood');\r\n  feFlood.setAttribute('flood-color', '#00ff00');\r\n  feFlood.setAttribute('flood-opacity', '1');\r\n  feFlood.setAttribute('result', 'drop_shadow_3');\r\n  this.feFlood = feFlood;\r\n  filter.appendChild(feFlood);\r\n\r\n  var feComposite = createNS('feComposite');\r\n  feComposite.setAttribute('in', 'drop_shadow_3');\r\n  feComposite.setAttribute('in2', 'drop_shadow_2');\r\n  feComposite.setAttribute('operator', 'in');\r\n  feComposite.setAttribute('result', 'drop_shadow_4');\r\n  filter.appendChild(feComposite);\r\n\r\n  var feMerge = createNS('feMerge');\r\n  filter.appendChild(feMerge);\r\n  var feMergeNode;\r\n  feMergeNode = createNS('feMergeNode');\r\n  feMerge.appendChild(feMergeNode);\r\n  feMergeNode = createNS('feMergeNode');\r\n  feMergeNode.setAttribute('in', 'SourceGraphic');\r\n  this.feMergeNode = feMergeNode;\r\n  this.feMerge = feMerge;\r\n  this.originalNodeAdded = false;\r\n  feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function (forceRender) {\r\n  if (forceRender || this.filterManager._mdf) {\r\n    if (forceRender || this.filterManager.effectElements[4].p._mdf) {\r\n      this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[0].p._mdf) {\r\n      var col = this.filterManager.effectElements[0].p.v;\r\n      this.feFlood.setAttribute('flood-color', rgbToHex(Math.round(col[0] * 255), Math.round(col[1] * 255), Math.round(col[2] * 255)));\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[1].p._mdf) {\r\n      this.feFlood.setAttribute('flood-opacity', this.filterManager.effectElements[1].p.v / 255);\r\n    }\r\n    if (forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf) {\r\n      var distance = this.filterManager.effectElements[3].p.v;\r\n      var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n      var x = distance * Math.cos(angle);\r\n      var y = distance * Math.sin(angle);\r\n      this.feOffset.setAttribute('dx', x);\r\n      this.feOffset.setAttribute('dy', y);\r\n    }\r\n    /* if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        } */\r\n  }\r\n};\r\n\r\n/* global createElementID, createNS */\r\n\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem) {\r\n  this.initialized = false;\r\n  this.filterManager = filterManager;\r\n  this.filterElem = filterElem;\r\n  this.elem = elem;\r\n  elem.matteElement = createNS('g');\r\n  elem.matteElement.appendChild(elem.layerElement);\r\n  elem.matteElement.appendChild(elem.transformedElement);\r\n  elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function (mask) {\r\n  var i = 0;\r\n  var len = _svgMatteSymbols.length;\r\n  while (i < len) {\r\n    if (_svgMatteSymbols[i] === mask) {\r\n      return _svgMatteSymbols[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function (mask, symbolId) {\r\n  var parentNode = mask.layerElement.parentNode;\r\n  if (!parentNode) {\r\n    return;\r\n  }\r\n  var children = parentNode.children;\r\n  var i = 0;\r\n  var len = children.length;\r\n  while (i < len) {\r\n    if (children[i] === mask.layerElement) {\r\n      break;\r\n    }\r\n    i += 1;\r\n  }\r\n  var nextChild;\r\n  if (i <= len - 2) {\r\n    nextChild = children[i + 1];\r\n  }\r\n  var useElem = createNS('use');\r\n  useElem.setAttribute('href', '#' + symbolId);\r\n  if (nextChild) {\r\n    parentNode.insertBefore(useElem, nextChild);\r\n  } else {\r\n    parentNode.appendChild(useElem);\r\n  }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function (elem, mask) {\r\n  if (!this.findSymbol(mask)) {\r\n    var symbolId = createElementID();\r\n    var masker = createNS('mask');\r\n    masker.setAttribute('id', mask.layerId);\r\n    masker.setAttribute('mask-type', 'alpha');\r\n    _svgMatteSymbols.push(mask);\r\n    var defs = elem.globalData.defs;\r\n    defs.appendChild(masker);\r\n    var symbol = createNS('symbol');\r\n    symbol.setAttribute('id', symbolId);\r\n    this.replaceInParent(mask, symbolId);\r\n    symbol.appendChild(mask.layerElement);\r\n    defs.appendChild(symbol);\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    masker.appendChild(useElem);\r\n    mask.data.hd = false;\r\n    mask.show();\r\n  }\r\n  elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function () {\r\n  var ind = this.filterManager.effectElements[0].p.v;\r\n  var elements = this.elem.comp.elements;\r\n  var i = 0;\r\n  var len = elements.length;\r\n  while (i < len) {\r\n    if (elements[i] && elements[i].data.ind === ind) {\r\n      this.setElementAsMask(this.elem, elements[i]);\r\n    }\r\n    i += 1;\r\n  }\r\n  this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function () {\r\n  if (!this.initialized) {\r\n    this.initialize();\r\n  }\r\n};\r\n\r\n/* global createElementID, filtersFactory, SVGTintFilter, SVGFillFilter, SVGStrokeEffect, SVGTritoneFilter,\r\nSVGProLevelsFilter, SVGDropShadowEffect, SVGMatte3Effect, SVGGaussianBlurEffect, locationHref */\r\n\r\nfunction SVGEffects(elem) {\r\n  var i;\r\n  var len = elem.data.ef ? elem.data.ef.length : 0;\r\n  var filId = createElementID();\r\n  var fil = filtersFactory.createFilter(filId, true);\r\n  var count = 0;\r\n  this.filters = [];\r\n  var filterManager;\r\n  for (i = 0; i < len; i += 1) {\r\n    filterManager = null;\r\n    if (elem.data.ef[i].ty === 20) {\r\n      count += 1;\r\n      filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 21) {\r\n      count += 1;\r\n      filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 22) {\r\n      filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 23) {\r\n      count += 1;\r\n      filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 24) {\r\n      count += 1;\r\n      filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 25) {\r\n      count += 1;\r\n      filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n    } else if (elem.data.ef[i].ty === 28) {\r\n      // count += 1;\r\n      filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n    } else if (elem.data.ef[i].ty === 29) {\r\n      count += 1;\r\n      filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);\r\n    }\r\n    if (filterManager) {\r\n      this.filters.push(filterManager);\r\n    }\r\n  }\r\n  if (count) {\r\n    elem.globalData.defs.appendChild(fil);\r\n    elem.layerElement.setAttribute('filter', 'url(' + locationHref + '#' + filId + ')');\r\n  }\r\n  if (this.filters.length) {\r\n    elem.addRenderableComponent(this);\r\n  }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function (_isFirstFrame) {\r\n  var i;\r\n  var len = this.filters.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.filters[i].renderFrame(_isFirstFrame);\r\n  }\r\n};\r\n\r\n/* global Matrix, createTypedArray */\r\n\r\nfunction CVContextData() {\r\n  this.saved = [];\r\n  this.cArrPos = 0;\r\n  this.cTr = new Matrix();\r\n  this.cO = 1;\r\n  var i;\r\n  var len = 15;\r\n  this.savedOp = createTypedArray('float32', len);\r\n  for (i = 0; i < len; i += 1) {\r\n    this.saved[i] = createTypedArray('float32', 16);\r\n  }\r\n  this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function () {\r\n  var newLength = this._length * 2;\r\n  var currentSavedOp = this.savedOp;\r\n  this.savedOp = createTypedArray('float32', newLength);\r\n  this.savedOp.set(currentSavedOp);\r\n  var i = 0;\r\n  for (i = this._length; i < newLength; i += 1) {\r\n    this.saved[i] = createTypedArray('float32', 16);\r\n  }\r\n  this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function () {\r\n  this.cArrPos = 0;\r\n  this.cTr.reset();\r\n  this.cO = 1;\r\n};\r\n\r\n/* global CVEffects, getBlendMode, CVMaskElement, Matrix */\r\n\r\nfunction CVBaseElement() {\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n  createElements: function () {},\r\n  initRendererElement: function () {},\r\n  createContainerElements: function () {\r\n    this.canvasContext = this.globalData.canvasContext;\r\n    this.renderableEffectsManager = new CVEffects(this);\r\n  },\r\n  createContent: function () {},\r\n  setBlendMode: function () {\r\n    var globalData = this.globalData;\r\n    if (globalData.blendMode !== this.data.bm) {\r\n      globalData.blendMode = this.data.bm;\r\n      var blendModeValue = getBlendMode(this.data.bm);\r\n      globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n    }\r\n  },\r\n  createRenderableComponents: function () {\r\n    this.maskManager = new CVMaskElement(this.data, this);\r\n  },\r\n  hideElement: function () {\r\n    if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n      this.hidden = true;\r\n    }\r\n  },\r\n  showElement: function () {\r\n    if (this.isInRange && !this.isTransparent) {\r\n      this.hidden = false;\r\n      this._isFirstFrame = true;\r\n      this.maskManager._isFirstFrame = true;\r\n    }\r\n  },\r\n  renderFrame: function () {\r\n    if (this.hidden || this.data.hd) {\r\n      return;\r\n    }\r\n    this.renderTransform();\r\n    this.renderRenderable();\r\n    this.setBlendMode();\r\n    var forceRealStack = this.data.ty === 0;\r\n    this.globalData.renderer.save(forceRealStack);\r\n    this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n    this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n    this.renderInnerContent();\r\n    this.globalData.renderer.restore(forceRealStack);\r\n    if (this.maskManager.hasMasks) {\r\n      this.globalData.renderer.restore(true);\r\n    }\r\n    if (this._isFirstFrame) {\r\n      this._isFirstFrame = false;\r\n    }\r\n  },\r\n  destroy: function () {\r\n    this.canvasContext = null;\r\n    this.data = null;\r\n    this.globalData = null;\r\n    this.maskManager.destroy();\r\n  },\r\n  mHelper: new Matrix(),\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, CVBaseElement,HierarchyElement, FrameElement,\r\nRenderableElement, SVGShapeElement, IImageElement, createTag */\r\n\r\nfunction CVImageElement(data, globalData, comp) {\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.img = globalData.imageLoader.getAsset(this.assetData);\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function () {\r\n  if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n    var canvas = createTag('canvas');\r\n    canvas.width = this.assetData.w;\r\n    canvas.height = this.assetData.h;\r\n    var ctx = canvas.getContext('2d');\r\n\r\n    var imgW = this.img.width;\r\n    var imgH = this.img.height;\r\n    var imgRel = imgW / imgH;\r\n    var canvasRel = this.assetData.w / this.assetData.h;\r\n    var widthCrop;\r\n    var heightCrop;\r\n    var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n    if ((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n      heightCrop = imgH;\r\n      widthCrop = heightCrop * canvasRel;\r\n    } else {\r\n      widthCrop = imgW;\r\n      heightCrop = widthCrop / canvasRel;\r\n    }\r\n    ctx.drawImage(this.img, (imgW - widthCrop) / 2, (imgH - heightCrop) / 2, widthCrop, heightCrop, 0, 0, this.assetData.w, this.assetData.h);\r\n    this.img = canvas;\r\n  }\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function () {\r\n  this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function () {\r\n  this.img = null;\r\n};\r\n\r\n/* global createSizedArray, PropertyFactory, extendPrototype, CanvasRenderer, ICompElement, CVBaseElement */\r\n\r\nfunction CVCompElement(data, globalData, comp) {\r\n  this.completeLayers = false;\r\n  this.layers = data.layers;\r\n  this.pendingElements = [];\r\n  this.elements = createSizedArray(this.layers.length);\r\n  this.initElement(data, globalData, comp);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function () {\r\n  var ctx = this.canvasContext;\r\n  ctx.beginPath();\r\n  ctx.moveTo(0, 0);\r\n  ctx.lineTo(this.data.w, 0);\r\n  ctx.lineTo(this.data.w, this.data.h);\r\n  ctx.lineTo(0, this.data.h);\r\n  ctx.lineTo(0, 0);\r\n  ctx.clip();\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.completeLayers || this.elements[i]) {\r\n      this.elements[i].renderFrame();\r\n    }\r\n  }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function () {\r\n  var i;\r\n  var len = this.layers.length;\r\n  for (i = len - 1; i >= 0; i -= 1) {\r\n    if (this.elements[i]) {\r\n      this.elements[i].destroy();\r\n    }\r\n  }\r\n  this.layers = null;\r\n  this.elements = null;\r\n};\r\n\r\n/* global createSizedArray, ShapePropertyFactory, MaskElement */\r\n\r\nfunction CVMaskElement(data, element) {\r\n  this.data = data;\r\n  this.element = element;\r\n  this.masksProperties = this.data.masksProperties || [];\r\n  this.viewData = createSizedArray(this.masksProperties.length);\r\n  var i;\r\n  var len = this.masksProperties.length;\r\n  var hasMasks = false;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.masksProperties[i].mode !== 'n') {\r\n      hasMasks = true;\r\n    }\r\n    this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element, this.masksProperties[i], 3);\r\n  }\r\n  this.hasMasks = hasMasks;\r\n  if (hasMasks) {\r\n    this.element.addRenderableComponent(this);\r\n  }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n  if (!this.hasMasks) {\r\n    return;\r\n  }\r\n  var transform = this.element.finalTransform.mat;\r\n  var ctx = this.element.canvasContext;\r\n  var i;\r\n  var len = this.masksProperties.length;\r\n  var pt;\r\n  var pts;\r\n  var data;\r\n  ctx.beginPath();\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.masksProperties[i].mode !== 'n') {\r\n      if (this.masksProperties[i].inv) {\r\n        ctx.moveTo(0, 0);\r\n        ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n        ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n        ctx.lineTo(0, this.element.globalData.compSize.h);\r\n        ctx.lineTo(0, 0);\r\n      }\r\n      data = this.viewData[i].v;\r\n      pt = transform.applyToPointArray(data.v[0][0], data.v[0][1], 0);\r\n      ctx.moveTo(pt[0], pt[1]);\r\n      var j;\r\n      var jLen = data._length;\r\n      for (j = 1; j < jLen; j += 1) {\r\n        pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n        ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n      }\r\n      pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n      ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n    }\r\n  }\r\n  this.element.globalData.renderer.save(true);\r\n  ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function () {\r\n  this.element = null;\r\n};\r\n\r\n/* global ShapeTransformManager, extendPrototype, BaseElement, TransformElement, CVBaseElement, IShapeElement,\r\nHierarchyElement, FrameElement, RenderableElement, RenderableDOMElement, PropertyFactory, degToRads, GradientProperty,\r\nDashProperty, TransformPropertyFactory, CVShapeData, ShapeModifiers, bmFloor */\r\n\r\nfunction CVShapeElement(data, globalData, comp) {\r\n  this.shapes = [];\r\n  this.shapesData = data.shapes;\r\n  this.stylesList = [];\r\n  this.itemsData = [];\r\n  this.prevViewData = [];\r\n  this.shapeModifiers = [];\r\n  this.processedElements = [];\r\n  this.transformsManager = new ShapeTransformManager();\r\n  this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, IShapeElement, HierarchyElement, FrameElement, RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = { opacity: 1, _opMdf: false };\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function () {\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function (data, transforms) {\r\n  var styleElem = {\r\n    data: data,\r\n    type: data.ty,\r\n    preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n    transforms: [],\r\n    elements: [],\r\n    closed: data.hd === true,\r\n  };\r\n  var elementData = {};\r\n  if (data.ty === 'fl' || data.ty === 'st') {\r\n    elementData.c = PropertyFactory.getProp(this, data.c, 1, 255, this);\r\n    if (!elementData.c.k) {\r\n      styleElem.co = 'rgb(' + bmFloor(elementData.c.v[0]) + ',' + bmFloor(elementData.c.v[1]) + ',' + bmFloor(elementData.c.v[2]) + ')';\r\n    }\r\n  } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n    elementData.s = PropertyFactory.getProp(this, data.s, 1, null, this);\r\n    elementData.e = PropertyFactory.getProp(this, data.e, 1, null, this);\r\n    elementData.h = PropertyFactory.getProp(this, data.h || { k: 0 }, 0, 0.01, this);\r\n    elementData.a = PropertyFactory.getProp(this, data.a || { k: 0 }, 0, degToRads, this);\r\n    elementData.g = new GradientProperty(this, data.g, this);\r\n  }\r\n  elementData.o = PropertyFactory.getProp(this, data.o, 0, 0.01, this);\r\n  if (data.ty === 'st' || data.ty === 'gs') {\r\n    styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n    styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n    if (data.lj == 1) { // eslint-disable-line eqeqeq\r\n      styleElem.ml = data.ml;\r\n    }\r\n    elementData.w = PropertyFactory.getProp(this, data.w, 0, null, this);\r\n    if (!elementData.w.k) {\r\n      styleElem.wi = elementData.w.v;\r\n    }\r\n    if (data.d) {\r\n      var d = new DashProperty(this, data.d, 'canvas', this);\r\n      elementData.d = d;\r\n      if (!elementData.d.k) {\r\n        styleElem.da = elementData.d.dashArray;\r\n        styleElem.do = elementData.d.dashoffset[0];\r\n      }\r\n    }\r\n  } else {\r\n    styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n  }\r\n  this.stylesList.push(styleElem);\r\n  elementData.style = styleElem;\r\n  return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function () {\r\n  var elementData = {\r\n    it: [],\r\n    prevViewData: [],\r\n  };\r\n  return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function (data) {\r\n  var elementData = {\r\n    transform: {\r\n      opacity: 1,\r\n      _opMdf: false,\r\n      key: this.transformsManager.getNewKey(),\r\n      op: PropertyFactory.getProp(this, data.o, 0, 0.01, this),\r\n      mProps: TransformPropertyFactory.getTransformProperty(this, data, this),\r\n    },\r\n  };\r\n  return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function (data) {\r\n  var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n\r\n  this.shapes.push(elementData);\r\n  this.addShapeToModifiers(elementData);\r\n  return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function () {\r\n  this._isFirstFrame = true;\r\n  var i;\r\n  var len = this.itemsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.prevViewData[i] = this.itemsData[i];\r\n  }\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, true, []);\r\n  len = this.dynamicProperties.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    this.dynamicProperties[i].getValue();\r\n  }\r\n  this.renderModifiers();\r\n  this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function (transform) {\r\n  var i;\r\n  var len = this.stylesList.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (!this.stylesList[i].closed) {\r\n      this.stylesList[i].transforms.push(transform);\r\n    }\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function () {\r\n  var i;\r\n  var len = this.stylesList.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (!this.stylesList[i].closed) {\r\n      this.stylesList[i].transforms.pop();\r\n    }\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.closeStyles = function (styles) {\r\n  var i;\r\n  var len = styles.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    styles[i].closed = true;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.searchShapes = function (arr, itemsData, prevViewData, shouldRender, transforms) {\r\n  var i;\r\n  var len = arr.length - 1;\r\n  var j;\r\n  var jLen;\r\n  var ownStyles = [];\r\n  var ownModifiers = [];\r\n  var processedPos;\r\n  var modifier;\r\n  var currentTransform;\r\n  var ownTransforms = [].concat(transforms);\r\n  for (i = len; i >= 0; i -= 1) {\r\n    processedPos = this.searchProcessedElement(arr[i]);\r\n    if (!processedPos) {\r\n      arr[i]._shouldRender = shouldRender;\r\n    } else {\r\n      itemsData[i] = prevViewData[processedPos - 1];\r\n    }\r\n    if (arr[i].ty === 'fl' || arr[i].ty === 'st' || arr[i].ty === 'gf' || arr[i].ty === 'gs') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n      } else {\r\n        itemsData[i].style.closed = false;\r\n      }\r\n\r\n      ownStyles.push(itemsData[i].style);\r\n    } else if (arr[i].ty === 'gr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createGroupElement(arr[i]);\r\n      } else {\r\n        jLen = itemsData[i].it.length;\r\n        for (j = 0; j < jLen; j += 1) {\r\n          itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n        }\r\n      }\r\n      this.searchShapes(arr[i].it, itemsData[i].it, itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n    } else if (arr[i].ty === 'tr') {\r\n      if (!processedPos) {\r\n        currentTransform = this.createTransformElement(arr[i]);\r\n        itemsData[i] = currentTransform;\r\n      }\r\n      ownTransforms.push(itemsData[i]);\r\n      this.addTransformToStyleList(itemsData[i]);\r\n    } else if (arr[i].ty === 'sh' || arr[i].ty === 'rc' || arr[i].ty === 'el' || arr[i].ty === 'sr') {\r\n      if (!processedPos) {\r\n        itemsData[i] = this.createShapeElement(arr[i]);\r\n      }\r\n    } else if (arr[i].ty === 'tm' || arr[i].ty === 'rd' || arr[i].ty === 'pb') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        modifier.init(this, arr[i]);\r\n        itemsData[i] = modifier;\r\n        this.shapeModifiers.push(modifier);\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = false;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    } else if (arr[i].ty === 'rp') {\r\n      if (!processedPos) {\r\n        modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n        itemsData[i] = modifier;\r\n        modifier.init(this, arr, i, itemsData);\r\n        this.shapeModifiers.push(modifier);\r\n        shouldRender = false;\r\n      } else {\r\n        modifier = itemsData[i];\r\n        modifier.closed = true;\r\n      }\r\n      ownModifiers.push(modifier);\r\n    }\r\n    this.addProcessedElement(arr[i], i + 1);\r\n  }\r\n  this.removeTransformFromStyleList();\r\n  this.closeStyles(ownStyles);\r\n  len = ownModifiers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    ownModifiers[i].closed = true;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function () {\r\n  this.transformHelper.opacity = 1;\r\n  this.transformHelper._opMdf = false;\r\n  this.renderModifiers();\r\n  this.transformsManager.processSequences(this._isFirstFrame);\r\n  this.renderShape(this.transformHelper, this.shapesData, this.itemsData, true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function (parentTransform, groupTransform) {\r\n  if (parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n    groupTransform.opacity = parentTransform.opacity;\r\n    groupTransform.opacity *= groupTransform.op.v;\r\n    groupTransform._opMdf = true;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function () {\r\n  var i;\r\n  var len = this.stylesList.length;\r\n  var j;\r\n  var jLen;\r\n  var k;\r\n  var kLen;\r\n  var elems;\r\n  var nodes;\r\n  var renderer = this.globalData.renderer;\r\n  var ctx = this.globalData.canvasContext;\r\n  var type;\r\n  var currentStyle;\r\n  for (i = 0; i < len; i += 1) {\r\n    currentStyle = this.stylesList[i];\r\n    type = currentStyle.type;\r\n\r\n    // Skipping style when\r\n    // Stroke width equals 0\r\n    // style should not be rendered (extra unused repeaters)\r\n    // current opacity equals 0\r\n    // global opacity equals 0\r\n    if (!(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0)) {\r\n      renderer.save();\r\n      elems = currentStyle.elements;\r\n      if (type === 'st' || type === 'gs') {\r\n        ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n        ctx.lineWidth = currentStyle.wi;\r\n        ctx.lineCap = currentStyle.lc;\r\n        ctx.lineJoin = currentStyle.lj;\r\n        ctx.miterLimit = currentStyle.ml || 0;\r\n      } else {\r\n        ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n      }\r\n      renderer.ctxOpacity(currentStyle.coOp);\r\n      if (type !== 'st' && type !== 'gs') {\r\n        ctx.beginPath();\r\n      }\r\n      renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n      jLen = elems.length;\r\n      for (j = 0; j < jLen; j += 1) {\r\n        if (type === 'st' || type === 'gs') {\r\n          ctx.beginPath();\r\n          if (currentStyle.da) {\r\n            ctx.setLineDash(currentStyle.da);\r\n            ctx.lineDashOffset = currentStyle.do;\r\n          }\r\n        }\r\n        nodes = elems[j].trNodes;\r\n        kLen = nodes.length;\r\n\r\n        for (k = 0; k < kLen; k += 1) {\r\n          if (nodes[k].t === 'm') {\r\n            ctx.moveTo(nodes[k].p[0], nodes[k].p[1]);\r\n          } else if (nodes[k].t === 'c') {\r\n            ctx.bezierCurveTo(nodes[k].pts[0], nodes[k].pts[1], nodes[k].pts[2], nodes[k].pts[3], nodes[k].pts[4], nodes[k].pts[5]);\r\n          } else {\r\n            ctx.closePath();\r\n          }\r\n        }\r\n        if (type === 'st' || type === 'gs') {\r\n          ctx.stroke();\r\n          if (currentStyle.da) {\r\n            ctx.setLineDash(this.dashResetter);\r\n          }\r\n        }\r\n      }\r\n      if (type !== 'st' && type !== 'gs') {\r\n        ctx.fill(currentStyle.r);\r\n      }\r\n      renderer.restore();\r\n    }\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function (parentTransform, items, data, isMain) {\r\n  var i;\r\n  var len = items.length - 1;\r\n  var groupTransform;\r\n  groupTransform = parentTransform;\r\n  for (i = len; i >= 0; i -= 1) {\r\n    if (items[i].ty === 'tr') {\r\n      groupTransform = data[i].transform;\r\n      this.renderShapeTransform(parentTransform, groupTransform);\r\n    } else if (items[i].ty === 'sh' || items[i].ty === 'el' || items[i].ty === 'rc' || items[i].ty === 'sr') {\r\n      this.renderPath(items[i], data[i]);\r\n    } else if (items[i].ty === 'fl') {\r\n      this.renderFill(items[i], data[i], groupTransform);\r\n    } else if (items[i].ty === 'st') {\r\n      this.renderStroke(items[i], data[i], groupTransform);\r\n    } else if (items[i].ty === 'gf' || items[i].ty === 'gs') {\r\n      this.renderGradientFill(items[i], data[i], groupTransform);\r\n    } else if (items[i].ty === 'gr') {\r\n      this.renderShape(groupTransform, items[i].it, data[i].it);\r\n    } else if (items[i].ty === 'tm') {\r\n      //\r\n    }\r\n  }\r\n  if (isMain) {\r\n    this.drawLayer();\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function (styledShape, shape) {\r\n  if (this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n    var shapeNodes = styledShape.trNodes;\r\n    var paths = shape.paths;\r\n    var i;\r\n    var len;\r\n    var j;\r\n    var jLen = paths._length;\r\n    shapeNodes.length = 0;\r\n    var groupTransformMat = styledShape.transforms.finalTransform;\r\n    for (j = 0; j < jLen; j += 1) {\r\n      var pathNodes = paths.shapes[j];\r\n      if (pathNodes && pathNodes.v) {\r\n        len = pathNodes._length;\r\n        for (i = 1; i < len; i += 1) {\r\n          if (i === 1) {\r\n            shapeNodes.push({\r\n              t: 'm',\r\n              p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\r\n            });\r\n          }\r\n          shapeNodes.push({\r\n            t: 'c',\r\n            pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i]),\r\n          });\r\n        }\r\n        if (len === 1) {\r\n          shapeNodes.push({\r\n            t: 'm',\r\n            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0),\r\n          });\r\n        }\r\n        if (pathNodes.c && len) {\r\n          shapeNodes.push({\r\n            t: 'c',\r\n            pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0]),\r\n          });\r\n          shapeNodes.push({\r\n            t: 'z',\r\n          });\r\n        }\r\n      }\r\n    }\r\n    styledShape.trNodes = shapeNodes;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderPath = function (pathData, itemData) {\r\n  if (pathData.hd !== true && pathData._shouldRender) {\r\n    var i;\r\n    var len = itemData.styledShapes.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n    }\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function (styleData, itemData, groupTransform) {\r\n  var styleElem = itemData.style;\r\n\r\n  if (itemData.c._mdf || this._isFirstFrame) {\r\n    styleElem.co = 'rgb('\r\n        + bmFloor(itemData.c.v[0]) + ','\r\n        + bmFloor(itemData.c.v[1]) + ','\r\n        + bmFloor(itemData.c.v[2]) + ')';\r\n  }\r\n  if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function (styleData, itemData, groupTransform) {\r\n  var styleElem = itemData.style;\r\n  var grd;\r\n  if (!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n    var ctx = this.globalData.canvasContext;\r\n    var pt1 = itemData.s.v;\r\n    var pt2 = itemData.e.v;\r\n    if (styleData.t === 1) {\r\n      grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n    } else {\r\n      var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n      var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n      var percent = itemData.h.v;\r\n      if (percent >= 1) {\r\n        percent = 0.99;\r\n      } else if (percent <= -1) {\r\n        percent = -0.99;\r\n      }\r\n      var dist = rad * percent;\r\n      var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n      var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n      grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n    }\r\n\r\n    var i;\r\n    var len = styleData.g.p;\r\n    var cValues = itemData.g.c;\r\n    var opacity = 1;\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n      if (itemData.g._hasOpacity && itemData.g._collapsable) {\r\n        opacity = itemData.g.o[i * 2 + 1];\r\n      }\r\n      grd.addColorStop(cValues[i * 4] / 100, 'rgba(' + cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ',' + cValues[i * 4 + 3] + ',' + opacity + ')');\r\n    }\r\n    styleElem.grd = grd;\r\n  }\r\n  styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function (styleData, itemData, groupTransform) {\r\n  var styleElem = itemData.style;\r\n  var d = itemData.d;\r\n  if (d && (d._mdf || this._isFirstFrame)) {\r\n    styleElem.da = d.dashArray;\r\n    styleElem.do = d.dashoffset[0];\r\n  }\r\n  if (itemData.c._mdf || this._isFirstFrame) {\r\n    styleElem.co = 'rgb(' + bmFloor(itemData.c.v[0]) + ',' + bmFloor(itemData.c.v[1]) + ',' + bmFloor(itemData.c.v[2]) + ')';\r\n  }\r\n  if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n    styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n  }\r\n  if (itemData.w._mdf || this._isFirstFrame) {\r\n    styleElem.wi = itemData.w.v;\r\n  }\r\n};\r\n\r\nCVShapeElement.prototype.destroy = function () {\r\n  this.shapesData = null;\r\n  this.globalData = null;\r\n  this.canvasContext = null;\r\n  this.stylesList.length = 0;\r\n  this.itemsData.length = 0;\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement,\r\nSVGShapeElement, IImageElement */\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function () {\r\n  var ctx = this.canvasContext;\r\n  ctx.fillStyle = this.data.sc;\r\n  ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n  //\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement,\r\nRenderableElement, ITextElement, createTag, createSizedArray */\r\n\r\nfunction CVTextElement(data, globalData, comp) {\r\n  this.textSpans = [];\r\n  this.yOffset = 0;\r\n  this.fillColorAnim = false;\r\n  this.strokeColorAnim = false;\r\n  this.strokeWidthAnim = false;\r\n  this.stroke = false;\r\n  this.fill = false;\r\n  this.justifyOffset = 0;\r\n  this.currentRender = null;\r\n  this.renderType = 'canvas';\r\n  this.values = {\r\n    fill: 'rgba(0,0,0,0)',\r\n    stroke: 'rgba(0,0,0,0)',\r\n    sWidth: 0,\r\n    fValue: '',\r\n  };\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement, ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function () {\r\n  var documentData = this.textProperty.currentData;\r\n  this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n  var hasFill = false;\r\n  if (documentData.fc) {\r\n    hasFill = true;\r\n    this.values.fill = this.buildColor(documentData.fc);\r\n  } else {\r\n    this.values.fill = 'rgba(0,0,0,0)';\r\n  }\r\n  this.fill = hasFill;\r\n  var hasStroke = false;\r\n  if (documentData.sc) {\r\n    hasStroke = true;\r\n    this.values.stroke = this.buildColor(documentData.sc);\r\n    this.values.sWidth = documentData.sw;\r\n  }\r\n  var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n  var i;\r\n  var len;\r\n  var letters = documentData.l;\r\n  var matrixHelper = this.mHelper;\r\n  this.stroke = hasStroke;\r\n  this.values.fValue = documentData.finalSize + 'px ' + this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n  len = documentData.finalText.length;\r\n  // this.tHelper.font = this.values.fValue;\r\n  var charData;\r\n  var shapeData;\r\n  var k;\r\n  var kLen;\r\n  var shapes;\r\n  var j;\r\n  var jLen;\r\n  var pathNodes;\r\n  var commands;\r\n  var pathArr;\r\n  var singleShape = this.data.singleShape;\r\n  var trackingOffset = documentData.tr * 0.001 * documentData.finalSize;\r\n  var xPos = 0;\r\n  var yPos = 0;\r\n  var firstLine = true;\r\n  var cnt = 0;\r\n  for (i = 0; i < len; i += 1) {\r\n    charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n    shapeData = (charData && charData.data) || {};\r\n    matrixHelper.reset();\r\n    if (singleShape && letters[i].n) {\r\n      xPos = -trackingOffset;\r\n      yPos += documentData.yOffset;\r\n      yPos += firstLine ? 1 : 0;\r\n      firstLine = false;\r\n    }\r\n\r\n    shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n    jLen = shapes.length;\r\n    matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n    if (singleShape) {\r\n      this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n    }\r\n    commands = createSizedArray(jLen);\r\n    for (j = 0; j < jLen; j += 1) {\r\n      kLen = shapes[j].ks.k.i.length;\r\n      pathNodes = shapes[j].ks.k;\r\n      pathArr = [];\r\n      for (k = 1; k < kLen; k += 1) {\r\n        if (k === 1) {\r\n          pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\r\n        }\r\n        pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToY(pathNodes.i[k][0], pathNodes.i[k][1], 0), matrixHelper.applyToX(pathNodes.v[k][0], pathNodes.v[k][1], 0), matrixHelper.applyToY(pathNodes.v[k][0], pathNodes.v[k][1], 0));\r\n      }\r\n      pathArr.push(matrixHelper.applyToX(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToY(pathNodes.o[k - 1][0], pathNodes.o[k - 1][1], 0), matrixHelper.applyToX(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToY(pathNodes.i[0][0], pathNodes.i[0][1], 0), matrixHelper.applyToX(pathNodes.v[0][0], pathNodes.v[0][1], 0), matrixHelper.applyToY(pathNodes.v[0][0], pathNodes.v[0][1], 0));\r\n      commands[j] = pathArr;\r\n    }\r\n    if (singleShape) {\r\n      xPos += letters[i].l;\r\n      xPos += trackingOffset;\r\n    }\r\n    if (this.textSpans[cnt]) {\r\n      this.textSpans[cnt].elem = commands;\r\n    } else {\r\n      this.textSpans[cnt] = { elem: commands };\r\n    }\r\n    cnt += 1;\r\n  }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function () {\r\n  var ctx = this.canvasContext;\r\n  ctx.font = this.values.fValue;\r\n  ctx.lineCap = 'butt';\r\n  ctx.lineJoin = 'miter';\r\n  ctx.miterLimit = 4;\r\n\r\n  if (!this.data.singleShape) {\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n  }\r\n\r\n  var i;\r\n  var len;\r\n  var j;\r\n  var jLen;\r\n  var k;\r\n  var kLen;\r\n  var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n  var letters = this.textProperty.currentData.l;\r\n\r\n  len = letters.length;\r\n  var renderedLetter;\r\n  var lastFill = null;\r\n  var lastStroke = null;\r\n  var lastStrokeW = null;\r\n  var commands;\r\n  var pathArr;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (!letters[i].n) {\r\n      renderedLetter = renderedLetters[i];\r\n      if (renderedLetter) {\r\n        this.globalData.renderer.save();\r\n        this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n        this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n      }\r\n      if (this.fill) {\r\n        if (renderedLetter && renderedLetter.fc) {\r\n          if (lastFill !== renderedLetter.fc) {\r\n            lastFill = renderedLetter.fc;\r\n            ctx.fillStyle = renderedLetter.fc;\r\n          }\r\n        } else if (lastFill !== this.values.fill) {\r\n          lastFill = this.values.fill;\r\n          ctx.fillStyle = this.values.fill;\r\n        }\r\n        commands = this.textSpans[i].elem;\r\n        jLen = commands.length;\r\n        this.globalData.canvasContext.beginPath();\r\n        for (j = 0; j < jLen; j += 1) {\r\n          pathArr = commands[j];\r\n          kLen = pathArr.length;\r\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n          for (k = 2; k < kLen; k += 6) {\r\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n          }\r\n        }\r\n        this.globalData.canvasContext.closePath();\r\n        this.globalData.canvasContext.fill();\r\n        /// ctx.fillText(this.textSpans[i].val,0,0);\r\n      }\r\n      if (this.stroke) {\r\n        if (renderedLetter && renderedLetter.sw) {\r\n          if (lastStrokeW !== renderedLetter.sw) {\r\n            lastStrokeW = renderedLetter.sw;\r\n            ctx.lineWidth = renderedLetter.sw;\r\n          }\r\n        } else if (lastStrokeW !== this.values.sWidth) {\r\n          lastStrokeW = this.values.sWidth;\r\n          ctx.lineWidth = this.values.sWidth;\r\n        }\r\n        if (renderedLetter && renderedLetter.sc) {\r\n          if (lastStroke !== renderedLetter.sc) {\r\n            lastStroke = renderedLetter.sc;\r\n            ctx.strokeStyle = renderedLetter.sc;\r\n          }\r\n        } else if (lastStroke !== this.values.stroke) {\r\n          lastStroke = this.values.stroke;\r\n          ctx.strokeStyle = this.values.stroke;\r\n        }\r\n        commands = this.textSpans[i].elem;\r\n        jLen = commands.length;\r\n        this.globalData.canvasContext.beginPath();\r\n        for (j = 0; j < jLen; j += 1) {\r\n          pathArr = commands[j];\r\n          kLen = pathArr.length;\r\n          this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n          for (k = 2; k < kLen; k += 6) {\r\n            this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n          }\r\n        }\r\n        this.globalData.canvasContext.closePath();\r\n        this.globalData.canvasContext.stroke();\r\n        /// ctx.strokeText(letters[i].val,0,0);\r\n      }\r\n      if (renderedLetter) {\r\n        this.globalData.renderer.restore();\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function () {};\r\n\r\n/* global createTag, createNS, styleDiv, CVEffects, MaskElement, SVGBaseElement, HybridRenderer */\r\n\r\nfunction HBaseElement() {}\r\nHBaseElement.prototype = {\r\n  checkBlendMode: function () {},\r\n  initRendererElement: function () {\r\n    this.baseElement = createTag(this.data.tg || 'div');\r\n    if (this.data.hasMask) {\r\n      this.svgElement = createNS('svg');\r\n      this.layerElement = createNS('g');\r\n      this.maskedElement = this.layerElement;\r\n      this.svgElement.appendChild(this.layerElement);\r\n      this.baseElement.appendChild(this.svgElement);\r\n    } else {\r\n      this.layerElement = this.baseElement;\r\n    }\r\n    styleDiv(this.baseElement);\r\n  },\r\n  createContainerElements: function () {\r\n    this.renderableEffectsManager = new CVEffects(this);\r\n    this.transformedElement = this.baseElement;\r\n    this.maskedElement = this.layerElement;\r\n    if (this.data.ln) {\r\n      this.layerElement.setAttribute('id', this.data.ln);\r\n    }\r\n    if (this.data.cl) {\r\n      this.layerElement.setAttribute('class', this.data.cl);\r\n    }\r\n    if (this.data.bm !== 0) {\r\n      this.setBlendMode();\r\n    }\r\n  },\r\n  renderElement: function () {\r\n    var transformedElementStyle = this.transformedElement ? this.transformedElement.style : {};\r\n    if (this.finalTransform._matMdf) {\r\n      var matrixValue = this.finalTransform.mat.toCSS();\r\n      transformedElementStyle.transform = matrixValue;\r\n      transformedElementStyle.webkitTransform = matrixValue;\r\n    }\r\n    if (this.finalTransform._opMdf) {\r\n      transformedElementStyle.opacity = this.finalTransform.mProp.o.v;\r\n    }\r\n  },\r\n  renderFrame: function () {\r\n    // If it is exported as hidden (data.hd === true) no need to render\r\n    // If it is not visible no need to render\r\n    if (this.data.hd || this.hidden) {\r\n      return;\r\n    }\r\n    this.renderTransform();\r\n    this.renderRenderable();\r\n    this.renderElement();\r\n    this.renderInnerContent();\r\n    if (this._isFirstFrame) {\r\n      this._isFirstFrame = false;\r\n    }\r\n  },\r\n  destroy: function () {\r\n    this.layerElement = null;\r\n    this.transformedElement = null;\r\n    if (this.matteElement) {\r\n      this.matteElement = null;\r\n    }\r\n    if (this.maskManager) {\r\n      this.maskManager.destroy();\r\n      this.maskManager = null;\r\n    }\r\n  },\r\n  createRenderableComponents: function () {\r\n    this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n  },\r\n  addEffects: function () {\r\n  },\r\n  setMatte: function () {},\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement,\r\nRenderableDOMElement, createNS, createTag */\r\n\r\nfunction HSolidElement(data, globalData, comp) {\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function () {\r\n  var rect;\r\n  if (this.data.hasMask) {\r\n    rect = createNS('rect');\r\n    rect.setAttribute('width', this.data.sw);\r\n    rect.setAttribute('height', this.data.sh);\r\n    rect.setAttribute('fill', this.data.sc);\r\n    this.svgElement.setAttribute('width', this.data.sw);\r\n    this.svgElement.setAttribute('height', this.data.sh);\r\n  } else {\r\n    rect = createTag('div');\r\n    rect.style.width = this.data.sw + 'px';\r\n    rect.style.height = this.data.sh + 'px';\r\n    rect.style.backgroundColor = this.data.sc;\r\n  }\r\n  this.layerElement.appendChild(rect);\r\n};\r\n\r\n/* global createSizedArray, PropertyFactory, extendPrototype, HybridRenderer, ICompElement, HBaseElement */\r\n\r\nfunction HCompElement(data, globalData, comp) {\r\n  this.layers = data.layers;\r\n  this.supports3d = !data.hasMask;\r\n  this.completeLayers = false;\r\n  this.pendingElements = [];\r\n  this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n  this.initElement(data, globalData, comp);\r\n  this.tm = data.tm ? PropertyFactory.getProp(this, data.tm, 0, globalData.frameRate, this) : { _placeholder: true };\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function () {\r\n  this._createBaseContainerElements();\r\n  // divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n  if (this.data.hasMask) {\r\n    this.svgElement.setAttribute('width', this.data.w);\r\n    this.svgElement.setAttribute('height', this.data.h);\r\n    this.transformedElement = this.baseElement;\r\n  } else {\r\n    this.transformedElement = this.layerElement;\r\n  }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function (elem, pos) {\r\n  var j = 0;\r\n  var nextElement;\r\n  while (j < pos) {\r\n    if (this.elements[j] && this.elements[j].getBaseElement) {\r\n      nextElement = this.elements[j].getBaseElement();\r\n    }\r\n    j += 1;\r\n  }\r\n  if (nextElement) {\r\n    this.layerElement.insertBefore(elem, nextElement);\r\n  } else {\r\n    this.layerElement.appendChild(elem);\r\n  }\r\n};\r\n\r\n/* global createNS, extendPrototype, BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement,\r\nHierarchyElement, FrameElement, RenderableElement, createNS, bmMin, bmSqrt, bmMin, bmMax, bmPow */\r\n\r\nfunction HShapeElement(data, globalData, comp) {\r\n  // List of drawable elements\r\n  this.shapes = [];\r\n  // Full shape data\r\n  this.shapesData = data.shapes;\r\n  // List of styles that will be applied to shapes\r\n  this.stylesList = [];\r\n  // List of modifiers that will be applied to shapes\r\n  this.shapeModifiers = [];\r\n  // List of items in shape tree\r\n  this.itemsData = [];\r\n  // List of items in previous shape tree\r\n  this.processedElements = [];\r\n  // List of animated components\r\n  this.animatedContents = [];\r\n  this.shapesContainer = createNS('g');\r\n  this.initElement(data, globalData, comp);\r\n  // Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n  // List of elements that have been created\r\n  this.prevViewData = [];\r\n  this.currentBBox = {\r\n    x: 999999,\r\n    y: -999999,\r\n    h: 0,\r\n    w: 0,\r\n  };\r\n}\r\nextendPrototype([BaseElement, TransformElement, HSolidElement, SVGShapeElement, HBaseElement, HierarchyElement, FrameElement, RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function () {\r\n  var cont;\r\n  this.baseElement.style.fontSize = 0;\r\n  if (this.data.hasMask) {\r\n    this.layerElement.appendChild(this.shapesContainer);\r\n    cont = this.svgElement;\r\n  } else {\r\n    cont = createNS('svg');\r\n    var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n    cont.setAttribute('width', size.w);\r\n    cont.setAttribute('height', size.h);\r\n    cont.appendChild(this.shapesContainer);\r\n    this.layerElement.appendChild(cont);\r\n  }\r\n\r\n  this.searchShapes(this.shapesData, this.itemsData, this.prevViewData, this.shapesContainer, 0, [], true);\r\n  this.filterUniqueShapes();\r\n  this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function (transformers, point) {\r\n  var i;\r\n  var len = transformers.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n  }\r\n  return point;\r\n};\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function (item, boundingBox) {\r\n  var shape = item.sh.v;\r\n  var transformers = item.transformers;\r\n  var i;\r\n  var len = shape._length;\r\n  var vPoint;\r\n  var oPoint;\r\n  var nextIPoint;\r\n  var nextVPoint;\r\n  if (len <= 1) {\r\n    return;\r\n  }\r\n  for (i = 0; i < len - 1; i += 1) {\r\n    vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n    oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n    nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n    nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n    this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n  }\r\n  if (shape.c) {\r\n    vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n    oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n    nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n    nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n    this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n  }\r\n};\r\n\r\nHShapeElement.prototype.checkBounds = function (vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n  this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n  var bounds = this.shapeBoundingBox;\r\n  boundingBox.x = bmMin(bounds.left, boundingBox.x);\r\n  boundingBox.xMax = bmMax(bounds.right, boundingBox.xMax);\r\n  boundingBox.y = bmMin(bounds.top, boundingBox.y);\r\n  boundingBox.yMax = bmMax(bounds.bottom, boundingBox.yMax);\r\n};\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n  left: 0,\r\n  right: 0,\r\n  top: 0,\r\n  bottom: 0,\r\n};\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n  x: 0,\r\n  xMax: 0,\r\n  y: 0,\r\n  yMax: 0,\r\n  width: 0,\r\n  height: 0,\r\n};\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function (p0, p1, p2, p3) {\r\n  var bounds = [[p0[0], p3[0]], [p0[1], p3[1]]];\r\n\r\n  for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) { // eslint-disable-line no-plusplus\r\n    b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n    a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n    c = 3 * p1[i] - 3 * p0[i];\r\n\r\n    b |= 0; // eslint-disable-line no-bitwise\r\n    a |= 0; // eslint-disable-line no-bitwise\r\n    c |= 0; // eslint-disable-line no-bitwise\r\n\r\n    if (a === 0 && b === 0) {\r\n      //\r\n    } else if (a === 0) {\r\n      t = -c / b;\r\n\r\n      if (t > 0 && t < 1) {\r\n        bounds[i].push(this.calculateF(t, p0, p1, p2, p3, i));\r\n      }\r\n    } else {\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac >= 0) {\r\n        t1 = (-b + bmSqrt(b2ac)) / (2 * a);\r\n        if (t1 > 0 && t1 < 1) bounds[i].push(this.calculateF(t1, p0, p1, p2, p3, i));\r\n        t2 = (-b - bmSqrt(b2ac)) / (2 * a);\r\n        if (t2 > 0 && t2 < 1) bounds[i].push(this.calculateF(t2, p0, p1, p2, p3, i));\r\n      }\r\n    }\r\n  }\r\n\r\n  this.shapeBoundingBox.left = bmMin.apply(null, bounds[0]);\r\n  this.shapeBoundingBox.top = bmMin.apply(null, bounds[1]);\r\n  this.shapeBoundingBox.right = bmMax.apply(null, bounds[0]);\r\n  this.shapeBoundingBox.bottom = bmMax.apply(null, bounds[1]);\r\n};\r\n\r\nHShapeElement.prototype.calculateF = function (t, p0, p1, p2, p3, i) {\r\n  return bmPow(1 - t, 3) * p0[i]\r\n        + 3 * bmPow(1 - t, 2) * t * p1[i]\r\n        + 3 * (1 - t) * bmPow(t, 2) * p2[i]\r\n        + bmPow(t, 3) * p3[i];\r\n};\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function (itemsData, boundingBox) {\r\n  var i;\r\n  var len = itemsData.length;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (itemsData[i] && itemsData[i].sh) {\r\n      this.calculateShapeBoundingBox(itemsData[i], boundingBox);\r\n    } else if (itemsData[i] && itemsData[i].it) {\r\n      this.calculateBoundingBox(itemsData[i].it, boundingBox);\r\n    }\r\n  }\r\n};\r\n\r\nHShapeElement.prototype.currentBoxContains = function (box) {\r\n  return this.currentBBox.x <= box.x\r\n    && this.currentBBox.y <= box.y\r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height;\r\n};\r\n\r\nHShapeElement.prototype.renderInnerContent = function () {\r\n  this._renderShapeFrame();\r\n\r\n  if (!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n    var tempBoundingBox = this.tempBoundingBox;\r\n    var max = 999999;\r\n    tempBoundingBox.x = max;\r\n    tempBoundingBox.xMax = -max;\r\n    tempBoundingBox.y = max;\r\n    tempBoundingBox.yMax = -max;\r\n    this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n    tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n    tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n    // var tempBoundingBox = this.shapeCont.getBBox();\r\n    if (this.currentBoxContains(tempBoundingBox)) {\r\n      return;\r\n    }\r\n    var changed = false;\r\n    if (this.currentBBox.w !== tempBoundingBox.width) {\r\n      this.currentBBox.w = tempBoundingBox.width;\r\n      this.shapeCont.setAttribute('width', tempBoundingBox.width);\r\n      changed = true;\r\n    }\r\n    if (this.currentBBox.h !== tempBoundingBox.height) {\r\n      this.currentBBox.h = tempBoundingBox.height;\r\n      this.shapeCont.setAttribute('height', tempBoundingBox.height);\r\n      changed = true;\r\n    }\r\n    if (changed || this.currentBBox.x !== tempBoundingBox.x || this.currentBBox.y !== tempBoundingBox.y) {\r\n      this.currentBBox.w = tempBoundingBox.width;\r\n      this.currentBBox.h = tempBoundingBox.height;\r\n      this.currentBBox.x = tempBoundingBox.x;\r\n      this.currentBBox.y = tempBoundingBox.y;\r\n\r\n      this.shapeCont.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\r\n      var shapeStyle = this.shapeCont.style;\r\n      var shapeTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n      shapeStyle.transform = shapeTransform;\r\n      shapeStyle.webkitTransform = shapeTransform;\r\n    }\r\n  }\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement,\r\nRenderableDOMElement, ITextElement, createSizedArray, createTag, styleDiv, createNS */\r\n\r\nfunction HTextElement(data, globalData, comp) {\r\n  this.textSpans = [];\r\n  this.textPaths = [];\r\n  this.currentBBox = {\r\n    x: 999999,\r\n    y: -999999,\r\n    h: 0,\r\n    w: 0,\r\n  };\r\n  this.renderType = 'svg';\r\n  this.isMasked = false;\r\n  this.initElement(data, globalData, comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, HBaseElement, HierarchyElement, FrameElement, RenderableDOMElement, ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function () {\r\n  this.isMasked = this.checkMasks();\r\n  if (this.isMasked) {\r\n    this.renderType = 'svg';\r\n    this.compW = this.comp.data.w;\r\n    this.compH = this.comp.data.h;\r\n    this.svgElement.setAttribute('width', this.compW);\r\n    this.svgElement.setAttribute('height', this.compH);\r\n    var g = createNS('g');\r\n    this.maskedElement.appendChild(g);\r\n    this.innerElem = g;\r\n  } else {\r\n    this.renderType = 'html';\r\n    this.innerElem = this.layerElement;\r\n  }\r\n\r\n  this.checkParenting();\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function () {\r\n  var documentData = this.textProperty.currentData;\r\n  this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n  var innerElemStyle = this.innerElem.style;\r\n  var textColor = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n  innerElemStyle.fill = textColor;\r\n  innerElemStyle.color = textColor;\r\n  if (documentData.sc) {\r\n    innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n    innerElemStyle.strokeWidth = documentData.sw + 'px';\r\n  }\r\n  var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n  if (!this.globalData.fontManager.chars) {\r\n    innerElemStyle.fontSize = documentData.finalSize + 'px';\r\n    innerElemStyle.lineHeight = documentData.finalSize + 'px';\r\n    if (fontData.fClass) {\r\n      this.innerElem.className = fontData.fClass;\r\n    } else {\r\n      innerElemStyle.fontFamily = fontData.fFamily;\r\n      var fWeight = documentData.fWeight;\r\n      var fStyle = documentData.fStyle;\r\n      innerElemStyle.fontStyle = fStyle;\r\n      innerElemStyle.fontWeight = fWeight;\r\n    }\r\n  }\r\n  var i;\r\n  var len;\r\n\r\n  var letters = documentData.l;\r\n  len = letters.length;\r\n  var tSpan;\r\n  var tParent;\r\n  var tCont;\r\n  var matrixHelper = this.mHelper;\r\n  var shapes;\r\n  var shapeStr = '';\r\n  var cnt = 0;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (this.globalData.fontManager.chars) {\r\n      if (!this.textPaths[cnt]) {\r\n        tSpan = createNS('path');\r\n        tSpan.setAttribute('stroke-linecap', 'butt');\r\n        tSpan.setAttribute('stroke-linejoin', 'round');\r\n        tSpan.setAttribute('stroke-miterlimit', '4');\r\n      } else {\r\n        tSpan = this.textPaths[cnt];\r\n      }\r\n      if (!this.isMasked) {\r\n        if (this.textSpans[cnt]) {\r\n          tParent = this.textSpans[cnt];\r\n          tCont = tParent.children[0];\r\n        } else {\r\n          tParent = createTag('div');\r\n          tParent.style.lineHeight = 0;\r\n          tCont = createNS('svg');\r\n          tCont.appendChild(tSpan);\r\n          styleDiv(tParent);\r\n        }\r\n      }\r\n    } else if (!this.isMasked) {\r\n      if (this.textSpans[cnt]) {\r\n        tParent = this.textSpans[cnt];\r\n        tSpan = this.textPaths[cnt];\r\n      } else {\r\n        tParent = createTag('span');\r\n        styleDiv(tParent);\r\n        tSpan = createTag('span');\r\n        styleDiv(tSpan);\r\n        tParent.appendChild(tSpan);\r\n      }\r\n    } else {\r\n      tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n    }\r\n    // tSpan.setAttribute('visibility', 'hidden');\r\n    if (this.globalData.fontManager.chars) {\r\n      var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n      var shapeData;\r\n      if (charData) {\r\n        shapeData = charData.data;\r\n      } else {\r\n        shapeData = null;\r\n      }\r\n      matrixHelper.reset();\r\n      if (shapeData && shapeData.shapes) {\r\n        shapes = shapeData.shapes[0].it;\r\n        matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n        shapeStr = this.createPathShape(matrixHelper, shapes);\r\n        tSpan.setAttribute('d', shapeStr);\r\n      }\r\n      if (!this.isMasked) {\r\n        this.innerElem.appendChild(tParent);\r\n        if (shapeData && shapeData.shapes) {\r\n          // document.body.appendChild is needed to get exact measure of shape\r\n          document.body.appendChild(tCont);\r\n          var boundingBox = tCont.getBBox();\r\n          tCont.setAttribute('width', boundingBox.width + 2);\r\n          tCont.setAttribute('height', boundingBox.height + 2);\r\n          tCont.setAttribute('viewBox', (boundingBox.x - 1) + ' ' + (boundingBox.y - 1) + ' ' + (boundingBox.width + 2) + ' ' + (boundingBox.height + 2));\r\n          var tContStyle = tCont.style;\r\n          var tContTranslation = 'translate(' + (boundingBox.x - 1) + 'px,' + (boundingBox.y - 1) + 'px)';\r\n          tContStyle.transform = tContTranslation;\r\n          tContStyle.webkitTransform = tContTranslation;\r\n\r\n          letters[i].yOffset = boundingBox.y - 1;\r\n        } else {\r\n          tCont.setAttribute('width', 1);\r\n          tCont.setAttribute('height', 1);\r\n        }\r\n        tParent.appendChild(tCont);\r\n      } else {\r\n        this.innerElem.appendChild(tSpan);\r\n      }\r\n    } else {\r\n      tSpan.textContent = letters[i].val;\r\n      tSpan.setAttributeNS('http://www.w3.org/XML/1998/namespace', 'xml:space', 'preserve');\r\n      if (!this.isMasked) {\r\n        this.innerElem.appendChild(tParent);\r\n        //\r\n        var tStyle = tSpan.style;\r\n        var tSpanTranslation = 'translate3d(0,' + -documentData.finalSize / 1.2 + 'px,0)';\r\n        tStyle.transform = tSpanTranslation;\r\n        tStyle.webkitTransform = tSpanTranslation;\r\n      } else {\r\n        this.innerElem.appendChild(tSpan);\r\n      }\r\n    }\r\n    //\r\n    if (!this.isMasked) {\r\n      this.textSpans[cnt] = tParent;\r\n    } else {\r\n      this.textSpans[cnt] = tSpan;\r\n    }\r\n    this.textSpans[cnt].style.display = 'block';\r\n    this.textPaths[cnt] = tSpan;\r\n    cnt += 1;\r\n  }\r\n  while (cnt < this.textSpans.length) {\r\n    this.textSpans[cnt].style.display = 'none';\r\n    cnt += 1;\r\n  }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function () {\r\n  var svgStyle;\r\n  if (this.data.singleShape) {\r\n    if (!this._isFirstFrame && !this.lettersChangedFlag) {\r\n      return;\r\n    } if (this.isMasked && this.finalTransform._matMdf) {\r\n      // Todo Benchmark if using this is better than getBBox\r\n      this.svgElement.setAttribute('viewBox', -this.finalTransform.mProp.p.v[0] + ' ' + -this.finalTransform.mProp.p.v[1] + ' ' + this.compW + ' ' + this.compH);\r\n      svgStyle = this.svgElement.style;\r\n      var translation = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n      svgStyle.transform = translation;\r\n      svgStyle.webkitTransform = translation;\r\n    }\r\n  }\r\n\r\n  this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n  if (!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag) {\r\n    return;\r\n  }\r\n  var i;\r\n  var len;\r\n  var count = 0;\r\n  var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n  var letters = this.textProperty.currentData.l;\r\n\r\n  len = letters.length;\r\n  var renderedLetter;\r\n  var textSpan;\r\n  var textPath;\r\n  for (i = 0; i < len; i += 1) {\r\n    if (letters[i].n) {\r\n      count += 1;\r\n    } else {\r\n      textSpan = this.textSpans[i];\r\n      textPath = this.textPaths[i];\r\n      renderedLetter = renderedLetters[count];\r\n      count += 1;\r\n      if (renderedLetter._mdf.m) {\r\n        if (!this.isMasked) {\r\n          textSpan.style.webkitTransform = renderedLetter.m;\r\n          textSpan.style.transform = renderedLetter.m;\r\n        } else {\r\n          textSpan.setAttribute('transform', renderedLetter.m);\r\n        }\r\n      }\r\n      /// /textSpan.setAttribute('opacity',renderedLetter.o);\r\n      textSpan.style.opacity = renderedLetter.o;\r\n      if (renderedLetter.sw && renderedLetter._mdf.sw) {\r\n        textPath.setAttribute('stroke-width', renderedLetter.sw);\r\n      }\r\n      if (renderedLetter.sc && renderedLetter._mdf.sc) {\r\n        textPath.setAttribute('stroke', renderedLetter.sc);\r\n      }\r\n      if (renderedLetter.fc && renderedLetter._mdf.fc) {\r\n        textPath.setAttribute('fill', renderedLetter.fc);\r\n        textPath.style.color = renderedLetter.fc;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)) {\r\n    var boundingBox = this.innerElem.getBBox();\r\n\r\n    if (this.currentBBox.w !== boundingBox.width) {\r\n      this.currentBBox.w = boundingBox.width;\r\n      this.svgElement.setAttribute('width', boundingBox.width);\r\n    }\r\n    if (this.currentBBox.h !== boundingBox.height) {\r\n      this.currentBBox.h = boundingBox.height;\r\n      this.svgElement.setAttribute('height', boundingBox.height);\r\n    }\r\n\r\n    var margin = 1;\r\n    if (this.currentBBox.w !== (boundingBox.width + margin * 2) || this.currentBBox.h !== (boundingBox.height + margin * 2) || this.currentBBox.x !== (boundingBox.x - margin) || this.currentBBox.y !== (boundingBox.y - margin)) {\r\n      this.currentBBox.w = boundingBox.width + margin * 2;\r\n      this.currentBBox.h = boundingBox.height + margin * 2;\r\n      this.currentBBox.x = boundingBox.x - margin;\r\n      this.currentBBox.y = boundingBox.y - margin;\r\n\r\n      this.svgElement.setAttribute('viewBox', this.currentBBox.x + ' ' + this.currentBBox.y + ' ' + this.currentBBox.w + ' ' + this.currentBBox.h);\r\n      svgStyle = this.svgElement.style;\r\n      var svgTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n      svgStyle.transform = svgTransform;\r\n      svgStyle.webkitTransform = svgTransform;\r\n    }\r\n  }\r\n};\r\n\r\n/* global extendPrototype, BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement,\r\nFrameElement, RenderableElement, createNS */\r\n\r\nfunction HImageElement(data, globalData, comp) {\r\n  this.assetData = globalData.getAssetData(data.refId);\r\n  this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement, TransformElement, HBaseElement, HSolidElement, HierarchyElement, FrameElement, RenderableElement], HImageElement);\r\n\r\nHImageElement.prototype.createContent = function () {\r\n  var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n  var img = new Image();\r\n\r\n  if (this.data.hasMask) {\r\n    this.imageElem = createNS('image');\r\n    this.imageElem.setAttribute('width', this.assetData.w + 'px');\r\n    this.imageElem.setAttribute('height', this.assetData.h + 'px');\r\n    this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink', 'href', assetPath);\r\n    this.layerElement.appendChild(this.imageElem);\r\n    this.baseElement.setAttribute('width', this.assetData.w);\r\n    this.baseElement.setAttribute('height', this.assetData.h);\r\n  } else {\r\n    this.layerElement.appendChild(img);\r\n  }\r\n  img.crossOrigin = 'anonymous';\r\n  img.src = assetPath;\r\n  if (this.data.ln) {\r\n    this.baseElement.setAttribute('id', this.data.ln);\r\n  }\r\n};\r\n\r\n/* global PropertyFactory, degToRads, Matrix, extendPrototype, BaseElement, FrameElement, HierarchyElement */\r\n\r\nfunction HCameraElement(data, globalData, comp) {\r\n  this.initFrame();\r\n  this.initBaseData(data, globalData, comp);\r\n  this.initHierarchy();\r\n  var getProp = PropertyFactory.getProp;\r\n  this.pe = getProp(this, data.pe, 0, 0, this);\r\n  if (data.ks.p.s) {\r\n    this.px = getProp(this, data.ks.p.x, 1, 0, this);\r\n    this.py = getProp(this, data.ks.p.y, 1, 0, this);\r\n    this.pz = getProp(this, data.ks.p.z, 1, 0, this);\r\n  } else {\r\n    this.p = getProp(this, data.ks.p, 1, 0, this);\r\n  }\r\n  if (data.ks.a) {\r\n    this.a = getProp(this, data.ks.a, 1, 0, this);\r\n  }\r\n  if (data.ks.or.k.length && data.ks.or.k[0].to) {\r\n    var i;\r\n    var len = data.ks.or.k.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      data.ks.or.k[i].to = null;\r\n      data.ks.or.k[i].ti = null;\r\n    }\r\n  }\r\n  this.or = getProp(this, data.ks.or, 1, degToRads, this);\r\n  this.or.sh = true;\r\n  this.rx = getProp(this, data.ks.rx, 0, degToRads, this);\r\n  this.ry = getProp(this, data.ks.ry, 0, degToRads, this);\r\n  this.rz = getProp(this, data.ks.rz, 0, degToRads, this);\r\n  this.mat = new Matrix();\r\n  this._prevMat = new Matrix();\r\n  this._isFirstFrame = true;\r\n\r\n  // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n  this.finalTransform = {\r\n    mProp: this,\r\n  };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function () {\r\n  var i;\r\n  var len = this.comp.threeDElements.length;\r\n  var comp;\r\n  var perspectiveStyle;\r\n  var containerStyle;\r\n  for (i = 0; i < len; i += 1) {\r\n    // [perspectiveElem,container]\r\n    comp = this.comp.threeDElements[i];\r\n    if (comp.type === '3d') {\r\n      perspectiveStyle = comp.perspectiveElem.style;\r\n      containerStyle = comp.container.style;\r\n      var perspective = this.pe.v + 'px';\r\n      var origin = '0px 0px 0px';\r\n      var matrix = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n      perspectiveStyle.perspective = perspective;\r\n      perspectiveStyle.webkitPerspective = perspective;\r\n      containerStyle.transformOrigin = origin;\r\n      containerStyle.mozTransformOrigin = origin;\r\n      containerStyle.webkitTransformOrigin = origin;\r\n      perspectiveStyle.transform = matrix;\r\n      perspectiveStyle.webkitTransform = matrix;\r\n    }\r\n  }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function () {\r\n};\r\n\r\nHCameraElement.prototype.hide = function () {\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function () {\r\n  var _mdf = this._isFirstFrame;\r\n  var i;\r\n  var len;\r\n  if (this.hierarchy) {\r\n    len = this.hierarchy.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n    }\r\n  }\r\n  if (_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n    this.mat.reset();\r\n\r\n    if (this.hierarchy) {\r\n      len = this.hierarchy.length - 1;\r\n      for (i = len; i >= 0; i -= 1) {\r\n        var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n        this.mat.translate(-mTransf.p.v[0], -mTransf.p.v[1], mTransf.p.v[2]);\r\n        this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n        this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n        this.mat.scale(1 / mTransf.s.v[0], 1 / mTransf.s.v[1], 1 / mTransf.s.v[2]);\r\n        this.mat.translate(mTransf.a.v[0], mTransf.a.v[1], mTransf.a.v[2]);\r\n      }\r\n    }\r\n    if (this.p) {\r\n      this.mat.translate(-this.p.v[0], -this.p.v[1], this.p.v[2]);\r\n    } else {\r\n      this.mat.translate(-this.px.v, -this.py.v, this.pz.v);\r\n    }\r\n    if (this.a) {\r\n      var diffVector;\r\n      if (this.p) {\r\n        diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\r\n      } else {\r\n        diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\r\n      }\r\n      var mag = Math.sqrt(Math.pow(diffVector[0], 2) + Math.pow(diffVector[1], 2) + Math.pow(diffVector[2], 2));\r\n      // var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n      var lookDir = [diffVector[0] / mag, diffVector[1] / mag, diffVector[2] / mag];\r\n      var lookLengthOnXZ = Math.sqrt(lookDir[2] * lookDir[2] + lookDir[0] * lookDir[0]);\r\n      var mRotationX = (Math.atan2(lookDir[1], lookLengthOnXZ));\r\n      var mRotationY = (Math.atan2(lookDir[0], -lookDir[2]));\r\n      this.mat.rotateY(mRotationY).rotateX(-mRotationX);\r\n    }\r\n    this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n    this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n    this.mat.translate(this.globalData.compSize.w / 2, this.globalData.compSize.h / 2, 0);\r\n    this.mat.translate(0, 0, this.pe.v);\r\n\r\n    var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n    if ((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n      len = this.comp.threeDElements.length;\r\n      var comp;\r\n      var perspectiveStyle;\r\n      var containerStyle;\r\n      for (i = 0; i < len; i += 1) {\r\n        comp = this.comp.threeDElements[i];\r\n        if (comp.type === '3d') {\r\n          if (hasMatrixChanged) {\r\n            var matValue = this.mat.toCSS();\r\n            containerStyle = comp.container.style;\r\n            containerStyle.transform = matValue;\r\n            containerStyle.webkitTransform = matValue;\r\n          }\r\n          if (this.pe._mdf) {\r\n            perspectiveStyle = comp.perspectiveElem.style;\r\n            perspectiveStyle.perspective = this.pe.v + 'px';\r\n            perspectiveStyle.webkitPerspective = this.pe.v + 'px';\r\n          }\r\n        }\r\n      }\r\n      this.mat.clone(this._prevMat);\r\n    }\r\n  }\r\n  this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function (num) {\r\n  this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function () {\r\n};\r\nHCameraElement.prototype.getBaseElement = function () { return null; };\r\n\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function () {};\r\n\r\n/* global createTag, AnimationItem */\r\n/* exported animationManager */\r\n\r\nvar animationManager = (function () {\r\n  var moduleOb = {};\r\n  var registeredAnimations = [];\r\n  var initTime = 0;\r\n  var len = 0;\r\n  var playingAnimationsNum = 0;\r\n  var _stopped = true;\r\n  var _isFrozen = false;\r\n\r\n  function removeElement(ev) {\r\n    var i = 0;\r\n    var animItem = ev.target;\r\n    while (i < len) {\r\n      if (registeredAnimations[i].animation === animItem) {\r\n        registeredAnimations.splice(i, 1);\r\n        i -= 1;\r\n        len -= 1;\r\n        if (!animItem.isPaused) {\r\n          subtractPlayingCount();\r\n        }\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n\r\n  function registerAnimation(element, animationData) {\r\n    if (!element) {\r\n      return null;\r\n    }\r\n    var i = 0;\r\n    while (i < len) {\r\n      if (registeredAnimations[i].elem === element && registeredAnimations[i].elem !== null) {\r\n        return registeredAnimations[i].animation;\r\n      }\r\n      i += 1;\r\n    }\r\n    var animItem = new AnimationItem();\r\n    setupAnimation(animItem, element);\r\n    animItem.setData(element, animationData);\r\n    return animItem;\r\n  }\r\n\r\n  function getRegisteredAnimations() {\r\n    var i;\r\n    var lenAnims = registeredAnimations.length;\r\n    var animations = [];\r\n    for (i = 0; i < lenAnims; i += 1) {\r\n      animations.push(registeredAnimations[i].animation);\r\n    }\r\n    return animations;\r\n  }\r\n\r\n  function addPlayingCount() {\r\n    playingAnimationsNum += 1;\r\n    activate();\r\n  }\r\n\r\n  function subtractPlayingCount() {\r\n    playingAnimationsNum -= 1;\r\n  }\r\n\r\n  function setupAnimation(animItem, element) {\r\n    animItem.addEventListener('destroy', removeElement);\r\n    animItem.addEventListener('_active', addPlayingCount);\r\n    animItem.addEventListener('_idle', subtractPlayingCount);\r\n    registeredAnimations.push({ elem: element, animation: animItem });\r\n    len += 1;\r\n  }\r\n\r\n  function loadAnimation(params) {\r\n    var animItem = new AnimationItem();\r\n    setupAnimation(animItem, null);\r\n    animItem.setParams(params);\r\n    return animItem;\r\n  }\r\n\r\n  function setSpeed(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setSpeed(val, animation);\r\n    }\r\n  }\r\n\r\n  function setDirection(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setDirection(val, animation);\r\n    }\r\n  }\r\n\r\n  function play(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.play(animation);\r\n    }\r\n  }\r\n  function resume(nowTime) {\r\n    var elapsedTime = nowTime - initTime;\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n    }\r\n    initTime = nowTime;\r\n    if (playingAnimationsNum && !_isFrozen) {\r\n      window.requestAnimationFrame(resume);\r\n    } else {\r\n      _stopped = true;\r\n    }\r\n  }\r\n\r\n  function first(nowTime) {\r\n    initTime = nowTime;\r\n    window.requestAnimationFrame(resume);\r\n  }\r\n\r\n  function pause(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.pause(animation);\r\n    }\r\n  }\r\n\r\n  function goToAndStop(value, isFrame, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.goToAndStop(value, isFrame, animation);\r\n    }\r\n  }\r\n\r\n  function stop(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.stop(animation);\r\n    }\r\n  }\r\n\r\n  function togglePause(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.togglePause(animation);\r\n    }\r\n  }\r\n\r\n  function destroy(animation) {\r\n    var i;\r\n    for (i = (len - 1); i >= 0; i -= 1) {\r\n      registeredAnimations[i].animation.destroy(animation);\r\n    }\r\n  }\r\n\r\n  function searchAnimations(animationData, standalone, renderer) {\r\n    var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n      [].slice.call(document.getElementsByClassName('bodymovin')));\r\n    var i;\r\n    var lenAnims = animElements.length;\r\n    for (i = 0; i < lenAnims; i += 1) {\r\n      if (renderer) {\r\n        animElements[i].setAttribute('data-bm-type', renderer);\r\n      }\r\n      registerAnimation(animElements[i], animationData);\r\n    }\r\n    if (standalone && lenAnims === 0) {\r\n      if (!renderer) {\r\n        renderer = 'svg';\r\n      }\r\n      var body = document.getElementsByTagName('body')[0];\r\n      body.innerText = '';\r\n      var div = createTag('div');\r\n      div.style.width = '100%';\r\n      div.style.height = '100%';\r\n      div.setAttribute('data-bm-type', renderer);\r\n      body.appendChild(div);\r\n      registerAnimation(div, animationData);\r\n    }\r\n  }\r\n\r\n  function resize() {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.resize();\r\n    }\r\n  }\r\n\r\n  function activate() {\r\n    if (!_isFrozen && playingAnimationsNum) {\r\n      if (_stopped) {\r\n        window.requestAnimationFrame(first);\r\n        _stopped = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  function freeze() {\r\n    _isFrozen = true;\r\n  }\r\n\r\n  function unfreeze() {\r\n    _isFrozen = false;\r\n    activate();\r\n  }\r\n\r\n  function setVolume(val, animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.setVolume(val, animation);\r\n    }\r\n  }\r\n\r\n  function mute(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.mute(animation);\r\n    }\r\n  }\r\n\r\n  function unmute(animation) {\r\n    var i;\r\n    for (i = 0; i < len; i += 1) {\r\n      registeredAnimations[i].animation.unmute(animation);\r\n    }\r\n  }\r\n\r\n  moduleOb.registerAnimation = registerAnimation;\r\n  moduleOb.loadAnimation = loadAnimation;\r\n  moduleOb.setSpeed = setSpeed;\r\n  moduleOb.setDirection = setDirection;\r\n  moduleOb.play = play;\r\n  moduleOb.pause = pause;\r\n  moduleOb.stop = stop;\r\n  moduleOb.togglePause = togglePause;\r\n  moduleOb.searchAnimations = searchAnimations;\r\n  moduleOb.resize = resize;\r\n  // moduleOb.start = start;\r\n  moduleOb.goToAndStop = goToAndStop;\r\n  moduleOb.destroy = destroy;\r\n  moduleOb.freeze = freeze;\r\n  moduleOb.unfreeze = unfreeze;\r\n  moduleOb.setVolume = setVolume;\r\n  moduleOb.mute = mute;\r\n  moduleOb.unmute = unmute;\r\n  moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n  return moduleOb;\r\n}());\r\n\r\n/* global createElementID, subframeEnabled, ProjectInterface, ImagePreloader, audioControllerFactory, extendPrototype, BaseEvent,\r\nCanvasRenderer, SVGRenderer, HybridRenderer, assetLoader, dataManager, expressionsPlugin, BMEnterFrameEvent, BMCompleteLoopEvent,\r\nBMCompleteEvent, BMSegmentStartEvent, BMDestroyEvent, BMEnterFrameEvent, BMCompleteLoopEvent, BMCompleteEvent, BMSegmentStartEvent,\r\nBMDestroyEvent, BMRenderFrameErrorEvent, BMConfigErrorEvent, markerParser */\r\n\r\nvar AnimationItem = function () {\r\n  this._cbs = [];\r\n  this.name = '';\r\n  this.path = '';\r\n  this.isLoaded = false;\r\n  this.currentFrame = 0;\r\n  this.currentRawFrame = 0;\r\n  this.firstFrame = 0;\r\n  this.totalFrames = 0;\r\n  this.frameRate = 0;\r\n  this.frameMult = 0;\r\n  this.playSpeed = 1;\r\n  this.playDirection = 1;\r\n  this.playCount = 0;\r\n  this.animationData = {};\r\n  this.assets = [];\r\n  this.isPaused = true;\r\n  this.autoplay = false;\r\n  this.loop = true;\r\n  this.renderer = null;\r\n  this.animationID = createElementID();\r\n  this.assetsPath = '';\r\n  this.timeCompleted = 0;\r\n  this.segmentPos = 0;\r\n  this.isSubframeEnabled = subframeEnabled;\r\n  this.segments = [];\r\n  this._idle = true;\r\n  this._completedLoop = false;\r\n  this.projectInterface = ProjectInterface();\r\n  this.imagePreloader = new ImagePreloader();\r\n  this.audioController = audioControllerFactory();\r\n  this.markers = [];\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function (params) {\r\n  if (params.wrapper || params.container) {\r\n    this.wrapper = params.wrapper || params.container;\r\n  }\r\n  var animType = 'svg';\r\n  if (params.animType) {\r\n    animType = params.animType;\r\n  } else if (params.renderer) {\r\n    animType = params.renderer;\r\n  }\r\n  switch (animType) {\r\n    case 'canvas':\r\n      this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n      break;\r\n    case 'svg':\r\n      this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n      break;\r\n    default:\r\n      this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n      break;\r\n  }\r\n  this.imagePreloader.setCacheType(animType, this.renderer.globalData.defs);\r\n  this.renderer.setProjectInterface(this.projectInterface);\r\n  this.animType = animType;\r\n  if (params.loop === ''\r\n        || params.loop === null\r\n        || params.loop === undefined\r\n        || params.loop === true) {\r\n    this.loop = true;\r\n  } else if (params.loop === false) {\r\n    this.loop = false;\r\n  } else {\r\n    this.loop = parseInt(params.loop, 10);\r\n  }\r\n  this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n  this.name = params.name ? params.name : '';\r\n  this.autoloadSegments = Object.prototype.hasOwnProperty.call(params, 'autoloadSegments') ? params.autoloadSegments : true;\r\n  this.assetsPath = params.assetsPath;\r\n  this.initialSegment = params.initialSegment;\r\n  if (params.audioFactory) {\r\n    this.audioController.setAudioFactory(params.audioFactory);\r\n  }\r\n  if (params.animationData) {\r\n    this.configAnimation(params.animationData);\r\n  } else if (params.path) {\r\n    if (params.path.lastIndexOf('\\\\') !== -1) {\r\n      this.path = params.path.substr(0, params.path.lastIndexOf('\\\\') + 1);\r\n    } else {\r\n      this.path = params.path.substr(0, params.path.lastIndexOf('/') + 1);\r\n    }\r\n    this.fileName = params.path.substr(params.path.lastIndexOf('/') + 1);\r\n    this.fileName = this.fileName.substr(0, this.fileName.lastIndexOf('.json'));\r\n\r\n    assetLoader.load(params.path, this.configAnimation.bind(this), function () {\r\n      this.trigger('data_failed');\r\n    }.bind(this));\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n  if (animationData) {\r\n    if (typeof animationData !== 'object') {\r\n      animationData = JSON.parse(animationData);\r\n    }\r\n  }\r\n  var params = {\r\n    wrapper: wrapper,\r\n    animationData: animationData,\r\n  };\r\n  var wrapperAttributes = wrapper.attributes;\r\n\r\n  params.path = wrapperAttributes.getNamedItem('data-animation-path') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-animation-path').value\r\n    : wrapperAttributes.getNamedItem('data-bm-path') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-path').value\r\n      : wrapperAttributes.getNamedItem('bm-path')\r\n        ? wrapperAttributes.getNamedItem('bm-path').value\r\n        : '';\r\n  params.animType = wrapperAttributes.getNamedItem('data-anim-type') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-type').value\r\n    : wrapperAttributes.getNamedItem('data-bm-type') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-type').value\r\n      : wrapperAttributes.getNamedItem('bm-type') // eslint-disable-line no-nested-ternary\r\n        ? wrapperAttributes.getNamedItem('bm-type').value\r\n        : wrapperAttributes.getNamedItem('data-bm-renderer') // eslint-disable-line no-nested-ternary\r\n          ? wrapperAttributes.getNamedItem('data-bm-renderer').value\r\n          : wrapperAttributes.getNamedItem('bm-renderer')\r\n            ? wrapperAttributes.getNamedItem('bm-renderer').value\r\n            : 'canvas';\r\n\r\n  var loop = wrapperAttributes.getNamedItem('data-anim-loop') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-loop').value\r\n    : wrapperAttributes.getNamedItem('data-bm-loop') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-loop').value\r\n      : wrapperAttributes.getNamedItem('bm-loop')\r\n        ? wrapperAttributes.getNamedItem('bm-loop').value\r\n        : '';\r\n  if (loop === 'false') {\r\n    params.loop = false;\r\n  } else if (loop === 'true') {\r\n    params.loop = true;\r\n  } else if (loop !== '') {\r\n    params.loop = parseInt(loop, 10);\r\n  }\r\n  var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-autoplay').value\r\n    : wrapperAttributes.getNamedItem('data-bm-autoplay') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-autoplay').value\r\n      : wrapperAttributes.getNamedItem('bm-autoplay')\r\n        ? wrapperAttributes.getNamedItem('bm-autoplay').value\r\n        : true;\r\n  params.autoplay = autoplay !== 'false';\r\n\r\n  params.name = wrapperAttributes.getNamedItem('data-name') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-name').value\r\n    : wrapperAttributes.getNamedItem('data-bm-name') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-name').value\r\n      : wrapperAttributes.getNamedItem('bm-name')\r\n        ? wrapperAttributes.getNamedItem('bm-name').value\r\n        : '';\r\n  var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') // eslint-disable-line no-nested-ternary\r\n    ? wrapperAttributes.getNamedItem('data-anim-prerender').value\r\n    : wrapperAttributes.getNamedItem('data-bm-prerender') // eslint-disable-line no-nested-ternary\r\n      ? wrapperAttributes.getNamedItem('data-bm-prerender').value\r\n      : wrapperAttributes.getNamedItem('bm-prerender')\r\n        ? wrapperAttributes.getNamedItem('bm-prerender').value\r\n        : '';\r\n\r\n  if (prerender === 'false') {\r\n    params.prerender = false;\r\n  }\r\n  this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function (data) {\r\n  if (data.op > this.animationData.op) {\r\n    this.animationData.op = data.op;\r\n    this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n  }\r\n  var layers = this.animationData.layers;\r\n  var i;\r\n  var len = layers.length;\r\n  var newLayers = data.layers;\r\n  var j;\r\n  var jLen = newLayers.length;\r\n  for (j = 0; j < jLen; j += 1) {\r\n    i = 0;\r\n    while (i < len) {\r\n      if (layers[i].id === newLayers[j].id) {\r\n        layers[i] = newLayers[j];\r\n        break;\r\n      }\r\n      i += 1;\r\n    }\r\n  }\r\n  if (data.chars || data.fonts) {\r\n    this.renderer.globalData.fontManager.addChars(data.chars);\r\n    this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n  }\r\n  if (data.assets) {\r\n    len = data.assets.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.animationData.assets.push(data.assets[i]);\r\n    }\r\n  }\r\n  this.animationData.__complete = false;\r\n  dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n  this.renderer.includeLayers(data.layers);\r\n  if (expressionsPlugin) {\r\n    expressionsPlugin.initExpressions(this);\r\n  }\r\n  this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function () {\r\n  var segments = this.animationData.segments;\r\n  if (!segments || segments.length === 0 || !this.autoloadSegments) {\r\n    this.trigger('data_ready');\r\n    this.timeCompleted = this.totalFrames;\r\n    return;\r\n  }\r\n  var segment = segments.shift();\r\n  this.timeCompleted = segment.time * this.frameRate;\r\n  var segmentPath = this.path + this.fileName + '_' + this.segmentPos + '.json';\r\n  this.segmentPos += 1;\r\n  assetLoader.load(segmentPath, this.includeLayers.bind(this), function () {\r\n    this.trigger('data_failed');\r\n  }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function () {\r\n  var segments = this.animationData.segments;\r\n  if (!segments) {\r\n    this.timeCompleted = this.totalFrames;\r\n  }\r\n  this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function () {\r\n  this.trigger('loaded_images');\r\n  this.checkLoaded();\r\n};\r\n\r\nAnimationItem.prototype.preloadImages = function () {\r\n  this.imagePreloader.setAssetsPath(this.assetsPath);\r\n  this.imagePreloader.setPath(this.path);\r\n  this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n  if (!this.renderer) {\r\n    return;\r\n  }\r\n  try {\r\n    this.animationData = animData;\r\n\r\n    if (this.initialSegment) {\r\n      this.totalFrames = Math.floor(this.initialSegment[1] - this.initialSegment[0]);\r\n      this.firstFrame = Math.round(this.initialSegment[0]);\r\n    } else {\r\n      this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n      this.firstFrame = Math.round(this.animationData.ip);\r\n    }\r\n    this.renderer.configAnimation(animData);\r\n    if (!animData.assets) {\r\n      animData.assets = [];\r\n    }\r\n\r\n    this.assets = this.animationData.assets;\r\n    this.frameRate = this.animationData.fr;\r\n    this.frameMult = this.animationData.fr / 1000;\r\n    this.renderer.searchExtraCompositions(animData.assets);\r\n    this.markers = markerParser(animData.markers || []);\r\n    this.trigger('config_ready');\r\n    this.preloadImages();\r\n    this.loadSegments();\r\n    this.updaFrameModifier();\r\n    this.waitForFontsLoaded();\r\n    if (this.isPaused) {\r\n      this.audioController.pause();\r\n    }\r\n  } catch (error) {\r\n    this.triggerConfigError(error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function () {\r\n  if (!this.renderer) {\r\n    return;\r\n  }\r\n  if (this.renderer.globalData.fontManager.isLoaded) {\r\n    this.checkLoaded();\r\n  } else {\r\n    setTimeout(this.waitForFontsLoaded.bind(this), 20);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n  if (!this.isLoaded\r\n        && this.renderer.globalData.fontManager.isLoaded\r\n        && (this.imagePreloader.loadedImages() || this.renderer.rendererType !== 'canvas')\r\n        && (this.imagePreloader.loadedFootages())\r\n  ) {\r\n    this.isLoaded = true;\r\n    dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n    if (expressionsPlugin) {\r\n      expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.renderer.initItems();\r\n    setTimeout(function () {\r\n      this.trigger('DOMLoaded');\r\n    }.bind(this), 0);\r\n    this.gotoFrame();\r\n    if (this.autoplay) {\r\n      this.play();\r\n    }\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n  this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function (flag) {\r\n  this.isSubframeEnabled = !!flag;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n  this.currentFrame = this.isSubframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame; // eslint-disable-line no-bitwise\r\n\r\n  if (this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted) {\r\n    this.currentFrame = this.timeCompleted;\r\n  }\r\n  this.trigger('enterFrame');\r\n  this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n  if (this.isLoaded === false || !this.renderer) {\r\n    return;\r\n  }\r\n  try {\r\n    this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n  } catch (error) {\r\n    this.triggerRenderFrameError(error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === true) {\r\n    this.isPaused = false;\r\n    this.audioController.resume();\r\n    if (this._idle) {\r\n      this._idle = false;\r\n      this.trigger('_active');\r\n    }\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === false) {\r\n    this.isPaused = true;\r\n    this._idle = true;\r\n    this.trigger('_idle');\r\n    this.audioController.pause();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  if (this.isPaused === true) {\r\n    this.play();\r\n  } else {\r\n    this.pause();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.pause();\r\n  this.playCount = 0;\r\n  this._completedLoop = false;\r\n  this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.getMarkerData = function (markerName) {\r\n  var marker;\r\n  for (var i = 0; i < this.markers.length; i += 1) {\r\n    marker = this.markers[i];\r\n    if (marker.payload && marker.payload.name === markerName) {\r\n      return marker;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  var numValue = Number(value);\r\n  if (isNaN(numValue)) {\r\n    var marker = this.getMarkerData(value);\r\n    if (marker) {\r\n      this.goToAndStop(marker.time, true);\r\n    }\r\n  } else if (isFrame) {\r\n    this.setCurrentRawFrameValue(value);\r\n  } else {\r\n    this.setCurrentRawFrameValue(value * this.frameModifier);\r\n  }\r\n  this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  var numValue = Number(value);\r\n  if (isNaN(numValue)) {\r\n    var marker = this.getMarkerData(value);\r\n    if (marker) {\r\n      if (!marker.duration) {\r\n        this.goToAndStop(marker.time, true);\r\n      } else {\r\n        this.playSegments([marker.time, marker.time + marker.duration], true);\r\n      }\r\n    }\r\n  } else {\r\n    this.goToAndStop(numValue, isFrame, name);\r\n  }\r\n  this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n  if (this.isPaused === true || this.isLoaded === false) {\r\n    return;\r\n  }\r\n  var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n  var _isComplete = false;\r\n  // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n  // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n  if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n    if (!this.loop || this.playCount === this.loop) {\r\n      if (!this.checkSegments(nextValue > this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n        _isComplete = true;\r\n        nextValue = this.totalFrames - 1;\r\n      }\r\n    } else if (nextValue >= this.totalFrames) {\r\n      this.playCount += 1;\r\n      if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n        this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n        this._completedLoop = true;\r\n        this.trigger('loopComplete');\r\n      }\r\n    } else {\r\n      this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n  } else if (nextValue < 0) {\r\n    if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n      if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) { // eslint-disable-line no-plusplus\r\n        this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n        if (!this._completedLoop) {\r\n          this._completedLoop = true;\r\n        } else {\r\n          this.trigger('loopComplete');\r\n        }\r\n      } else {\r\n        _isComplete = true;\r\n        nextValue = 0;\r\n      }\r\n    }\r\n  } else {\r\n    this.setCurrentRawFrameValue(nextValue);\r\n  }\r\n  if (_isComplete) {\r\n    this.setCurrentRawFrameValue(nextValue);\r\n    this.pause();\r\n    this.trigger('complete');\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function (arr, offset) {\r\n  this.playCount = 0;\r\n  if (arr[1] < arr[0]) {\r\n    if (this.frameModifier > 0) {\r\n      if (this.playSpeed < 0) {\r\n        this.setSpeed(-this.playSpeed);\r\n      } else {\r\n        this.setDirection(-1);\r\n      }\r\n    }\r\n    this.totalFrames = arr[0] - arr[1];\r\n    this.timeCompleted = this.totalFrames;\r\n    this.firstFrame = arr[1];\r\n    this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n  } else if (arr[1] > arr[0]) {\r\n    if (this.frameModifier < 0) {\r\n      if (this.playSpeed < 0) {\r\n        this.setSpeed(-this.playSpeed);\r\n      } else {\r\n        this.setDirection(1);\r\n      }\r\n    }\r\n    this.totalFrames = arr[1] - arr[0];\r\n    this.timeCompleted = this.totalFrames;\r\n    this.firstFrame = arr[0];\r\n    this.setCurrentRawFrameValue(0.001 + offset);\r\n  }\r\n  this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init, end) {\r\n  var pendingFrame = -1;\r\n  if (this.isPaused) {\r\n    if (this.currentRawFrame + this.firstFrame < init) {\r\n      pendingFrame = init;\r\n    } else if (this.currentRawFrame + this.firstFrame > end) {\r\n      pendingFrame = end - init;\r\n    }\r\n  }\r\n\r\n  this.firstFrame = init;\r\n  this.totalFrames = end - init;\r\n  this.timeCompleted = this.totalFrames;\r\n  if (pendingFrame !== -1) {\r\n    this.goToAndStop(pendingFrame, true);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n  if (forceFlag) {\r\n    this.segments.length = 0;\r\n  }\r\n  if (typeof arr[0] === 'object') {\r\n    var i;\r\n    var len = arr.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      this.segments.push(arr[i]);\r\n    }\r\n  } else {\r\n    this.segments.push(arr);\r\n  }\r\n  if (this.segments.length && forceFlag) {\r\n    this.adjustSegment(this.segments.shift(), 0);\r\n  }\r\n  if (this.isPaused) {\r\n    this.play();\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n  this.segments.length = 0;\r\n  this.segments.push([this.animationData.ip, this.animationData.op]);\r\n  // this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n  if (forceFlag) {\r\n    this.checkSegments(0);\r\n  }\r\n};\r\nAnimationItem.prototype.checkSegments = function (offset) {\r\n  if (this.segments.length) {\r\n    this.adjustSegment(this.segments.shift(), offset);\r\n    return true;\r\n  }\r\n  return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n  if ((name && this.name !== name) || !this.renderer) {\r\n    return;\r\n  }\r\n  this.renderer.destroy();\r\n  this.imagePreloader.destroy();\r\n  this.trigger('destroy');\r\n  this._cbs = null;\r\n  this.onEnterFrame = null;\r\n  this.onLoopComplete = null;\r\n  this.onComplete = null;\r\n  this.onSegmentStart = null;\r\n  this.onDestroy = null;\r\n  this.renderer = null;\r\n  this.renderer = null;\r\n  this.imagePreloader = null;\r\n  this.projectInterface = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function (value) {\r\n  this.currentRawFrame = value;\r\n  this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n  this.playSpeed = val;\r\n  this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n  this.playDirection = val < 0 ? -1 : 1;\r\n  this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setVolume = function (val, name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.setVolume(val);\r\n};\r\n\r\nAnimationItem.prototype.getVolume = function () {\r\n  return this.audioController.getVolume();\r\n};\r\n\r\nAnimationItem.prototype.mute = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.mute();\r\n};\r\n\r\nAnimationItem.prototype.unmute = function (name) {\r\n  if (name && this.name !== name) {\r\n    return;\r\n  }\r\n  this.audioController.unmute();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n  this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n  this.audioController.setRate(this.playSpeed * this.playDirection);\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n  return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n  var path = '';\r\n  if (assetData.e) {\r\n    path = assetData.p;\r\n  } else if (this.assetsPath) {\r\n    var imagePath = assetData.p;\r\n    if (imagePath.indexOf('images/') !== -1) {\r\n      imagePath = imagePath.split('/')[1];\r\n    }\r\n    path = this.assetsPath + imagePath;\r\n  } else {\r\n    path = this.path;\r\n    path += assetData.u ? assetData.u : '';\r\n    path += assetData.p;\r\n  }\r\n  return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n  var i = 0;\r\n  var len = this.assets.length;\r\n  while (i < len) {\r\n    if (id === this.assets[i].id) {\r\n      return this.assets[i];\r\n    }\r\n    i += 1;\r\n  }\r\n  return null;\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n  this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n  this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n  return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function (name) {\r\n  if (this._cbs && this._cbs[name]) {\r\n    switch (name) {\r\n      case 'enterFrame':\r\n        this.triggerEvent(name, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameModifier));\r\n        break;\r\n      case 'loopComplete':\r\n        this.triggerEvent(name, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\r\n        break;\r\n      case 'complete':\r\n        this.triggerEvent(name, new BMCompleteEvent(name, this.frameMult));\r\n        break;\r\n      case 'segmentStart':\r\n        this.triggerEvent(name, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\r\n        break;\r\n      case 'destroy':\r\n        this.triggerEvent(name, new BMDestroyEvent(name, this));\r\n        break;\r\n      default:\r\n        this.triggerEvent(name);\r\n    }\r\n  }\r\n  if (name === 'enterFrame' && this.onEnterFrame) {\r\n    this.onEnterFrame.call(this, new BMEnterFrameEvent(name, this.currentFrame, this.totalFrames, this.frameMult));\r\n  }\r\n  if (name === 'loopComplete' && this.onLoopComplete) {\r\n    this.onLoopComplete.call(this, new BMCompleteLoopEvent(name, this.loop, this.playCount, this.frameMult));\r\n  }\r\n  if (name === 'complete' && this.onComplete) {\r\n    this.onComplete.call(this, new BMCompleteEvent(name, this.frameMult));\r\n  }\r\n  if (name === 'segmentStart' && this.onSegmentStart) {\r\n    this.onSegmentStart.call(this, new BMSegmentStartEvent(name, this.firstFrame, this.totalFrames));\r\n  }\r\n  if (name === 'destroy' && this.onDestroy) {\r\n    this.onDestroy.call(this, new BMDestroyEvent(name, this));\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.triggerRenderFrameError = function (nativeError) {\r\n  var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\r\n  this.triggerEvent('error', error);\r\n\r\n  if (this.onError) {\r\n    this.onError.call(this, error);\r\n  }\r\n};\r\n\r\nAnimationItem.prototype.triggerConfigError = function (nativeError) {\r\n  var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\r\n  this.triggerEvent('error', error);\r\n\r\n  if (this.onError) {\r\n    this.onError.call(this, error);\r\n  }\r\n};\r\n\r\n/* global CompExpressionInterface, expressionsPlugin: writable */\r\n/* exported expressionsPlugin */\r\n\r\nvar Expressions = (function () {\r\n  var ob = {};\r\n  ob.initExpressions = initExpressions;\r\n\r\n  function initExpressions(animation) {\r\n    var stackCount = 0;\r\n    var registers = [];\r\n\r\n    function pushExpression() {\r\n      stackCount += 1;\r\n    }\r\n\r\n    function popExpression() {\r\n      stackCount -= 1;\r\n      if (stackCount === 0) {\r\n        releaseInstances();\r\n      }\r\n    }\r\n\r\n    function registerExpressionProperty(expression) {\r\n      if (registers.indexOf(expression) === -1) {\r\n        registers.push(expression);\r\n      }\r\n    }\r\n\r\n    function releaseInstances() {\r\n      var i;\r\n      var len = registers.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        registers[i].release();\r\n      }\r\n      registers.length = 0;\r\n    }\r\n\r\n    animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n    animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n    animation.renderer.globalData.pushExpression = pushExpression;\r\n    animation.renderer.globalData.popExpression = popExpression;\r\n    animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n  }\r\n  return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\n/* eslint-disable camelcase, no-unused-vars */\r\n/* global BMMath, BezierFactory, createTypedArray, degToRads, shapePool */\r\n\r\nvar ExpressionManager = (function () {\r\n  'use strict';\r\n\r\n  var ob = {};\r\n  var Math = BMMath;\r\n  var window = null;\r\n  var document = null;\r\n\r\n  function $bm_isInstanceOfArray(arr) {\r\n    return arr.constructor === Array || arr.constructor === Float32Array;\r\n  }\r\n\r\n  function isNumerable(tOfV, v) {\r\n    return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n  }\r\n\r\n  function $bm_neg(a) {\r\n    var tOfA = typeof a;\r\n    if (tOfA === 'number' || tOfA === 'boolean' || a instanceof Number) {\r\n      return -a;\r\n    }\r\n    if ($bm_isInstanceOfArray(a)) {\r\n      var i;\r\n      var lenA = a.length;\r\n      var retArr = [];\r\n      for (i = 0; i < lenA; i += 1) {\r\n        retArr[i] = -a[i];\r\n      }\r\n      return retArr;\r\n    }\r\n    if (a.propType) {\r\n      return a.v;\r\n    }\r\n    return -a;\r\n  }\r\n\r\n  var easeInBez = BezierFactory.getBezierEasing(0.333, 0, 0.833, 0.833, 'easeIn').get;\r\n  var easeOutBez = BezierFactory.getBezierEasing(0.167, 0.167, 0.667, 1, 'easeOut').get;\r\n  var easeInOutBez = BezierFactory.getBezierEasing(0.33, 0, 0.667, 1, 'easeInOut').get;\r\n\r\n  function sum(a, b) {\r\n    var tOfA = typeof a;\r\n    var tOfB = typeof b;\r\n    if (tOfA === 'string' || tOfB === 'string') {\r\n      return a + b;\r\n    }\r\n    if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n      return a + b;\r\n    }\r\n    if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\r\n      a = a.slice(0);\r\n      a[0] += b;\r\n      return a;\r\n    }\r\n    if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\r\n      b = b.slice(0);\r\n      b[0] = a + b[0];\r\n      return b;\r\n    }\r\n    if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\r\n      var i = 0;\r\n      var lenA = a.length;\r\n      var lenB = b.length;\r\n      var retArr = [];\r\n      while (i < lenA || i < lenB) {\r\n        if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\r\n          retArr[i] = a[i] + b[i];\r\n        } else {\r\n          retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n        }\r\n        i += 1;\r\n      }\r\n      return retArr;\r\n    }\r\n    return 0;\r\n  }\r\n  var add = sum;\r\n\r\n  function sub(a, b) {\r\n    var tOfA = typeof a;\r\n    var tOfB = typeof b;\r\n    if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n      if (tOfA === 'string') {\r\n        a = parseInt(a, 10);\r\n      }\r\n      if (tOfB === 'string') {\r\n        b = parseInt(b, 10);\r\n      }\r\n      return a - b;\r\n    }\r\n    if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\r\n      a = a.slice(0);\r\n      a[0] -= b;\r\n      return a;\r\n    }\r\n    if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\r\n      b = b.slice(0);\r\n      b[0] = a - b[0];\r\n      return b;\r\n    }\r\n    if ($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)) {\r\n      var i = 0;\r\n      var lenA = a.length;\r\n      var lenB = b.length;\r\n      var retArr = [];\r\n      while (i < lenA || i < lenB) {\r\n        if ((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)) {\r\n          retArr[i] = a[i] - b[i];\r\n        } else {\r\n          retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n        }\r\n        i += 1;\r\n      }\r\n      return retArr;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function mul(a, b) {\r\n    var tOfA = typeof a;\r\n    var tOfB = typeof b;\r\n    var arr;\r\n    if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n      return a * b;\r\n    }\r\n\r\n    var i;\r\n    var len;\r\n    if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\r\n      len = a.length;\r\n      arr = createTypedArray('float32', len);\r\n      for (i = 0; i < len; i += 1) {\r\n        arr[i] = a[i] * b;\r\n      }\r\n      return arr;\r\n    }\r\n    if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\r\n      len = b.length;\r\n      arr = createTypedArray('float32', len);\r\n      for (i = 0; i < len; i += 1) {\r\n        arr[i] = a * b[i];\r\n      }\r\n      return arr;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  function div(a, b) {\r\n    var tOfA = typeof a;\r\n    var tOfB = typeof b;\r\n    var arr;\r\n    if (isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n      return a / b;\r\n    }\r\n    var i;\r\n    var len;\r\n    if ($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)) {\r\n      len = a.length;\r\n      arr = createTypedArray('float32', len);\r\n      for (i = 0; i < len; i += 1) {\r\n        arr[i] = a[i] / b;\r\n      }\r\n      return arr;\r\n    }\r\n    if (isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)) {\r\n      len = b.length;\r\n      arr = createTypedArray('float32', len);\r\n      for (i = 0; i < len; i += 1) {\r\n        arr[i] = a / b[i];\r\n      }\r\n      return arr;\r\n    }\r\n    return 0;\r\n  }\r\n  function mod(a, b) {\r\n    if (typeof a === 'string') {\r\n      a = parseInt(a, 10);\r\n    }\r\n    if (typeof b === 'string') {\r\n      b = parseInt(b, 10);\r\n    }\r\n    return a % b;\r\n  }\r\n  var $bm_sum = sum;\r\n  var $bm_sub = sub;\r\n  var $bm_mul = mul;\r\n  var $bm_div = div;\r\n  var $bm_mod = mod;\r\n\r\n  function clamp(num, min, max) {\r\n    if (min > max) {\r\n      var mm = max;\r\n      max = min;\r\n      min = mm;\r\n    }\r\n    return Math.min(Math.max(num, min), max);\r\n  }\r\n\r\n  function radiansToDegrees(val) {\r\n    return val / degToRads;\r\n  }\r\n  var radians_to_degrees = radiansToDegrees;\r\n\r\n  function degreesToRadians(val) {\r\n    return val * degToRads;\r\n  }\r\n  var degrees_to_radians = radiansToDegrees;\r\n\r\n  var helperLengthArray = [0, 0, 0, 0, 0, 0];\r\n\r\n  function length(arr1, arr2) {\r\n    if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n      arr2 = arr2 || 0;\r\n      return Math.abs(arr1 - arr2);\r\n    }\r\n    if (!arr2) {\r\n      arr2 = helperLengthArray;\r\n    }\r\n    var i;\r\n    var len = Math.min(arr1.length, arr2.length);\r\n    var addedLength = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n    }\r\n    return Math.sqrt(addedLength);\r\n  }\r\n\r\n  function normalize(vec) {\r\n    return div(vec, length(vec));\r\n  }\r\n\r\n  function rgbToHsl(val) {\r\n    var r = val[0]; var g = val[1]; var b = val[2];\r\n    var max = Math.max(r, g, b);\r\n    var min = Math.min(r, g, b);\r\n    var h;\r\n    var s;\r\n    var l = (max + min) / 2;\r\n\r\n    if (max === min) {\r\n      h = 0; // achromatic\r\n      s = 0; // achromatic\r\n    } else {\r\n      var d = max - min;\r\n      s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n      switch (max) {\r\n        case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n        case g: h = (b - r) / d + 2; break;\r\n        case b: h = (r - g) / d + 4; break;\r\n        default: break;\r\n      }\r\n      h /= 6;\r\n    }\r\n\r\n    return [h, s, l, val[3]];\r\n  }\r\n\r\n  function hue2rgb(p, q, t) {\r\n    if (t < 0) t += 1;\r\n    if (t > 1) t -= 1;\r\n    if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n    if (t < 1 / 2) return q;\r\n    if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n    return p;\r\n  }\r\n\r\n  function hslToRgb(val) {\r\n    var h = val[0];\r\n    var s = val[1];\r\n    var l = val[2];\r\n\r\n    var r;\r\n    var g;\r\n    var b;\r\n\r\n    if (s === 0) {\r\n      r = l; // achromatic\r\n      b = l; // achromatic\r\n      g = l; // achromatic\r\n    } else {\r\n      var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      var p = 2 * l - q;\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n\r\n    return [r, g, b, val[3]];\r\n  }\r\n\r\n  function linear(t, tMin, tMax, value1, value2) {\r\n    if (value1 === undefined || value2 === undefined) {\r\n      value1 = tMin;\r\n      value2 = tMax;\r\n      tMin = 0;\r\n      tMax = 1;\r\n    }\r\n    if (tMax < tMin) {\r\n      var _tMin = tMax;\r\n      tMax = tMin;\r\n      tMin = _tMin;\r\n    }\r\n    if (t <= tMin) {\r\n      return value1;\r\n    } if (t >= tMax) {\r\n      return value2;\r\n    }\r\n    var perc = tMax === tMin ? 0 : (t - tMin) / (tMax - tMin);\r\n    if (!value1.length) {\r\n      return value1 + (value2 - value1) * perc;\r\n    }\r\n    var i;\r\n    var len = value1.length;\r\n    var arr = createTypedArray('float32', len);\r\n    for (i = 0; i < len; i += 1) {\r\n      arr[i] = value1[i] + (value2[i] - value1[i]) * perc;\r\n    }\r\n    return arr;\r\n  }\r\n  function random(min, max) {\r\n    if (max === undefined) {\r\n      if (min === undefined) {\r\n        min = 0;\r\n        max = 1;\r\n      } else {\r\n        max = min;\r\n        min = undefined;\r\n      }\r\n    }\r\n    if (max.length) {\r\n      var i;\r\n      var len = max.length;\r\n      if (!min) {\r\n        min = createTypedArray('float32', len);\r\n      }\r\n      var arr = createTypedArray('float32', len);\r\n      var rnd = BMMath.random();\r\n      for (i = 0; i < len; i += 1) {\r\n        arr[i] = min[i] + rnd * (max[i] - min[i]);\r\n      }\r\n      return arr;\r\n    }\r\n    if (min === undefined) {\r\n      min = 0;\r\n    }\r\n    var rndm = BMMath.random();\r\n    return min + rndm * (max - min);\r\n  }\r\n\r\n  function createPath(points, inTangents, outTangents, closed) {\r\n    var i;\r\n    var len = points.length;\r\n    var path = shapePool.newElement();\r\n    path.setPathData(!!closed, len);\r\n    var arrPlaceholder = [0, 0];\r\n    var inVertexPoint;\r\n    var outVertexPoint;\r\n    for (i = 0; i < len; i += 1) {\r\n      inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n      outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n      path.setTripleAt(points[i][0], points[i][1], outVertexPoint[0] + points[i][0], outVertexPoint[1] + points[i][1], inVertexPoint[0] + points[i][0], inVertexPoint[1] + points[i][1], i, true);\r\n    }\r\n    return path;\r\n  }\r\n\r\n  function initiateExpression(elem, data, property) {\r\n    var val = data.x;\r\n    var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n    var _needsRandom = val.indexOf('random') !== -1;\r\n    var elemType = elem.data.ty;\r\n    var transform;\r\n    var $bm_transform;\r\n    var content;\r\n    var effect;\r\n    var thisProperty = property;\r\n    thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n    Object.defineProperty(thisProperty, 'value', {\r\n      get: function () {\r\n        return thisProperty.v;\r\n      },\r\n    });\r\n    elem.comp.frameDuration = 1 / elem.comp.globalData.frameRate;\r\n    elem.comp.displayStartTime = 0;\r\n    var inPoint = elem.data.ip / elem.comp.globalData.frameRate;\r\n    var outPoint = elem.data.op / elem.comp.globalData.frameRate;\r\n    var width = elem.data.sw ? elem.data.sw : 0;\r\n    var height = elem.data.sh ? elem.data.sh : 0;\r\n    var name = elem.data.nm;\r\n    var loopIn;\r\n    var loop_in;\r\n    var loopOut;\r\n    var loop_out;\r\n    var smooth;\r\n    var toWorld;\r\n    var fromWorld;\r\n    var fromComp;\r\n    var toComp;\r\n    var fromCompToSurface;\r\n    var position;\r\n    var rotation;\r\n    var anchorPoint;\r\n    var scale;\r\n    var thisLayer;\r\n    var thisComp;\r\n    var mask;\r\n    var valueAtTime;\r\n    var velocityAtTime;\r\n\r\n    var scoped_bm_rt;\r\n    var expression_function = eval('[function _expression_function(){' + val + ';scoped_bm_rt=$bm_rt}]')[0]; // eslint-disable-line no-eval\r\n    var numKeys = property.kf ? data.k.length : 0;\r\n\r\n    var active = !this.data || this.data.hd !== true;\r\n\r\n    var wiggle = function wiggle(freq, amp) {\r\n      var iWiggle;\r\n      var j;\r\n      var lenWiggle = this.pv.length ? this.pv.length : 1;\r\n      var addedAmps = createTypedArray('float32', lenWiggle);\r\n      freq = 5;\r\n      var iterations = Math.floor(time * freq);\r\n      iWiggle = 0;\r\n      j = 0;\r\n      while (iWiggle < iterations) {\r\n        // var rnd = BMMath.random();\r\n        for (j = 0; j < lenWiggle; j += 1) {\r\n          addedAmps[j] += -amp + amp * 2 * BMMath.random();\r\n          // addedAmps[j] += -amp + amp*2*rnd;\r\n        }\r\n        iWiggle += 1;\r\n      }\r\n      // var rnd2 = BMMath.random();\r\n      var periods = time * freq;\r\n      var perc = periods - Math.floor(periods);\r\n      var arr = createTypedArray('float32', lenWiggle);\r\n      if (lenWiggle > 1) {\r\n        for (j = 0; j < lenWiggle; j += 1) {\r\n          arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp * 2 * BMMath.random()) * perc;\r\n          // arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n          // arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n        }\r\n        return arr;\r\n      }\r\n      return this.pv + addedAmps[0] + (-amp + amp * 2 * BMMath.random()) * perc;\r\n    }.bind(this);\r\n\r\n    if (thisProperty.loopIn) {\r\n      loopIn = thisProperty.loopIn.bind(thisProperty);\r\n      loop_in = loopIn;\r\n    }\r\n\r\n    if (thisProperty.loopOut) {\r\n      loopOut = thisProperty.loopOut.bind(thisProperty);\r\n      loop_out = loopOut;\r\n    }\r\n\r\n    if (thisProperty.smooth) {\r\n      smooth = thisProperty.smooth.bind(thisProperty);\r\n    }\r\n\r\n    function loopInDuration(type, duration) {\r\n      return loopIn(type, duration, true);\r\n    }\r\n\r\n    function loopOutDuration(type, duration) {\r\n      return loopOut(type, duration, true);\r\n    }\r\n\r\n    if (this.getValueAtTime) {\r\n      valueAtTime = this.getValueAtTime.bind(this);\r\n    }\r\n\r\n    if (this.getVelocityAtTime) {\r\n      velocityAtTime = this.getVelocityAtTime.bind(this);\r\n    }\r\n\r\n    var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n    function lookAt(elem1, elem2) {\r\n      var fVec = [elem2[0] - elem1[0], elem2[1] - elem1[1], elem2[2] - elem1[2]];\r\n      var pitch = Math.atan2(fVec[0], Math.sqrt(fVec[1] * fVec[1] + fVec[2] * fVec[2])) / degToRads;\r\n      var yaw = -Math.atan2(fVec[1], fVec[2]) / degToRads;\r\n      return [yaw, pitch, 0];\r\n    }\r\n\r\n    function easeOut(t, tMin, tMax, val1, val2) {\r\n      return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n    }\r\n\r\n    function easeIn(t, tMin, tMax, val1, val2) {\r\n      return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n    }\r\n\r\n    function ease(t, tMin, tMax, val1, val2) {\r\n      return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n    }\r\n\r\n    function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n      if (val1 === undefined) {\r\n        val1 = tMin;\r\n        val2 = tMax;\r\n      } else {\r\n        t = (t - tMin) / (tMax - tMin);\r\n      }\r\n      if (t > 1) {\r\n        t = 1;\r\n      } else if (t < 0) {\r\n        t = 0;\r\n      }\r\n      var mult = fn(t);\r\n      if ($bm_isInstanceOfArray(val1)) {\r\n        var iKey;\r\n        var lenKey = val1.length;\r\n        var arr = createTypedArray('float32', lenKey);\r\n        for (iKey = 0; iKey < lenKey; iKey += 1) {\r\n          arr[iKey] = (val2[iKey] - val1[iKey]) * mult + val1[iKey];\r\n        }\r\n        return arr;\r\n      }\r\n      return (val2 - val1) * mult + val1;\r\n    }\r\n\r\n    function nearestKey(time) {\r\n      var iKey;\r\n      var lenKey = data.k.length;\r\n      var index;\r\n      var keyTime;\r\n      if (!data.k.length || typeof (data.k[0]) === 'number') {\r\n        index = 0;\r\n        keyTime = 0;\r\n      } else {\r\n        index = -1;\r\n        time *= elem.comp.globalData.frameRate;\r\n        if (time < data.k[0].t) {\r\n          index = 1;\r\n          keyTime = data.k[0].t;\r\n        } else {\r\n          for (iKey = 0; iKey < lenKey - 1; iKey += 1) {\r\n            if (time === data.k[iKey].t) {\r\n              index = iKey + 1;\r\n              keyTime = data.k[iKey].t;\r\n              break;\r\n            } else if (time > data.k[iKey].t && time < data.k[iKey + 1].t) {\r\n              if (time - data.k[iKey].t > data.k[iKey + 1].t - time) {\r\n                index = iKey + 2;\r\n                keyTime = data.k[iKey + 1].t;\r\n              } else {\r\n                index = iKey + 1;\r\n                keyTime = data.k[iKey].t;\r\n              }\r\n              break;\r\n            }\r\n          }\r\n          if (index === -1) {\r\n            index = iKey + 1;\r\n            keyTime = data.k[iKey].t;\r\n          }\r\n        }\r\n      }\r\n      var obKey = {};\r\n      obKey.index = index;\r\n      obKey.time = keyTime / elem.comp.globalData.frameRate;\r\n      return obKey;\r\n    }\r\n\r\n    function key(ind) {\r\n      var obKey;\r\n      var iKey;\r\n      var lenKey;\r\n      if (!data.k.length || typeof (data.k[0]) === 'number') {\r\n        throw new Error('The property has no keyframe at index ' + ind);\r\n      }\r\n      ind -= 1;\r\n      obKey = {\r\n        time: data.k[ind].t / elem.comp.globalData.frameRate,\r\n        value: [],\r\n      };\r\n      var arr = Object.prototype.hasOwnProperty.call(data.k[ind], 's') ? data.k[ind].s : data.k[ind - 1].e;\r\n\r\n      lenKey = arr.length;\r\n      for (iKey = 0; iKey < lenKey; iKey += 1) {\r\n        obKey[iKey] = arr[iKey];\r\n        obKey.value[iKey] = arr[iKey];\r\n      }\r\n      return obKey;\r\n    }\r\n\r\n    function framesToTime(frames, fps) {\r\n      if (!fps) {\r\n        fps = elem.comp.globalData.frameRate;\r\n      }\r\n      return frames / fps;\r\n    }\r\n\r\n    function timeToFrames(t, fps) {\r\n      if (!t && t !== 0) {\r\n        t = time;\r\n      }\r\n      if (!fps) {\r\n        fps = elem.comp.globalData.frameRate;\r\n      }\r\n      return t * fps;\r\n    }\r\n\r\n    function seedRandom(seed) {\r\n      BMMath.seedrandom(randSeed + seed);\r\n    }\r\n\r\n    function sourceRectAtTime() {\r\n      return elem.sourceRectAtTime();\r\n    }\r\n\r\n    function substring(init, end) {\r\n      if (typeof value === 'string') {\r\n        if (end === undefined) {\r\n          return value.substring(init);\r\n        }\r\n        return value.substring(init, end);\r\n      }\r\n      return '';\r\n    }\r\n\r\n    function substr(init, end) {\r\n      if (typeof value === 'string') {\r\n        if (end === undefined) {\r\n          return value.substr(init);\r\n        }\r\n        return value.substr(init, end);\r\n      }\r\n      return '';\r\n    }\r\n\r\n    function posterizeTime(framesPerSecond) {\r\n      time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond;\r\n      value = valueAtTime(time);\r\n    }\r\n\r\n    var time;\r\n    var velocity;\r\n    var value;\r\n    var text;\r\n    var textIndex;\r\n    var textTotal;\r\n    var selectorValue;\r\n    var index = elem.data.ind;\r\n    var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n    var parent;\r\n    var randSeed = Math.floor(Math.random() * 1000000);\r\n    var globalData = elem.globalData;\r\n    function executeExpression(_value) {\r\n      // globalData.pushExpression();\r\n      value = _value;\r\n      if (_needsRandom) {\r\n        seedRandom(randSeed);\r\n      }\r\n      if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n        return value;\r\n      }\r\n      if (this.propType === 'textSelector') {\r\n        textIndex = this.textIndex;\r\n        textTotal = this.textTotal;\r\n        selectorValue = this.selectorValue;\r\n      }\r\n      if (!thisLayer) {\r\n        text = elem.layerInterface.text;\r\n        thisLayer = elem.layerInterface;\r\n        thisComp = elem.comp.compInterface;\r\n        toWorld = thisLayer.toWorld.bind(thisLayer);\r\n        fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n        fromComp = thisLayer.fromComp.bind(thisLayer);\r\n        toComp = thisLayer.toComp.bind(thisLayer);\r\n        mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n        fromCompToSurface = fromComp;\r\n      }\r\n      if (!transform) {\r\n        transform = elem.layerInterface('ADBE Transform Group');\r\n        $bm_transform = transform;\r\n        if (transform) {\r\n          anchorPoint = transform.anchorPoint;\r\n          /* position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale; */\r\n        }\r\n      }\r\n\r\n      if (elemType === 4 && !content) {\r\n        content = thisLayer('ADBE Root Vectors Group');\r\n      }\r\n      if (!effect) {\r\n        effect = thisLayer(4);\r\n      }\r\n      hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n      if (hasParent && !parent) {\r\n        parent = elem.hierarchy[0].layerInterface;\r\n      }\r\n      time = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n      if (needsVelocity) {\r\n        velocity = velocityAtTime(time);\r\n      }\r\n      expression_function();\r\n      this.frameExpressionId = elem.globalData.frameId;\r\n\r\n      // TODO: Check if it's possible to return on ShapeInterface the .v value\r\n      if (scoped_bm_rt.propType === 'shape') {\r\n        scoped_bm_rt = scoped_bm_rt.v;\r\n      }\r\n      // globalData.popExpression();\r\n      return scoped_bm_rt;\r\n    }\r\n    return executeExpression;\r\n  }\r\n\r\n  ob.initiateExpression = initiateExpression;\r\n  return ob;\r\n}());\r\n\r\n/* global ExpressionManager, createTypedArray */\r\n/* exported expressionHelpers */\r\n\r\nvar expressionHelpers = (function () {\r\n  function searchExpressions(elem, data, prop) {\r\n    if (data.x) {\r\n      prop.k = true;\r\n      prop.x = true;\r\n      prop.initiateExpression = ExpressionManager.initiateExpression;\r\n      prop.effectsSequence.push(prop.initiateExpression(elem, data, prop).bind(prop));\r\n    }\r\n  }\r\n\r\n  function getValueAtTime(frameNum) {\r\n    frameNum *= this.elem.globalData.frameRate;\r\n    frameNum -= this.offsetTime;\r\n    if (frameNum !== this._cachingAtTime.lastFrame) {\r\n      this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n      this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n      this._cachingAtTime.lastFrame = frameNum;\r\n    }\r\n    return this._cachingAtTime.value;\r\n  }\r\n\r\n  function getSpeedAtTime(frameNum) {\r\n    var delta = -0.01;\r\n    var v1 = this.getValueAtTime(frameNum);\r\n    var v2 = this.getValueAtTime(frameNum + delta);\r\n    var speed = 0;\r\n    if (v1.length) {\r\n      var i;\r\n      for (i = 0; i < v1.length; i += 1) {\r\n        speed += Math.pow(v2[i] - v1[i], 2);\r\n      }\r\n      speed = Math.sqrt(speed) * 100;\r\n    } else {\r\n      speed = 0;\r\n    }\r\n    return speed;\r\n  }\r\n\r\n  function getVelocityAtTime(frameNum) {\r\n    if (this.vel !== undefined) {\r\n      return this.vel;\r\n    }\r\n    var delta = -0.001;\r\n    // frameNum += this.elem.data.st;\r\n    var v1 = this.getValueAtTime(frameNum);\r\n    var v2 = this.getValueAtTime(frameNum + delta);\r\n    var velocity;\r\n    if (v1.length) {\r\n      velocity = createTypedArray('float32', v1.length);\r\n      var i;\r\n      for (i = 0; i < v1.length; i += 1) {\r\n        // removing frameRate\r\n        // if needed, don't add it here\r\n        // velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n        velocity[i] = (v2[i] - v1[i]) / delta;\r\n      }\r\n    } else {\r\n      velocity = (v2 - v1) / delta;\r\n    }\r\n    return velocity;\r\n  }\r\n\r\n  function getStaticValueAtTime() {\r\n    return this.pv;\r\n  }\r\n\r\n  function setGroupProperty(propertyGroup) {\r\n    this.propertyGroup = propertyGroup;\r\n  }\r\n\r\n  return {\r\n    searchExpressions: searchExpressions,\r\n    getSpeedAtTime: getSpeedAtTime,\r\n    getVelocityAtTime: getVelocityAtTime,\r\n    getValueAtTime: getValueAtTime,\r\n    getStaticValueAtTime: getStaticValueAtTime,\r\n    setGroupProperty: setGroupProperty,\r\n  };\r\n}());\r\n\r\n/* global createTypedArray, Matrix, TransformPropertyFactory, expressionHelpers, PropertyFactory, expressionHelpers,\r\ninitialDefaultFrame, shapePool, ShapePropertyFactory, bez, extendPrototype, ExpressionManager, createSizedArray */\r\n\r\n(function addPropertyDecorator() {\r\n  function loopOut(type, duration, durationFlag) {\r\n    if (!this.k || !this.keyframes) {\r\n      return this.pv;\r\n    }\r\n    type = type ? type.toLowerCase() : '';\r\n    var currentFrame = this.comp.renderedFrame;\r\n    var keyframes = this.keyframes;\r\n    var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n    if (currentFrame <= lastKeyFrame) {\r\n      return this.pv;\r\n    }\r\n    var cycleDuration;\r\n    var firstKeyFrame;\r\n    if (!durationFlag) {\r\n      if (!duration || duration > keyframes.length - 1) {\r\n        duration = keyframes.length - 1;\r\n      }\r\n      firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n      cycleDuration = lastKeyFrame - firstKeyFrame;\r\n    } else {\r\n      if (!duration) {\r\n        cycleDuration = Math.max(0, lastKeyFrame - this.elem.data.ip);\r\n      } else {\r\n        cycleDuration = Math.abs(lastKeyFrame - this.elem.comp.globalData.frameRate * duration);\r\n      }\r\n      firstKeyFrame = lastKeyFrame - cycleDuration;\r\n    }\r\n    var i;\r\n    var len;\r\n    var ret;\r\n    if (type === 'pingpong') {\r\n      var iterations = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\r\n      if (iterations % 2 !== 0) {\r\n          return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\r\n      }\r\n    } else if (type === 'offset') {\r\n      var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n      var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n        var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame) / this.comp.globalData.frameRate, 0); // eslint-disable-line\r\n      var repeats = Math.floor((currentFrame - firstKeyFrame) / cycleDuration);\r\n      if (this.pv.length) {\r\n        ret = new Array(initV.length);\r\n        len = ret.length;\r\n        for (i = 0; i < len; i += 1) {\r\n          ret[i] = (endV[i] - initV[i]) * repeats + current[i];\r\n        }\r\n        return ret;\r\n      }\r\n      return (endV - initV) * repeats + current;\r\n    } else if (type === 'continue') {\r\n      var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n      var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n      if (this.pv.length) {\r\n        ret = new Array(lastValue.length);\r\n        len = ret.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            ret[i] = lastValue[i] + (lastValue[i] - nextLastValue[i]) * ((currentFrame - lastKeyFrame) / this.comp.globalData.frameRate) / 0.0005; // eslint-disable-line\r\n        }\r\n        return ret;\r\n      }\r\n      return lastValue + (lastValue - nextLastValue) * (((currentFrame - lastKeyFrame)) / 0.001);\r\n    }\r\n      return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\r\n\r\n  }\r\n\r\n  function loopIn(type, duration, durationFlag) {\r\n    if (!this.k) {\r\n      return this.pv;\r\n    }\r\n    type = type ? type.toLowerCase() : '';\r\n    var currentFrame = this.comp.renderedFrame;\r\n    var keyframes = this.keyframes;\r\n    var firstKeyFrame = keyframes[0].t;\r\n    if (currentFrame >= firstKeyFrame) {\r\n      return this.pv;\r\n    }\r\n    var cycleDuration;\r\n    var lastKeyFrame;\r\n    if (!durationFlag) {\r\n      if (!duration || duration > keyframes.length - 1) {\r\n        duration = keyframes.length - 1;\r\n      }\r\n      lastKeyFrame = keyframes[duration].t;\r\n      cycleDuration = lastKeyFrame - firstKeyFrame;\r\n    } else {\r\n      if (!duration) {\r\n        cycleDuration = Math.max(0, this.elem.data.op - firstKeyFrame);\r\n      } else {\r\n        cycleDuration = Math.abs(this.elem.comp.globalData.frameRate * duration);\r\n      }\r\n      lastKeyFrame = firstKeyFrame + cycleDuration;\r\n    }\r\n    var i;\r\n    var len;\r\n    var ret;\r\n    if (type === 'pingpong') {\r\n      var iterations = Math.floor((firstKeyFrame - currentFrame) / cycleDuration);\r\n      if (iterations % 2 === 0) {\r\n          return this.getValueAtTime((((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame)) / this.comp.globalData.frameRate, 0); // eslint-disable-line\r\n      }\r\n    } else if (type === 'offset') {\r\n      var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n      var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n      var current = this.getValueAtTime((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration) + firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n      var repeats = Math.floor((firstKeyFrame - currentFrame) / cycleDuration) + 1;\r\n      if (this.pv.length) {\r\n        ret = new Array(initV.length);\r\n        len = ret.length;\r\n        for (i = 0; i < len; i += 1) {\r\n          ret[i] = current[i] - (endV[i] - initV[i]) * repeats;\r\n        }\r\n        return ret;\r\n      }\r\n      return current - (endV - initV) * repeats;\r\n    } else if (type === 'continue') {\r\n      var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n      var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n      if (this.pv.length) {\r\n        ret = new Array(firstValue.length);\r\n        len = ret.length;\r\n        for (i = 0; i < len; i += 1) {\r\n          ret[i] = firstValue[i] + ((firstValue[i] - nextFirstValue[i]) * (firstKeyFrame - currentFrame)) / 0.001;\r\n        }\r\n        return ret;\r\n      }\r\n      return firstValue + ((firstValue - nextFirstValue) * (firstKeyFrame - currentFrame)) / 0.001;\r\n    }\r\n      return this.getValueAtTime(((cycleDuration - ((firstKeyFrame - currentFrame) % cycleDuration + firstKeyFrame))) / this.comp.globalData.frameRate, 0); // eslint-disable-line\r\n\r\n  }\r\n\r\n  function smooth(width, samples) {\r\n    if (!this.k) {\r\n      return this.pv;\r\n    }\r\n    width = (width || 0.4) * 0.5;\r\n    samples = Math.floor(samples || 5);\r\n    if (samples <= 1) {\r\n      return this.pv;\r\n    }\r\n    var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n    var initFrame = currentTime - width;\r\n    var endFrame = currentTime + width;\r\n    var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n    var i = 0;\r\n    var j = 0;\r\n    var value;\r\n    if (this.pv.length) {\r\n      value = createTypedArray('float32', this.pv.length);\r\n    } else {\r\n      value = 0;\r\n    }\r\n    var sampleValue;\r\n    while (i < samples) {\r\n      sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n      if (this.pv.length) {\r\n        for (j = 0; j < this.pv.length; j += 1) {\r\n          value[j] += sampleValue[j];\r\n        }\r\n      } else {\r\n        value += sampleValue;\r\n      }\r\n      i += 1;\r\n    }\r\n    if (this.pv.length) {\r\n      for (j = 0; j < this.pv.length; j += 1) {\r\n        value[j] /= samples;\r\n      }\r\n    } else {\r\n      value /= samples;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  function getTransformValueAtTime(time) {\r\n    if (!this._transformCachingAtTime) {\r\n      this._transformCachingAtTime = {\r\n        v: new Matrix(),\r\n      };\r\n    }\r\n    /// /\r\n    var matrix = this._transformCachingAtTime.v;\r\n    matrix.cloneFromProps(this.pre.props);\r\n    if (this.appliedTransformations < 1) {\r\n      var anchor = this.a.getValueAtTime(time);\r\n      matrix.translate(\r\n        -anchor[0] * this.a.mult,\r\n        -anchor[1] * this.a.mult,\r\n        anchor[2] * this.a.mult\r\n      );\r\n    }\r\n    if (this.appliedTransformations < 2) {\r\n      var scale = this.s.getValueAtTime(time);\r\n      matrix.scale(\r\n        scale[0] * this.s.mult,\r\n        scale[1] * this.s.mult,\r\n        scale[2] * this.s.mult\r\n      );\r\n    }\r\n    if (this.sk && this.appliedTransformations < 3) {\r\n      var skew = this.sk.getValueAtTime(time);\r\n      var skewAxis = this.sa.getValueAtTime(time);\r\n      matrix.skewFromAxis(-skew * this.sk.mult, skewAxis * this.sa.mult);\r\n    }\r\n    if (this.r && this.appliedTransformations < 4) {\r\n      var rotation = this.r.getValueAtTime(time);\r\n      matrix.rotate(-rotation * this.r.mult);\r\n    } else if (!this.r && this.appliedTransformations < 4) {\r\n      var rotationZ = this.rz.getValueAtTime(time);\r\n      var rotationY = this.ry.getValueAtTime(time);\r\n      var rotationX = this.rx.getValueAtTime(time);\r\n      var orientation = this.or.getValueAtTime(time);\r\n      matrix.rotateZ(-rotationZ * this.rz.mult)\r\n        .rotateY(rotationY * this.ry.mult)\r\n        .rotateX(rotationX * this.rx.mult)\r\n        .rotateZ(-orientation[2] * this.or.mult)\r\n        .rotateY(orientation[1] * this.or.mult)\r\n        .rotateX(orientation[0] * this.or.mult);\r\n    }\r\n    if (this.data.p && this.data.p.s) {\r\n      var positionX = this.px.getValueAtTime(time);\r\n      var positionY = this.py.getValueAtTime(time);\r\n      if (this.data.p.z) {\r\n        var positionZ = this.pz.getValueAtTime(time);\r\n        matrix.translate(\r\n          positionX * this.px.mult,\r\n          positionY * this.py.mult,\r\n          -positionZ * this.pz.mult\r\n        );\r\n      } else {\r\n        matrix.translate(positionX * this.px.mult, positionY * this.py.mult, 0);\r\n      }\r\n    } else {\r\n      var position = this.p.getValueAtTime(time);\r\n      matrix.translate(\r\n        position[0] * this.p.mult,\r\n        position[1] * this.p.mult,\r\n        -position[2] * this.p.mult\r\n      );\r\n    }\r\n    return matrix;\r\n    /// /\r\n  }\r\n\r\n  function getTransformStaticValueAtTime() {\r\n    return this.v.clone(new Matrix());\r\n  }\r\n\r\n  var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n  TransformPropertyFactory.getTransformProperty = function (elem, data, container) {\r\n    var prop = getTransformProperty(elem, data, container);\r\n    if (prop.dynamicProperties.length) {\r\n      prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n    } else {\r\n      prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n    }\r\n    prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n    return prop;\r\n  };\r\n\r\n  var propertyGetProp = PropertyFactory.getProp;\r\n  PropertyFactory.getProp = function (elem, data, type, mult, container) {\r\n    var prop = propertyGetProp(elem, data, type, mult, container);\r\n    // prop.getVelocityAtTime = getVelocityAtTime;\r\n    // prop.loopOut = loopOut;\r\n    // prop.loopIn = loopIn;\r\n    if (prop.kf) {\r\n      prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n    } else {\r\n      prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n    }\r\n    prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n    prop.loopOut = loopOut;\r\n    prop.loopIn = loopIn;\r\n    prop.smooth = smooth;\r\n    prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n    prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n    prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n    prop.propertyIndex = data.ix;\r\n    var value = 0;\r\n    if (type !== 0) {\r\n      value = createTypedArray('float32', data.a === 1 ? data.k[0].s.length : data.k.length);\r\n    }\r\n    prop._cachingAtTime = {\r\n      lastFrame: initialDefaultFrame,\r\n      lastIndex: 0,\r\n      value: value,\r\n    };\r\n    expressionHelpers.searchExpressions(elem, data, prop);\r\n    if (prop.k) {\r\n      container.addDynamicProperty(prop);\r\n    }\r\n\r\n    return prop;\r\n  };\r\n\r\n  function getShapeValueAtTime(frameNum) {\r\n    // For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n    if (!this._cachingAtTime) {\r\n      this._cachingAtTime = {\r\n        shapeValue: shapePool.clone(this.pv),\r\n        lastIndex: 0,\r\n        lastTime: initialDefaultFrame,\r\n      };\r\n    }\r\n\r\n    frameNum *= this.elem.globalData.frameRate;\r\n    frameNum -= this.offsetTime;\r\n    if (frameNum !== this._cachingAtTime.lastTime) {\r\n      this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n      this._cachingAtTime.lastTime = frameNum;\r\n      this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n    }\r\n    return this._cachingAtTime.shapeValue;\r\n  }\r\n\r\n  var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n  var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n  function ShapeExpressions() {}\r\n  ShapeExpressions.prototype = {\r\n    vertices: function (prop, time) {\r\n      if (this.k) {\r\n        this.getValue();\r\n      }\r\n      var shapePath = this.v;\r\n      if (time !== undefined) {\r\n        shapePath = this.getValueAtTime(time, 0);\r\n      }\r\n      var i;\r\n      var len = shapePath._length;\r\n      var vertices = shapePath[prop];\r\n      var points = shapePath.v;\r\n      var arr = createSizedArray(len);\r\n      for (i = 0; i < len; i += 1) {\r\n        if (prop === 'i' || prop === 'o') {\r\n          arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n        } else {\r\n          arr[i] = [vertices[i][0], vertices[i][1]];\r\n        }\r\n      }\r\n      return arr;\r\n    },\r\n    points: function (time) {\r\n      return this.vertices('v', time);\r\n    },\r\n    inTangents: function (time) {\r\n      return this.vertices('i', time);\r\n    },\r\n    outTangents: function (time) {\r\n      return this.vertices('o', time);\r\n    },\r\n    isClosed: function () {\r\n      return this.v.c;\r\n    },\r\n    pointOnPath: function (perc, time) {\r\n      var shapePath = this.v;\r\n      if (time !== undefined) {\r\n        shapePath = this.getValueAtTime(time, 0);\r\n      }\r\n      if (!this._segmentsLength) {\r\n        this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n      }\r\n\r\n      var segmentsLength = this._segmentsLength;\r\n      var lengths = segmentsLength.lengths;\r\n      var lengthPos = segmentsLength.totalLength * perc;\r\n      var i = 0;\r\n      var len = lengths.length;\r\n      var accumulatedLength = 0;\r\n      var pt;\r\n      while (i < len) {\r\n        if (accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n          var initIndex = i;\r\n          var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n          var segmentPerc = (lengthPos - accumulatedLength) / lengths[i].addedLength;\r\n          pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n          break;\r\n        } else {\r\n          accumulatedLength += lengths[i].addedLength;\r\n        }\r\n        i += 1;\r\n      }\r\n      if (!pt) {\r\n        pt = shapePath.c ? [shapePath.v[0][0], shapePath.v[0][1]] : [shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1]];\r\n      }\r\n      return pt;\r\n    },\r\n    vectorOnPath: function (perc, time, vectorType) {\r\n      // perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n      if (perc == 1) { // eslint-disable-line eqeqeq\r\n        perc = this.v.c;\r\n      } else if (perc == 0) { // eslint-disable-line eqeqeq\r\n        perc = 0.999;\r\n      }\r\n      var pt1 = this.pointOnPath(perc, time);\r\n      var pt2 = this.pointOnPath(perc + 0.001, time);\r\n      var xLength = pt2[0] - pt1[0];\r\n      var yLength = pt2[1] - pt1[1];\r\n      var magnitude = Math.sqrt(Math.pow(xLength, 2) + Math.pow(yLength, 2));\r\n      if (magnitude === 0) {\r\n        return [0, 0];\r\n      }\r\n      var unitVector = vectorType === 'tangent' ? [xLength / magnitude, yLength / magnitude] : [-yLength / magnitude, xLength / magnitude];\r\n      return unitVector;\r\n    },\r\n    tangentOnPath: function (perc, time) {\r\n      return this.vectorOnPath(perc, time, 'tangent');\r\n    },\r\n    normalOnPath: function (perc, time) {\r\n      return this.vectorOnPath(perc, time, 'normal');\r\n    },\r\n    setGroupProperty: expressionHelpers.setGroupProperty,\r\n    getValueAtTime: expressionHelpers.getStaticValueAtTime,\r\n  };\r\n  extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n  extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n  KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n  KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n  var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n  ShapePropertyFactory.getShapeProp = function (elem, data, type, arr, trims) {\r\n    var prop = propertyGetShapeProp(elem, data, type, arr, trims);\r\n    prop.propertyIndex = data.ix;\r\n    prop.lock = false;\r\n    if (type === 3) {\r\n      expressionHelpers.searchExpressions(elem, data.pt, prop);\r\n    } else if (type === 4) {\r\n      expressionHelpers.searchExpressions(elem, data.ks, prop);\r\n    }\r\n    if (prop.k) {\r\n      elem.addDynamicProperty(prop);\r\n    }\r\n    return prop;\r\n  };\r\n}());\r\n\r\n/* global ExpressionManager, TextProperty */\r\n\r\n(function addDecorator() {\r\n  function searchExpressions() {\r\n    if (this.data.d.x) {\r\n      this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem, this.data.d, this);\r\n      this.addEffect(this.getExpressionValue.bind(this));\r\n      return true;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  TextProperty.prototype.getExpressionValue = function (currentValue, text) {\r\n    var newValue = this.calculateExpression(text);\r\n    if (currentValue.t !== newValue) {\r\n      var newData = {};\r\n      this.copyData(newData, currentValue);\r\n      newData.t = newValue.toString();\r\n      newData.__complete = false;\r\n      return newData;\r\n    }\r\n    return currentValue;\r\n  };\r\n\r\n  TextProperty.prototype.searchProperty = function () {\r\n    var isKeyframed = this.searchKeyframes();\r\n    var hasExpressions = this.searchExpressions();\r\n    this.kf = isKeyframed || hasExpressions;\r\n    return this.kf;\r\n  };\r\n\r\n  TextProperty.prototype.searchExpressions = searchExpressions;\r\n}());\r\n\r\n/* global propertyGroupFactory, PropertyInterface */\r\n/* exported ShapePathInterface */\r\n\r\nvar ShapePathInterface = (\r\n\r\n  function () {\r\n    return function pathInterfaceFactory(shape, view, propertyGroup) {\r\n      var prop = view.sh;\r\n\r\n      function interfaceFunction(val) {\r\n        if (val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2) {\r\n          return interfaceFunction.path;\r\n        }\r\n        return null;\r\n      }\r\n\r\n      var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n      prop.setGroupProperty(PropertyInterface('Path', _propertyGroup));\r\n      Object.defineProperties(interfaceFunction, {\r\n        path: {\r\n          get: function () {\r\n            if (prop.k) {\r\n              prop.getValue();\r\n            }\r\n            return prop;\r\n          },\r\n        },\r\n        shape: {\r\n          get: function () {\r\n            if (prop.k) {\r\n              prop.getValue();\r\n            }\r\n            return prop;\r\n          },\r\n        },\r\n        _name: { value: shape.nm },\r\n        ix: { value: shape.ix },\r\n        propertyIndex: { value: shape.ix },\r\n        mn: { value: shape.mn },\r\n        propertyGroup: { value: propertyGroup },\r\n      });\r\n      return interfaceFunction;\r\n    };\r\n  }()\r\n);\r\n\r\n/* exported propertyGroupFactory */\r\n\r\nvar propertyGroupFactory = (function () {\r\n  return function (interfaceFunction, parentPropertyGroup) {\r\n    return function (val) {\r\n      val = val === undefined ? 1 : val;\r\n      if (val <= 0) {\r\n        return interfaceFunction;\r\n      }\r\n      return parentPropertyGroup(val - 1);\r\n    };\r\n  };\r\n}());\r\n\r\n/* exported PropertyInterface */\r\n\r\nvar PropertyInterface = (function () {\r\n  return function (propertyName, propertyGroup) {\r\n    var interfaceFunction = {\r\n      _name: propertyName,\r\n    };\r\n\r\n    function _propertyGroup(val) {\r\n      val = val === undefined ? 1 : val;\r\n      if (val <= 0) {\r\n        return interfaceFunction;\r\n      }\r\n      return propertyGroup(val - 1);\r\n    }\r\n\r\n    return _propertyGroup;\r\n  };\r\n}());\r\n\r\n/* global ExpressionPropertyInterface, PropertyInterface, propertyGroupFactory, ShapePathInterface */\r\n/* exported ShapeExpressionInterface */\r\n\r\nvar ShapeExpressionInterface = (function () {\r\n  function iterateElements(shapes, view, propertyGroup) {\r\n    var arr = [];\r\n    var i;\r\n    var len = shapes ? shapes.length : 0;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (shapes[i].ty === 'gr') {\r\n        arr.push(groupInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'fl') {\r\n        arr.push(fillInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'st') {\r\n        arr.push(strokeInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'tm') {\r\n        arr.push(trimInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'tr') {\r\n        // arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n      } else if (shapes[i].ty === 'el') {\r\n        arr.push(ellipseInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'sr') {\r\n        arr.push(starInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'sh') {\r\n        arr.push(ShapePathInterface(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'rc') {\r\n        arr.push(rectInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'rd') {\r\n        arr.push(roundedInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      } else if (shapes[i].ty === 'rp') {\r\n        arr.push(repeaterInterfaceFactory(shapes[i], view[i], propertyGroup));\r\n      }\r\n    }\r\n    return arr;\r\n  }\r\n\r\n  function contentsInterfaceFactory(shape, view, propertyGroup) {\r\n    var interfaces;\r\n    var interfaceFunction = function _interfaceFunction(value) {\r\n      var i = 0;\r\n      var len = interfaces.length;\r\n      while (i < len) {\r\n        if (interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value) {\r\n          return interfaces[i];\r\n        }\r\n        i += 1;\r\n      }\r\n      if (typeof value === 'number') {\r\n        return interfaces[value - 1];\r\n      }\r\n      return null;\r\n    };\r\n\r\n    interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n    interfaceFunction.numProperties = interfaces.length;\r\n    var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\r\n    interfaceFunction.transform = transformInterface;\r\n    interfaceFunction.propertyIndex = shape.cix;\r\n    interfaceFunction._name = shape.nm;\r\n\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function groupInterfaceFactory(shape, view, propertyGroup) {\r\n    var interfaceFunction = function _interfaceFunction(value) {\r\n      switch (value) {\r\n        case 'ADBE Vectors Group':\r\n        case 'Contents':\r\n        case 2:\r\n          return interfaceFunction.content;\r\n          // Not necessary for now. Keeping them here in case a new case appears\r\n          // case 'ADBE Vector Transform Group':\r\n          // case 3:\r\n        default:\r\n          return interfaceFunction.transform;\r\n      }\r\n    };\r\n    interfaceFunction.propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    var content = contentsInterfaceFactory(shape, view, interfaceFunction.propertyGroup);\r\n    var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1], view.it[view.it.length - 1], interfaceFunction.propertyGroup);\r\n    interfaceFunction.content = content;\r\n    interfaceFunction.transform = transformInterface;\r\n    Object.defineProperty(interfaceFunction, '_name', {\r\n      get: function () {\r\n        return shape.nm;\r\n      },\r\n    });\r\n    // interfaceFunction.content = interfaceFunction;\r\n    interfaceFunction.numProperties = shape.np;\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    interfaceFunction.nm = shape.nm;\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function fillInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(val) {\r\n      if (val === 'Color' || val === 'color') {\r\n        return interfaceFunction.color;\r\n      } if (val === 'Opacity' || val === 'opacity') {\r\n        return interfaceFunction.opacity;\r\n      }\r\n      return null;\r\n    }\r\n    Object.defineProperties(interfaceFunction, {\r\n      color: {\r\n        get: ExpressionPropertyInterface(view.c),\r\n      },\r\n      opacity: {\r\n        get: ExpressionPropertyInterface(view.o),\r\n      },\r\n      _name: { value: shape.nm },\r\n      mn: { value: shape.mn },\r\n    });\r\n\r\n    view.c.setGroupProperty(PropertyInterface('Color', propertyGroup));\r\n    view.o.setGroupProperty(PropertyInterface('Opacity', propertyGroup));\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function strokeInterfaceFactory(shape, view, propertyGroup) {\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    var _dashPropertyGroup = propertyGroupFactory(dashOb, _propertyGroup);\r\n    function addPropertyToDashOb(i) {\r\n      Object.defineProperty(dashOb, shape.d[i].nm, {\r\n        get: ExpressionPropertyInterface(view.d.dataProps[i].p),\r\n      });\r\n    }\r\n    var i;\r\n    var len = shape.d ? shape.d.length : 0;\r\n    var dashOb = {};\r\n    for (i = 0; i < len; i += 1) {\r\n      addPropertyToDashOb(i);\r\n      view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n    }\r\n\r\n    function interfaceFunction(val) {\r\n      if (val === 'Color' || val === 'color') {\r\n        return interfaceFunction.color;\r\n      } if (val === 'Opacity' || val === 'opacity') {\r\n        return interfaceFunction.opacity;\r\n      } if (val === 'Stroke Width' || val === 'stroke width') {\r\n        return interfaceFunction.strokeWidth;\r\n      }\r\n      return null;\r\n    }\r\n    Object.defineProperties(interfaceFunction, {\r\n      color: {\r\n        get: ExpressionPropertyInterface(view.c),\r\n      },\r\n      opacity: {\r\n        get: ExpressionPropertyInterface(view.o),\r\n      },\r\n      strokeWidth: {\r\n        get: ExpressionPropertyInterface(view.w),\r\n      },\r\n      dash: {\r\n        get: function () {\r\n          return dashOb;\r\n        },\r\n      },\r\n      _name: { value: shape.nm },\r\n      mn: { value: shape.mn },\r\n    });\r\n\r\n    view.c.setGroupProperty(PropertyInterface('Color', _propertyGroup));\r\n    view.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\r\n    view.w.setGroupProperty(PropertyInterface('Stroke Width', _propertyGroup));\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function trimInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(val) {\r\n      if (val === shape.e.ix || val === 'End' || val === 'end') {\r\n        return interfaceFunction.end;\r\n      }\r\n      if (val === shape.s.ix) {\r\n        return interfaceFunction.start;\r\n      }\r\n      if (val === shape.o.ix) {\r\n        return interfaceFunction.offset;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n\r\n    view.s.setGroupProperty(PropertyInterface('Start', _propertyGroup));\r\n    view.e.setGroupProperty(PropertyInterface('End', _propertyGroup));\r\n    view.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n    Object.defineProperties(interfaceFunction, {\r\n      start: {\r\n        get: ExpressionPropertyInterface(view.s),\r\n      },\r\n      end: {\r\n        get: ExpressionPropertyInterface(view.e),\r\n      },\r\n      offset: {\r\n        get: ExpressionPropertyInterface(view.o),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function transformInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.a.ix === value || value === 'Anchor Point') {\r\n        return interfaceFunction.anchorPoint;\r\n      }\r\n      if (shape.o.ix === value || value === 'Opacity') {\r\n        return interfaceFunction.opacity;\r\n      }\r\n      if (shape.p.ix === value || value === 'Position') {\r\n        return interfaceFunction.position;\r\n      }\r\n      if (shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation') {\r\n        return interfaceFunction.rotation;\r\n      }\r\n      if (shape.s.ix === value || value === 'Scale') {\r\n        return interfaceFunction.scale;\r\n      }\r\n      if ((shape.sk && shape.sk.ix === value) || value === 'Skew') {\r\n        return interfaceFunction.skew;\r\n      }\r\n      if ((shape.sa && shape.sa.ix === value) || value === 'Skew Axis') {\r\n        return interfaceFunction.skewAxis;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    view.transform.mProps.o.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\r\n    view.transform.mProps.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\r\n    view.transform.mProps.a.setGroupProperty(PropertyInterface('Anchor Point', _propertyGroup));\r\n    view.transform.mProps.s.setGroupProperty(PropertyInterface('Scale', _propertyGroup));\r\n    view.transform.mProps.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\r\n    if (view.transform.mProps.sk) {\r\n      view.transform.mProps.sk.setGroupProperty(PropertyInterface('Skew', _propertyGroup));\r\n      view.transform.mProps.sa.setGroupProperty(PropertyInterface('Skew Angle', _propertyGroup));\r\n    }\r\n    view.transform.op.setGroupProperty(PropertyInterface('Opacity', _propertyGroup));\r\n    Object.defineProperties(interfaceFunction, {\r\n      opacity: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.o),\r\n      },\r\n      position: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.p),\r\n      },\r\n      anchorPoint: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.a),\r\n      },\r\n      scale: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.s),\r\n      },\r\n      rotation: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.r),\r\n      },\r\n      skew: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.sk),\r\n      },\r\n      skewAxis: {\r\n        get: ExpressionPropertyInterface(view.transform.mProps.sa),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.ty = 'tr';\r\n    interfaceFunction.mn = shape.mn;\r\n    interfaceFunction.propertyGroup = propertyGroup;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function ellipseInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.p.ix === value) {\r\n        return interfaceFunction.position;\r\n      }\r\n      if (shape.s.ix === value) {\r\n        return interfaceFunction.size;\r\n      }\r\n      return null;\r\n    }\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n    prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\r\n    prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\r\n\r\n    Object.defineProperties(interfaceFunction, {\r\n      size: {\r\n        get: ExpressionPropertyInterface(prop.s),\r\n      },\r\n      position: {\r\n        get: ExpressionPropertyInterface(prop.p),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function starInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.p.ix === value) {\r\n        return interfaceFunction.position;\r\n      }\r\n      if (shape.r.ix === value) {\r\n        return interfaceFunction.rotation;\r\n      }\r\n      if (shape.pt.ix === value) {\r\n        return interfaceFunction.points;\r\n      }\r\n      if (shape.or.ix === value || value === 'ADBE Vector Star Outer Radius') {\r\n        return interfaceFunction.outerRadius;\r\n      }\r\n      if (shape.os.ix === value) {\r\n        return interfaceFunction.outerRoundness;\r\n      }\r\n      if (shape.ir && (shape.ir.ix === value || value === 'ADBE Vector Star Inner Radius')) {\r\n        return interfaceFunction.innerRadius;\r\n      }\r\n      if (shape.is && shape.is.ix === value) {\r\n        return interfaceFunction.innerRoundness;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    prop.or.setGroupProperty(PropertyInterface('Outer Radius', _propertyGroup));\r\n    prop.os.setGroupProperty(PropertyInterface('Outer Roundness', _propertyGroup));\r\n    prop.pt.setGroupProperty(PropertyInterface('Points', _propertyGroup));\r\n    prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\r\n    prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\r\n    if (shape.ir) {\r\n      prop.ir.setGroupProperty(PropertyInterface('Inner Radius', _propertyGroup));\r\n      prop.is.setGroupProperty(PropertyInterface('Inner Roundness', _propertyGroup));\r\n    }\r\n\r\n    Object.defineProperties(interfaceFunction, {\r\n      position: {\r\n        get: ExpressionPropertyInterface(prop.p),\r\n      },\r\n      rotation: {\r\n        get: ExpressionPropertyInterface(prop.r),\r\n      },\r\n      points: {\r\n        get: ExpressionPropertyInterface(prop.pt),\r\n      },\r\n      outerRadius: {\r\n        get: ExpressionPropertyInterface(prop.or),\r\n      },\r\n      outerRoundness: {\r\n        get: ExpressionPropertyInterface(prop.os),\r\n      },\r\n      innerRadius: {\r\n        get: ExpressionPropertyInterface(prop.ir),\r\n      },\r\n      innerRoundness: {\r\n        get: ExpressionPropertyInterface(prop.is),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function rectInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.p.ix === value) {\r\n        return interfaceFunction.position;\r\n      }\r\n      if (shape.r.ix === value) {\r\n        return interfaceFunction.roundness;\r\n      }\r\n      if (shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size') {\r\n        return interfaceFunction.size;\r\n      }\r\n      return null;\r\n    }\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n\r\n    var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    prop.p.setGroupProperty(PropertyInterface('Position', _propertyGroup));\r\n    prop.s.setGroupProperty(PropertyInterface('Size', _propertyGroup));\r\n    prop.r.setGroupProperty(PropertyInterface('Rotation', _propertyGroup));\r\n\r\n    Object.defineProperties(interfaceFunction, {\r\n      position: {\r\n        get: ExpressionPropertyInterface(prop.p),\r\n      },\r\n      roundness: {\r\n        get: ExpressionPropertyInterface(prop.r),\r\n      },\r\n      size: {\r\n        get: ExpressionPropertyInterface(prop.s),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function roundedInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.r.ix === value || value === 'Round Corners 1') {\r\n        return interfaceFunction.radius;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    var prop = view;\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    prop.rd.setGroupProperty(PropertyInterface('Radius', _propertyGroup));\r\n\r\n    Object.defineProperties(interfaceFunction, {\r\n      radius: {\r\n        get: ExpressionPropertyInterface(prop.rd),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  function repeaterInterfaceFactory(shape, view, propertyGroup) {\r\n    function interfaceFunction(value) {\r\n      if (shape.c.ix === value || value === 'Copies') {\r\n        return interfaceFunction.copies;\r\n      } if (shape.o.ix === value || value === 'Offset') {\r\n        return interfaceFunction.offset;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    var _propertyGroup = propertyGroupFactory(interfaceFunction, propertyGroup);\r\n    var prop = view;\r\n    interfaceFunction.propertyIndex = shape.ix;\r\n    prop.c.setGroupProperty(PropertyInterface('Copies', _propertyGroup));\r\n    prop.o.setGroupProperty(PropertyInterface('Offset', _propertyGroup));\r\n    Object.defineProperties(interfaceFunction, {\r\n      copies: {\r\n        get: ExpressionPropertyInterface(prop.c),\r\n      },\r\n      offset: {\r\n        get: ExpressionPropertyInterface(prop.o),\r\n      },\r\n      _name: { value: shape.nm },\r\n    });\r\n    interfaceFunction.mn = shape.mn;\r\n    return interfaceFunction;\r\n  }\r\n\r\n  return function (shapes, view, propertyGroup) {\r\n    var interfaces;\r\n    function _interfaceFunction(value) {\r\n      if (typeof value === 'number') {\r\n        value = value === undefined ? 1 : value;\r\n        if (value === 0) {\r\n          return propertyGroup;\r\n        }\r\n        return interfaces[value - 1];\r\n      }\r\n      var i = 0;\r\n      var len = interfaces.length;\r\n      while (i < len) {\r\n        if (interfaces[i]._name === value) {\r\n          return interfaces[i];\r\n        }\r\n        i += 1;\r\n      }\r\n      return null;\r\n    }\r\n    function parentGroupWrapper() {\r\n      return propertyGroup;\r\n    }\r\n    _interfaceFunction.propertyGroup = propertyGroupFactory(_interfaceFunction, parentGroupWrapper);\r\n    interfaces = iterateElements(shapes, view, _interfaceFunction.propertyGroup);\r\n    _interfaceFunction.numProperties = interfaces.length;\r\n    _interfaceFunction._name = 'Contents';\r\n    return _interfaceFunction;\r\n  };\r\n}());\r\n\r\n/* exported TextExpressionInterface */\r\n\r\nvar TextExpressionInterface = (function () {\r\n  return function (elem) {\r\n    var _prevValue;\r\n    var _sourceText;\r\n    function _thisLayerFunction(name) {\r\n      switch (name) {\r\n        case 'ADBE Text Document':\r\n          return _thisLayerFunction.sourceText;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    Object.defineProperty(_thisLayerFunction, 'sourceText', {\r\n      get: function () {\r\n        elem.textProperty.getValue();\r\n        var stringValue = elem.textProperty.currentData.t;\r\n        if (stringValue !== _prevValue) {\r\n          elem.textProperty.currentData.t = _prevValue;\r\n          _sourceText = new String(stringValue); // eslint-disable-line no-new-wrappers\r\n          // If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n          _sourceText.value = stringValue || new String(stringValue); // eslint-disable-line no-new-wrappers\r\n        }\r\n        return _sourceText;\r\n      },\r\n    });\r\n    return _thisLayerFunction;\r\n  };\r\n}());\r\n\r\n/* global Matrix, MaskManagerInterface, TransformExpressionInterface, getDescriptor */\r\n/* exported LayerExpressionInterface */\r\n\r\nvar LayerExpressionInterface = (function () {\r\n  function getMatrix(time) {\r\n    var toWorldMat = new Matrix();\r\n    if (time !== undefined) {\r\n      var propMatrix = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n      propMatrix.clone(toWorldMat);\r\n    } else {\r\n      var transformMat = this._elem.finalTransform.mProp;\r\n      transformMat.applyToMatrix(toWorldMat);\r\n    }\r\n    return toWorldMat;\r\n  }\r\n\r\n  function toWorldVec(arr, time) {\r\n    var toWorldMat = this.getMatrix(time);\r\n    toWorldMat.props[12] = 0;\r\n    toWorldMat.props[13] = 0;\r\n    toWorldMat.props[14] = 0;\r\n    return this.applyPoint(toWorldMat, arr);\r\n  }\r\n\r\n  function toWorld(arr, time) {\r\n    var toWorldMat = this.getMatrix(time);\r\n    return this.applyPoint(toWorldMat, arr);\r\n  }\r\n\r\n  function fromWorldVec(arr, time) {\r\n    var toWorldMat = this.getMatrix(time);\r\n    toWorldMat.props[12] = 0;\r\n    toWorldMat.props[13] = 0;\r\n    toWorldMat.props[14] = 0;\r\n    return this.invertPoint(toWorldMat, arr);\r\n  }\r\n\r\n  function fromWorld(arr, time) {\r\n    var toWorldMat = this.getMatrix(time);\r\n    return this.invertPoint(toWorldMat, arr);\r\n  }\r\n\r\n  function applyPoint(matrix, arr) {\r\n    if (this._elem.hierarchy && this._elem.hierarchy.length) {\r\n      var i;\r\n      var len = this._elem.hierarchy.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\r\n      }\r\n    }\r\n    return matrix.applyToPointArray(arr[0], arr[1], arr[2] || 0);\r\n  }\r\n\r\n  function invertPoint(matrix, arr) {\r\n    if (this._elem.hierarchy && this._elem.hierarchy.length) {\r\n      var i;\r\n      var len = this._elem.hierarchy.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(matrix);\r\n      }\r\n    }\r\n    return matrix.inversePoint(arr);\r\n  }\r\n\r\n  function fromComp(arr) {\r\n    var toWorldMat = new Matrix();\r\n    toWorldMat.reset();\r\n    this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n    if (this._elem.hierarchy && this._elem.hierarchy.length) {\r\n      var i;\r\n      var len = this._elem.hierarchy.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n      }\r\n      return toWorldMat.inversePoint(arr);\r\n    }\r\n    return toWorldMat.inversePoint(arr);\r\n  }\r\n\r\n  function sampleImage() {\r\n    return [1, 1, 1, 1];\r\n  }\r\n\r\n  return function (elem) {\r\n    var transformInterface;\r\n\r\n    function _registerMaskInterface(maskManager) {\r\n      _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n    }\r\n    function _registerEffectsInterface(effects) {\r\n      _thisLayerFunction.effect = effects;\r\n    }\r\n\r\n    function _thisLayerFunction(name) {\r\n      switch (name) {\r\n        case 'ADBE Root Vectors Group':\r\n        case 'Contents':\r\n        case 2:\r\n          return _thisLayerFunction.shapeInterface;\r\n        case 1:\r\n        case 6:\r\n        case 'Transform':\r\n        case 'transform':\r\n        case 'ADBE Transform Group':\r\n          return transformInterface;\r\n        case 4:\r\n        case 'ADBE Effect Parade':\r\n        case 'effects':\r\n        case 'Effects':\r\n          return _thisLayerFunction.effect;\r\n        case 'ADBE Text Properties':\r\n          return _thisLayerFunction.textInterface;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    _thisLayerFunction.getMatrix = getMatrix;\r\n    _thisLayerFunction.invertPoint = invertPoint;\r\n    _thisLayerFunction.applyPoint = applyPoint;\r\n    _thisLayerFunction.toWorld = toWorld;\r\n    _thisLayerFunction.toWorldVec = toWorldVec;\r\n    _thisLayerFunction.fromWorld = fromWorld;\r\n    _thisLayerFunction.fromWorldVec = fromWorldVec;\r\n    _thisLayerFunction.toComp = toWorld;\r\n    _thisLayerFunction.fromComp = fromComp;\r\n    _thisLayerFunction.sampleImage = sampleImage;\r\n    _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n    _thisLayerFunction._elem = elem;\r\n    transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n    var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n    Object.defineProperties(_thisLayerFunction, {\r\n      hasParent: {\r\n        get: function () {\r\n          return elem.hierarchy.length;\r\n        },\r\n      },\r\n      parent: {\r\n        get: function () {\r\n          return elem.hierarchy[0].layerInterface;\r\n        },\r\n      },\r\n      rotation: getDescriptor(transformInterface, 'rotation'),\r\n      scale: getDescriptor(transformInterface, 'scale'),\r\n      position: getDescriptor(transformInterface, 'position'),\r\n      opacity: getDescriptor(transformInterface, 'opacity'),\r\n      anchorPoint: anchorPointDescriptor,\r\n      anchor_point: anchorPointDescriptor,\r\n      transform: {\r\n        get: function () {\r\n          return transformInterface;\r\n        },\r\n      },\r\n      active: {\r\n        get: function () {\r\n          return elem.isInRange;\r\n        },\r\n      },\r\n    });\r\n\r\n    _thisLayerFunction.startTime = elem.data.st;\r\n    _thisLayerFunction.index = elem.data.ind;\r\n    _thisLayerFunction.source = elem.data.refId;\r\n    _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n    _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n    _thisLayerFunction.inPoint = elem.data.ip / elem.comp.globalData.frameRate;\r\n    _thisLayerFunction.outPoint = elem.data.op / elem.comp.globalData.frameRate;\r\n    _thisLayerFunction._name = elem.data.nm;\r\n\r\n    _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n    _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n    return _thisLayerFunction;\r\n  };\r\n}());\r\n\r\n/* global */\r\n/* exported FootageInterface */\r\n\r\nvar FootageInterface = (function () {\r\n  var outlineInterfaceFactory = (function (elem) {\r\n    var currentPropertyName = '';\r\n    var currentProperty = elem.getFootageData();\r\n    function init() {\r\n      currentPropertyName = '';\r\n      currentProperty = elem.getFootageData();\r\n      return searchProperty;\r\n    }\r\n    function searchProperty(value) {\r\n      if (currentProperty[value]) {\r\n        currentPropertyName = value;\r\n        currentProperty = currentProperty[value];\r\n        if (typeof currentProperty === 'object') {\r\n          return searchProperty;\r\n        }\r\n        return currentProperty;\r\n      }\r\n      var propertyNameIndex = value.indexOf(currentPropertyName);\r\n      if (propertyNameIndex !== -1) {\r\n        var index = parseInt(value.substr(propertyNameIndex + currentPropertyName.length), 10);\r\n        currentProperty = currentProperty[index];\r\n        if (typeof currentProperty === 'object') {\r\n          return searchProperty;\r\n        }\r\n        return currentProperty;\r\n      }\r\n      return '';\r\n    }\r\n    return init;\r\n  });\r\n\r\n  var dataInterfaceFactory = function (elem) {\r\n    function interfaceFunction(value) {\r\n      if (value === 'Outline') {\r\n        return interfaceFunction.outlineInterface();\r\n      }\r\n      return null;\r\n    }\r\n\r\n    interfaceFunction._name = 'Outline';\r\n    interfaceFunction.outlineInterface = outlineInterfaceFactory(elem);\r\n    return interfaceFunction;\r\n  };\r\n\r\n  return function (elem) {\r\n    function _interfaceFunction(value) {\r\n      if (value === 'Data') {\r\n        return _interfaceFunction.dataInterface;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    _interfaceFunction._name = 'Data';\r\n    _interfaceFunction.dataInterface = dataInterfaceFactory(elem);\r\n    return _interfaceFunction;\r\n  };\r\n}());\r\n\r\n/* exported CompExpressionInterface */\r\n\r\nvar CompExpressionInterface = (function () {\r\n  return function (comp) {\r\n    function _thisLayerFunction(name) {\r\n      var i = 0;\r\n      var len = comp.layers.length;\r\n      while (i < len) {\r\n        if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\r\n          return comp.elements[i].layerInterface;\r\n        }\r\n        i += 1;\r\n      }\r\n      return null;\r\n      // return {active:false};\r\n    }\r\n    Object.defineProperty(_thisLayerFunction, '_name', { value: comp.data.nm });\r\n    _thisLayerFunction.layer = _thisLayerFunction;\r\n    _thisLayerFunction.pixelAspect = 1;\r\n    _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n    _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n    _thisLayerFunction.pixelAspect = 1;\r\n    _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\r\n    _thisLayerFunction.displayStartTime = 0;\r\n    _thisLayerFunction.numLayers = comp.layers.length;\r\n    return _thisLayerFunction;\r\n  };\r\n}());\r\n\r\n/* global ExpressionPropertyInterface */\r\n/* exported TransformExpressionInterface */\r\n\r\nvar TransformExpressionInterface = (function () {\r\n  return function (transform) {\r\n    function _thisFunction(name) {\r\n      switch (name) {\r\n        case 'scale':\r\n        case 'Scale':\r\n        case 'ADBE Scale':\r\n        case 6:\r\n          return _thisFunction.scale;\r\n        case 'rotation':\r\n        case 'Rotation':\r\n        case 'ADBE Rotation':\r\n        case 'ADBE Rotate Z':\r\n        case 10:\r\n          return _thisFunction.rotation;\r\n        case 'ADBE Rotate X':\r\n          return _thisFunction.xRotation;\r\n        case 'ADBE Rotate Y':\r\n          return _thisFunction.yRotation;\r\n        case 'position':\r\n        case 'Position':\r\n        case 'ADBE Position':\r\n        case 2:\r\n          return _thisFunction.position;\r\n        case 'ADBE Position_0':\r\n          return _thisFunction.xPosition;\r\n        case 'ADBE Position_1':\r\n          return _thisFunction.yPosition;\r\n        case 'ADBE Position_2':\r\n          return _thisFunction.zPosition;\r\n        case 'anchorPoint':\r\n        case 'AnchorPoint':\r\n        case 'Anchor Point':\r\n        case 'ADBE AnchorPoint':\r\n        case 1:\r\n          return _thisFunction.anchorPoint;\r\n        case 'opacity':\r\n        case 'Opacity':\r\n        case 11:\r\n          return _thisFunction.opacity;\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    Object.defineProperty(_thisFunction, 'rotation', {\r\n      get: ExpressionPropertyInterface(transform.r || transform.rz),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'zRotation', {\r\n      get: ExpressionPropertyInterface(transform.rz || transform.r),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'xRotation', {\r\n      get: ExpressionPropertyInterface(transform.rx),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'yRotation', {\r\n      get: ExpressionPropertyInterface(transform.ry),\r\n    });\r\n    Object.defineProperty(_thisFunction, 'scale', {\r\n      get: ExpressionPropertyInterface(transform.s),\r\n    });\r\n    var _px;\r\n    var _py;\r\n    var _pz;\r\n    var _transformFactory;\r\n    if (transform.p) {\r\n      _transformFactory = ExpressionPropertyInterface(transform.p);\r\n    } else {\r\n      _px = ExpressionPropertyInterface(transform.px);\r\n      _py = ExpressionPropertyInterface(transform.py);\r\n      if (transform.pz) {\r\n        _pz = ExpressionPropertyInterface(transform.pz);\r\n      }\r\n    }\r\n    Object.defineProperty(_thisFunction, 'position', {\r\n      get: function () {\r\n        if (transform.p) {\r\n          return _transformFactory();\r\n        }\r\n        return [\r\n          _px(),\r\n          _py(),\r\n          _pz ? _pz() : 0];\r\n      },\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'xPosition', {\r\n      get: ExpressionPropertyInterface(transform.px),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'yPosition', {\r\n      get: ExpressionPropertyInterface(transform.py),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'zPosition', {\r\n      get: ExpressionPropertyInterface(transform.pz),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'anchorPoint', {\r\n      get: ExpressionPropertyInterface(transform.a),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'opacity', {\r\n      get: ExpressionPropertyInterface(transform.o),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'skew', {\r\n      get: ExpressionPropertyInterface(transform.sk),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'skewAxis', {\r\n      get: ExpressionPropertyInterface(transform.sa),\r\n    });\r\n\r\n    Object.defineProperty(_thisFunction, 'orientation', {\r\n      get: ExpressionPropertyInterface(transform.or),\r\n    });\r\n\r\n    return _thisFunction;\r\n  };\r\n}());\r\n\r\n/* exported ProjectInterface */\r\n\r\nvar ProjectInterface = (function () {\r\n  function registerComposition(comp) {\r\n    this.compositions.push(comp);\r\n  }\r\n\r\n  return function () {\r\n    function _thisProjectFunction(name) {\r\n      var i = 0;\r\n      var len = this.compositions.length;\r\n      while (i < len) {\r\n        if (this.compositions[i].data && this.compositions[i].data.nm === name) {\r\n          if (this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n            this.compositions[i].prepareFrame(this.currentFrame);\r\n          }\r\n          return this.compositions[i].compInterface;\r\n        }\r\n        i += 1;\r\n      }\r\n      return null;\r\n    }\r\n\r\n    _thisProjectFunction.compositions = [];\r\n    _thisProjectFunction.currentFrame = 0;\r\n\r\n    _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n    return _thisProjectFunction;\r\n  };\r\n}());\r\n\r\n/* global propertyGroupFactory, ExpressionPropertyInterface, PropertyInterface */\r\n/* exported EffectsExpressionInterface */\r\n\r\nvar EffectsExpressionInterface = (function () {\r\n  var ob = {\r\n    createEffectsInterface: createEffectsInterface,\r\n  };\r\n\r\n  function createEffectsInterface(elem, propertyGroup) {\r\n    if (elem.effectsManager) {\r\n      var effectElements = [];\r\n      var effectsData = elem.data.ef;\r\n      var i;\r\n      var len = elem.effectsManager.effectElements.length;\r\n      for (i = 0; i < len; i += 1) {\r\n        effectElements.push(createGroupInterface(effectsData[i], elem.effectsManager.effectElements[i], propertyGroup, elem));\r\n      }\r\n\r\n      var effects = elem.data.ef || [];\r\n      var groupInterface = function (name) {\r\n        i = 0;\r\n        len = effects.length;\r\n        while (i < len) {\r\n          if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\r\n            return effectElements[i];\r\n          }\r\n          i += 1;\r\n        }\r\n        return null;\r\n      };\r\n      Object.defineProperty(groupInterface, 'numProperties', {\r\n        get: function () {\r\n          return effects.length;\r\n        },\r\n      });\r\n      return groupInterface;\r\n    }\r\n    return null;\r\n  }\r\n\r\n  function createGroupInterface(data, elements, propertyGroup, elem) {\r\n    function groupInterface(name) {\r\n      var effects = data.ef;\r\n      var i = 0;\r\n      var len = effects.length;\r\n      while (i < len) {\r\n        if (name === effects[i].nm || name === effects[i].mn || name === effects[i].ix) {\r\n          if (effects[i].ty === 5) {\r\n            return effectElements[i];\r\n          }\r\n          return effectElements[i]();\r\n        }\r\n        i += 1;\r\n      }\r\n      throw new Error();\r\n    }\r\n    var _propertyGroup = propertyGroupFactory(groupInterface, propertyGroup);\r\n\r\n    var effectElements = [];\r\n    var i;\r\n    var len = data.ef.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      if (data.ef[i].ty === 5) {\r\n        effectElements.push(createGroupInterface(data.ef[i], elements.effectElements[i], elements.effectElements[i].propertyGroup, elem));\r\n      } else {\r\n        effectElements.push(createValueInterface(elements.effectElements[i], data.ef[i].ty, elem, _propertyGroup));\r\n      }\r\n    }\r\n\r\n    if (data.mn === 'ADBE Color Control') {\r\n      Object.defineProperty(groupInterface, 'color', {\r\n        get: function () {\r\n          return effectElements[0]();\r\n        },\r\n      });\r\n    }\r\n    Object.defineProperties(groupInterface, {\r\n      numProperties: {\r\n        get: function () {\r\n          return data.np;\r\n        },\r\n      },\r\n      _name: { value: data.nm },\r\n      propertyGroup: { value: _propertyGroup },\r\n    });\r\n    groupInterface.enabled = data.en !== 0;\r\n    groupInterface.active = groupInterface.enabled;\r\n    return groupInterface;\r\n  }\r\n\r\n  function createValueInterface(element, type, elem, propertyGroup) {\r\n    var expressionProperty = ExpressionPropertyInterface(element.p);\r\n    function interfaceFunction() {\r\n      if (type === 10) {\r\n        return elem.comp.compInterface(element.p.v);\r\n      }\r\n      return expressionProperty();\r\n    }\r\n\r\n    if (element.p.setGroupProperty) {\r\n      element.p.setGroupProperty(PropertyInterface('', propertyGroup));\r\n    }\r\n\r\n    return interfaceFunction;\r\n  }\r\n\r\n  return ob;\r\n}());\r\n\r\n/* global createSizedArray */\r\n/* exported MaskManagerInterface */\r\n\r\nvar MaskManagerInterface = (function () {\r\n  function MaskInterface(mask, data) {\r\n    this._mask = mask;\r\n    this._data = data;\r\n  }\r\n  Object.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n    get: function () {\r\n      if (this._mask.prop.k) {\r\n        this._mask.prop.getValue();\r\n      }\r\n      return this._mask.prop;\r\n    },\r\n  });\r\n  Object.defineProperty(MaskInterface.prototype, 'maskOpacity', {\r\n    get: function () {\r\n      if (this._mask.op.k) {\r\n        this._mask.op.getValue();\r\n      }\r\n      return this._mask.op.v * 100;\r\n    },\r\n  });\r\n\r\n  var MaskManager = function (maskManager) {\r\n    var _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n    var i;\r\n    var len = maskManager.viewData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n      _masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n    }\r\n\r\n    var maskFunction = function (name) {\r\n      i = 0;\r\n      while (i < len) {\r\n        if (maskManager.masksProperties[i].nm === name) {\r\n          return _masksInterfaces[i];\r\n        }\r\n        i += 1;\r\n      }\r\n      return null;\r\n    };\r\n    return maskFunction;\r\n  };\r\n  return MaskManager;\r\n}());\r\n\r\n/* global createTypedArray */\r\n/* exported ExpressionPropertyInterface */\r\n\r\nvar ExpressionPropertyInterface = (function () {\r\n  var defaultUnidimensionalValue = { pv: 0, v: 0, mult: 1 };\r\n  var defaultMultidimensionalValue = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };\r\n\r\n  function completeProperty(expressionValue, property, type) {\r\n    Object.defineProperty(expressionValue, 'velocity', {\r\n      get: function () {\r\n        return property.getVelocityAtTime(property.comp.currentFrame);\r\n      },\r\n    });\r\n    expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n    expressionValue.key = function (pos) {\r\n      if (!expressionValue.numKeys) {\r\n        return 0;\r\n      }\r\n      var value = '';\r\n      if ('s' in property.keyframes[pos - 1]) {\r\n        value = property.keyframes[pos - 1].s;\r\n      } else if ('e' in property.keyframes[pos - 2]) {\r\n        value = property.keyframes[pos - 2].e;\r\n      } else {\r\n        value = property.keyframes[pos - 2].s;\r\n      }\r\n      var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value); // eslint-disable-line no-new-wrappers\r\n      valueProp.time = property.keyframes[pos - 1].t / property.elem.comp.globalData.frameRate;\r\n      valueProp.value = type === 'unidimensional' ? value[0] : value;\r\n      return valueProp;\r\n    };\r\n    expressionValue.valueAtTime = property.getValueAtTime;\r\n    expressionValue.speedAtTime = property.getSpeedAtTime;\r\n    expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n    expressionValue.propertyGroup = property.propertyGroup;\r\n  }\r\n\r\n  function UnidimensionalPropertyInterface(property) {\r\n    if (!property || !('pv' in property)) {\r\n      property = defaultUnidimensionalValue;\r\n    }\r\n    var mult = 1 / property.mult;\r\n    var val = property.pv * mult;\r\n    var expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\r\n    expressionValue.value = val;\r\n    completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n    return function () {\r\n      if (property.k) {\r\n        property.getValue();\r\n      }\r\n      val = property.v * mult;\r\n      if (expressionValue.value !== val) {\r\n        expressionValue = new Number(val); // eslint-disable-line no-new-wrappers\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n      }\r\n      return expressionValue;\r\n    };\r\n  }\r\n\r\n  function MultidimensionalPropertyInterface(property) {\r\n    if (!property || !('pv' in property)) {\r\n      property = defaultMultidimensionalValue;\r\n    }\r\n    var mult = 1 / property.mult;\r\n    var len = (property.data && property.data.l) || property.pv.length;\r\n    var expressionValue = createTypedArray('float32', len);\r\n    var arrValue = createTypedArray('float32', len);\r\n    expressionValue.value = arrValue;\r\n    completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n    return function () {\r\n      if (property.k) {\r\n        property.getValue();\r\n      }\r\n      for (var i = 0; i < len; i += 1) {\r\n        arrValue[i] = property.v[i] * mult;\r\n        expressionValue[i] = arrValue[i];\r\n      }\r\n      return expressionValue;\r\n    };\r\n  }\r\n\r\n  // TODO: try to avoid using this getter\r\n  function defaultGetter() {\r\n    return defaultUnidimensionalValue;\r\n  }\r\n\r\n  return function (property) {\r\n    if (!property) {\r\n      return defaultGetter;\r\n    } if (property.propType === 'unidimensional') {\r\n      return UnidimensionalPropertyInterface(property);\r\n    }\r\n    return MultidimensionalPropertyInterface(property);\r\n  };\r\n}());\r\n\r\n/* global expressionHelpers, TextSelectorProp, ExpressionManager */\r\n/* exported TextExpressionSelectorProp */\r\n\r\n(function () {\r\n  var TextExpressionSelectorProp = (function () { // eslint-disable-line no-unused-vars\r\n    function getValueProxy(index, total) {\r\n      this.textIndex = index + 1;\r\n      this.textTotal = total;\r\n      this.v = this.getValue() * this.mult;\r\n      return this.v;\r\n    }\r\n\r\n    return function TextExpressionSelectorPropFactory(elem, data) {\r\n      this.pv = 1;\r\n      this.comp = elem.comp;\r\n      this.elem = elem;\r\n      this.mult = 0.01;\r\n      this.propType = 'textSelector';\r\n      this.textTotal = data.totalChars;\r\n      this.selectorValue = 100;\r\n      this.lastValue = [1, 1, 1];\r\n      this.k = true;\r\n      this.x = true;\r\n      this.getValue = ExpressionManager.initiateExpression.bind(this)(elem, data, this);\r\n      this.getMult = getValueProxy;\r\n      this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n      if (this.kf) {\r\n        this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n      } else {\r\n        this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n      }\r\n      this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n    };\r\n  }());\r\n\r\n  var propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n  TextSelectorProp.getTextSelectorProp = function (elem, data, arr) {\r\n    if (data.t === 1) {\r\n      return new TextExpressionSelectorPropFactory(elem, data, arr); // eslint-disable-line no-undef\r\n    }\r\n    return propertyGetTextProp(elem, data, arr);\r\n  };\r\n}());\r\n\r\n/* global PropertyFactory */\r\n/* exported SliderEffect, AngleEffect, ColorEffect, PointEffect, LayerIndexEffect, MaskIndexEffect, CheckboxEffect, NoValueEffect */\r\n\r\nfunction SliderEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\r\n}\r\nfunction AngleEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\r\n}\r\nfunction ColorEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\r\n}\r\nfunction PointEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 1, 0, container);\r\n}\r\nfunction LayerIndexEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\r\n}\r\nfunction MaskIndexEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\r\n}\r\nfunction CheckboxEffect(data, elem, container) {\r\n  this.p = PropertyFactory.getProp(elem, data.v, 0, 0, container);\r\n}\r\nfunction NoValueEffect() {\r\n  this.p = {};\r\n}\r\n\r\n/* global extendPrototype, SliderEffect, AngleEffect, ColorEffect, PointEffect, CheckboxEffect, LayerIndexEffect,\r\nMaskIndexEffect, NoValueEffect, DynamicPropertyContainer */\r\n\r\nfunction EffectsManager(data, element) {\r\n  var effects = data.ef || [];\r\n  this.effectElements = [];\r\n  var i;\r\n  var len = effects.length;\r\n  var effectItem;\r\n  for (i = 0; i < len; i += 1) {\r\n    effectItem = new GroupEffect(effects[i], element);\r\n    this.effectElements.push(effectItem);\r\n  }\r\n}\r\n\r\nfunction GroupEffect(data, element) {\r\n  this.init(data, element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function (data, element) {\r\n  this.data = data;\r\n  this.effectElements = [];\r\n  this.initDynamicPropertyContainer(element);\r\n  var i;\r\n  var len = this.data.ef.length;\r\n  var eff;\r\n  var effects = this.data.ef;\r\n  for (i = 0; i < len; i += 1) {\r\n    eff = null;\r\n    switch (effects[i].ty) {\r\n      case 0:\r\n        eff = new SliderEffect(effects[i], element, this);\r\n        break;\r\n      case 1:\r\n        eff = new AngleEffect(effects[i], element, this);\r\n        break;\r\n      case 2:\r\n        eff = new ColorEffect(effects[i], element, this);\r\n        break;\r\n      case 3:\r\n        eff = new PointEffect(effects[i], element, this);\r\n        break;\r\n      case 4:\r\n      case 7:\r\n        eff = new CheckboxEffect(effects[i], element, this);\r\n        break;\r\n      case 10:\r\n        eff = new LayerIndexEffect(effects[i], element, this);\r\n        break;\r\n      case 11:\r\n        eff = new MaskIndexEffect(effects[i], element, this);\r\n        break;\r\n      case 5:\r\n        eff = new EffectsManager(effects[i], element, this);\r\n        break;\r\n        // case 6:\r\n      default:\r\n        eff = new NoValueEffect(effects[i], element, this);\r\n        break;\r\n    }\r\n    if (eff) {\r\n      this.effectElements.push(eff);\r\n    }\r\n  }\r\n};\r\n\r\n\r\nvar lottie = {};\r\n\r\nfunction setLocationHref(href) {\r\n  locationHref = href;\r\n}\r\n\r\nfunction searchAnimations() {\r\n  if (standalone === true) {\r\n    animationManager.searchAnimations(animationData, standalone, renderer);\r\n  } else {\r\n    animationManager.searchAnimations();\r\n  }\r\n}\r\n\r\nfunction setSubframeRendering(flag) {\r\n  subframeEnabled = flag;\r\n}\r\n\r\nfunction loadAnimation(params) {\r\n  if (standalone === true) {\r\n    params.animationData = JSON.parse(animationData);\r\n  }\r\n  return animationManager.loadAnimation(params);\r\n}\r\n\r\nfunction setQuality(value) {\r\n  if (typeof value === 'string') {\r\n    switch (value) {\r\n      case 'high':\r\n        defaultCurveSegments = 200;\r\n        break;\r\n      default:\r\n      case 'medium':\r\n        defaultCurveSegments = 50;\r\n        break;\r\n      case 'low':\r\n        defaultCurveSegments = 10;\r\n        break;\r\n    }\r\n  } else if (!isNaN(value) && value > 1) {\r\n    defaultCurveSegments = value;\r\n  }\r\n  if (defaultCurveSegments >= 50) {\r\n    roundValues(false);\r\n  } else {\r\n    roundValues(true);\r\n  }\r\n}\r\n\r\nfunction inBrowser() {\r\n  return typeof navigator !== 'undefined';\r\n}\r\n\r\nfunction installPlugin(type, plugin) {\r\n  if (type === 'expressions') {\r\n    expressionsPlugin = plugin;\r\n  }\r\n}\r\n\r\nfunction getFactory(name) {\r\n  switch (name) {\r\n    case 'propertyFactory':\r\n      return PropertyFactory;\r\n    case 'shapePropertyFactory':\r\n      return ShapePropertyFactory;\r\n    case 'matrix':\r\n      return Matrix;\r\n    default:\r\n      return null;\r\n  }\r\n}\r\n\r\nlottie.play = animationManager.play;\r\nlottie.pause = animationManager.pause;\r\nlottie.setLocationHref = setLocationHref;\r\nlottie.togglePause = animationManager.togglePause;\r\nlottie.setSpeed = animationManager.setSpeed;\r\nlottie.setDirection = animationManager.setDirection;\r\nlottie.stop = animationManager.stop;\r\nlottie.searchAnimations = searchAnimations;\r\nlottie.registerAnimation = animationManager.registerAnimation;\r\nlottie.loadAnimation = loadAnimation;\r\nlottie.setSubframeRendering = setSubframeRendering;\r\nlottie.resize = animationManager.resize;\r\n// lottie.start = start;\r\nlottie.goToAndStop = animationManager.goToAndStop;\r\nlottie.destroy = animationManager.destroy;\r\nlottie.setQuality = setQuality;\r\nlottie.inBrowser = inBrowser;\r\nlottie.installPlugin = installPlugin;\r\nlottie.freeze = animationManager.freeze;\r\nlottie.unfreeze = animationManager.unfreeze;\r\nlottie.setVolume = animationManager.setVolume;\r\nlottie.mute = animationManager.mute;\r\nlottie.unmute = animationManager.unmute;\r\nlottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\nlottie.__getFactory = getFactory;\r\nlottie.version = '5.7.8';\r\n\r\nfunction checkReady() {\r\n  if (document.readyState === 'complete') {\r\n    clearInterval(readyStateCheckInterval);\r\n    searchAnimations();\r\n  }\r\n}\r\n\r\nfunction getQueryVariable(variable) {\r\n  var vars = queryString.split('&');\r\n  for (var i = 0; i < vars.length; i += 1) {\r\n    var pair = vars[i].split('=');\r\n    if (decodeURIComponent(pair[0]) == variable) { // eslint-disable-line eqeqeq\r\n      return decodeURIComponent(pair[1]);\r\n    }\r\n  }\r\n  return null;\r\n}\r\nvar standalone = '__[STANDALONE]__';\r\nvar animationData = '__[ANIMATIONDATA]__';\r\nvar renderer = '';\r\nvar queryString;\r\nif (standalone) {\r\n  var scripts = document.getElementsByTagName('script');\r\n  var index = scripts.length - 1;\r\n  var myScript = scripts[index] || {\r\n    src: '',\r\n  };\r\n  queryString = myScript.src.replace(/^[^\\?]+\\??/, ''); // eslint-disable-line no-useless-escape\r\n  renderer = getQueryVariable('renderer');\r\n}\r\nvar readyStateCheckInterval = setInterval(checkReady, 100);\r\n\nreturn lottie;\n}));","import lottie from 'lottie-web';\n\nconst container = document.getElementById('svg-container');\n\nlottie.loadAnimation({\n    container, // the dom element that will contain the animation\n    renderer: 'svg',\n    loop: true,\n    autoplay: true,\n    path: '../JSON/LOTTIE_TEST_01.json' // the path to the animation json\n});"],"sourceRoot":""}